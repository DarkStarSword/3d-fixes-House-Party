// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a894f032d6cd1300-ps.txt
// 3DMigoto: a894f032d6cd1300 |    Unity headers extracted from kawetofe_highlightShaderUnity5WithOutline
//    Shader "kawetofe/highlightShaderUnity5WithOutline" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from kawetofe_highlightShaderUnity5WithOutline:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 64 3 2
//   undeciphered1a: 8
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 4 5 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1168
//   Vector 32 [_LightColor0]
//   Float 1084 [_Glossiness]
//   Float 1088 [_Metallic]
//   Vector 1104 [_Color]
//   Vector 1120 [_RimColor]
//   Float 1136 [_RimPower]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 48 [unity_SpecCube0_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 30
//   SetTexture 1 [unity_NHxRoughness] 2D 20
//   SetTexture 2 [unity_SpecCube0] CUBE 00
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 10
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:40:02 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[72], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a894f032d6cd1300-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r9.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample r1.xyzw, v1.xyxx, t0.xyzw, s3
mul r2.xyz, r1.xyzx, cb0[69].xyzx
dp3_sat r0.w, r0.xyzx, v2.xyzx
add r0.w, -r0.w, l(1.000000)
mul r3.xyz, cb0[70].xyzx, cb0[70].wwww
mul r3.xyz, r3.xyzx, l(20.000000, 20.000000, 20.000000, 0.000000)
log r0.w, r0.w
mul r0.w, r0.w, cb0[71].x
exp r0.w, r0.w
eq r1.w, cb4[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb4[0].y, l(1.000000)
  mul r4.xyz, v3.yyyy, cb4[2].xyzx
  mad r4.xyz, cb4[1].xyzx, v3.xxxx, r4.xyzx
  mad r4.xyz, cb4[3].xyzx, v3.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb4[4].xyzx
  movc r4.xyz, r1.wwww, r4.xyzx, v3.xyzx
  add r4.xyz, r4.xyzx, -cb4[6].xyzx
  mul r4.yzw, r4.xxyz, cb4[5].xxyz
  mad r1.w, r4.y, l(0.250000), l(0.750000)
  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
  max r4.x, r1.w, r2.w
  sample r4.xyzw, r4.xzwx, t3.xyzw, s1
else 
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
add r4.xw, -cb0[67].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
dp3 r2.w, -r0.xyzx, v2.xyzx
add r2.w, r2.w, r2.w
mad r5.xyz, v2.xyzx, -r2.wwww, -r0.xyzx
mul r6.xyz, r1.wwww, cb0[2].xyzx
mad r1.w, -r4.x, l(0.700000), l(1.700000)
mul r1.w, r1.w, r4.x
mul r1.w, r1.w, l(6.000000)
sample_l r5.xyzw, r5.xyzx, t2.xyzw, s0, r1.w
add r1.w, r5.w, l(-1.000000)
mad r1.w, cb3[3].w, r1.w, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb3[3].y
exp r1.w, r1.w
mul r1.w, r1.w, cb3[3].x
mul r5.xyz, r5.xyzx, r1.wwww
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r7.xyz, r1.wwww, v2.xyzx
mad r1.xyz, r1.xyzx, cb0[69].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r1.xyz, cb0[68].xxxx, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -cb0[68].x, l(0.960000), l(0.960000)
dp3 r2.w, r0.xyzx, r7.xyzx
add r3.w, r2.w, r2.w
mad r0.xyz, r7.xyzx, -r3.wwww, r0.xyzx
dp3_sat r3.w, r7.xyzx, cb2[0].xyzx
mov_sat r2.w, r2.w
dp3 r0.x, r0.xyzx, cb2[0].xyzx
add r0.y, -r2.w, l(1.000000)
mul r0.xy, r0.xyxx, r0.xyxx
mul r4.yz, r0.xxyx, r0.xxyx
add r0.x, -r1.w, cb0[67].w
add_sat r0.x, r0.x, l(1.000000)
sample r7.xyzw, r4.ywyy, t1.xyzw, s2
mul r0.y, r7.x, l(16.000000)
mul r4.xyw, r1.xyxz, r0.yyyy
mad r2.xyz, r2.xyzx, r1.wwww, r4.xywx
mul r4.xyw, r3.wwww, r6.xyxz
add r0.xyz, -r1.xyzx, r0.xxxx
mad r0.xyz, r4.zzzz, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, r5.xyzx
mad r0.xyz, r2.xyzx, r4.xywx, r0.xyzx
mad o0.xyz, r3.xyzx, r0.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used