// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f52752e762d0c3c2-ps.txt
// 3DMigoto: f52752e762d0c3c2 |    Unity headers extracted from Alloy_Core
//    Shader "Alloy/Core" {
//      CustomEditor "AlloyFieldBasedEditor"
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 4/5 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="DEFERRED" "PerformanceChecks"="False" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Alloy_Core:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 59 4 2
//   undeciphered1a: 6
//   Keywords { "SHADOWS_SHADOWMASK" "UNITY_HDR_ON" "_NORMALMAP" "EFFECT_BUMP" }
//   undeciphered2: 1 4 4 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1296
//   Vector 160 [_Color]
//   Vector 176 [_MainTex_ST]
//   Vector 192 [_MainTexVelocity] 2
//   Float 204 [_MainTexUV]
//   Float 240 [_BaseColorVertexTint]
//   Float 244 [_Metal]
//   Float 248 [_Specularity]
//   Float 252 [_SpecularTint]
//   Float 256 [_Roughness]
//   Float 260 [_Occlusion]
//   Float 264 [_BumpScale]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 752 [unity_ProbesOcclusion]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 10
//   SetTexture 1 [_SpecTex] 2D 20
//   SetTexture 2 [_BumpMap] 2D 30
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 00
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:59:52 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float       
// TEXCOORD                 1   xy          1     NONE   float       
// SV_POSITION              0   xyzw        2      POS   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[48], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f52752e762d0c3c2-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v4.xyzx, r7.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
lt r0.w, cb0[12].w, l(0.500000)
movc r1.xy, r0.wwww, v5.xyxx, v5.zwzz
mad r1.zw, cb0[12].xxxy, cb1[0].yyyy, cb0[11].zzzw
div r1.zw, r1.zzzw, cb0[11].xxxy
add r1.xy, r1.zwzz, r1.xyxx
mul r1.xy, r1.xyxx, cb0[11].xyxx
add r2.xyz, v3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, cb0[15].xxxx, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, cb0[10].xyzx
sample r3.xyzw, r1.xyxx, t0.xyzw, s1
mul_sat r2.xyz, r2.xyzx, r3.xyzx
sample r3.xyzw, r1.xyxx, t1.xyzw, s2
mad r0.w, r3.y, l(0.305306017), l(0.682171106)
mad r0.w, r3.y, r0.w, l(0.0125228781)
mad r0.w, r3.y, r0.w, l(-1.000000)
mad r0.w, cb0[16].y, r0.w, l(1.000000)
mul r1.zw, r3.xxxz, cb0[15].yyyz
sample r4.xyzw, r1.xyxx, t2.xyzw, s3
mul r4.x, r4.w, r4.x
mad r1.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, cb0[16].zzzz
dp2 r2.w, r1.xyxx, r1.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.w, r2.w
mul r4.xyz, r1.yyyy, v7.xyzx
mad r4.xyz, r1.xxxx, v6.xyzx, r4.xyzx
mad r4.xyz, r2.wwww, v8.xyzx, r4.xyzx
dp3 r1.x, r4.xyzx, r4.xyzx
rsq r1.x, r1.x
mul r4.xyz, r1.xxxx, r4.xyzx
dp3_sat r0.x, r4.xyzx, r0.xyzx
mul r0.y, r1.w, l(0.080000)
dp3 r0.z, r2.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
max r0.z, r0.z, l(0.000001)
div r1.xyw, r2.xyxz, r0.zzzz
add r1.xyw, r1.xyxw, l(-1.000000, -1.000000, 0.000000, -1.000000)
mad r1.xyw, cb0[15].wwww, r1.xyxw, l(1.000000, 1.000000, 0.000000, 1.000000)
mul r5.xyz, r0.yyyy, r1.xywx
mad r0.z, -cb0[15].y, r3.x, l(1.000000)
mul o0.xyz, r0.zzzz, r2.xyzx
mad r1.xyw, -r0.yyyy, r1.xyxw, r2.xyxz
mad o1.xyz, r1.zzzz, r1.xywx, r5.xyzx
add r0.x, r0.w, r0.x
mad r0.x, r0.x, r0.x, r0.w
add_sat o0.w, r0.x, l(-1.000000)
eq r0.x, cb3[0].x, l(1.000000)
if_nz r0.x
  eq r0.x, cb3[0].y, l(1.000000)
  mul r0.yzw, v4.yyyy, cb3[2].xxyz
  mad r0.yzw, cb3[1].xxyz, v4.xxxx, r0.yyzw
  mad r0.yzw, cb3[3].xxyz, v4.zzzz, r0.yyzw
  add r0.yzw, r0.yyzw, cb3[4].xxyz
  movc r0.xyz, r0.xxxx, r0.yzwy, v4.xyzx
  add r0.xyz, r0.xyzx, -cb3[6].xyzx
  mul r0.yzw, r0.xxyz, cb3[5].xxyz
  mad r0.y, r0.y, l(0.250000), l(0.750000)
  mad r1.x, cb3[0].z, l(0.500000), l(0.750000)
  max r0.x, r0.y, r1.x
  sample o4.xyzw, r0.xzwx, t3.xyzw, s0
else 
  mov o4.xyzw, cb2[47].xyzw
endif 
mad o1.w, -cb0[16].x, r3.w, l(1.000000)
mad o2.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o2.w, l(1.000000)
mov o3.xyzw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used