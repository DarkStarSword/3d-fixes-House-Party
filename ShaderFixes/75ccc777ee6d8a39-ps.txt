// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 75ccc777ee6d8a39-ps.txt
// 3DMigoto: 75ccc777ee6d8a39 |    Unity headers extracted from Standard (Specular setup)
//    Shader "Standard (Specular setup)" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
//      SubShader 1/2 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard (Specular setup):
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 195 8 8
//   undeciphered1a: 13
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_EXP2" "_ALPHATEST_ON" "_PARALLAXMAP" }
//   undeciphered2: 1 7 8 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1200
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 1088 [_Color]
//   Float 1104 [_Cutoff]
//   Float 1164 [_Glossiness]
//   Float 1172 [_OcclusionStrength]
//   Float 1176 [_Parallax]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_ParallaxMap] 2D 40
//   SetTexture 1 [_MainTex] 2D 20
//   SetTexture 2 [_ShadowMapTexture] 2D 50
//   SetTexture 3 [_OcclusionMap] 2D 30
//   SetTexture 4 [unity_SpecCube0] CUBE 00
//   SetTexture 5 [unity_SpecCube1] CUBE -10
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 10
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityReflectionProbes" 6
//   BindCB "UnityProbeVolume" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:28:20 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[74], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_constantbuffer cb7[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.w
dcl_input_ps linear v4.w
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 75ccc777ee6d8a39-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v3.w
mov r0.y, v4.w
mov r0.z, v5.w
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xy, r0.wwww, r0.xyxx
sample r1.xyzw, v1.xyxx, t0.xyzw, s4
mul r1.x, cb0[73].z, l(0.500000)
mad r1.x, r1.y, cb0[73].z, -r1.x
mad r0.z, r0.z, r0.w, l(0.420000)
div r0.xy, r0.xyxx, r0.zzzz
mad r0.xy, r1.xxxx, r0.xyxx, v1.xyxx
sample r1.xyzw, r0.xyxx, t1.xyzw, s2
mul r1.xyz, r1.xyzx, cb0[68].xyzx
mad r0.z, r1.w, cb0[68].w, -cb0[69].x
lt r0.z, r0.z, l(0.000000)
discard_nz r0.z
max r0.z, cb0[3].y, cb0[3].x
max r0.z, r0.z, cb0[3].z
add r0.z, -r0.z, l(1.000000)
mul r1.xyz, r0.zzzz, r1.xyzx
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v5.xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, v2.xyzx
add r4.xyz, -v8.xyzx, r14.xyzx
mov r5.x, cb4[9].z
mov r5.y, cb4[10].z
mov r5.z, cb4[11].z
dp3 r1.w, r4.xyzx, r5.xyzx
add r4.xyz, v8.xyzx, -cb3[25].xyzx
dp3 r3.w, r4.xyzx, r4.xyzx
sqrt r3.w, r3.w
add r3.w, -r1.w, r3.w
mad r1.w, cb3[25].w, r3.w, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r3.w, cb7[0].x, l(1.000000)
if_nz r3.w
  eq r4.x, cb7[0].y, l(1.000000)
  mul r4.yzw, v8.yyyy, cb7[2].xxyz
  mad r4.yzw, cb7[1].xxyz, v8.xxxx, r4.yyzw
  mad r4.yzw, cb7[3].xxyz, v8.zzzz, r4.yyzw
  add r4.yzw, r4.yyzw, cb7[4].xxyz
  movc r4.xyz, r4.xxxx, r4.yzwy, v8.xyzx
  add r4.xyz, r4.xyzx, -cb7[6].xyzx
  mul r4.yzw, r4.xxyz, cb7[5].xxyz
  mad r4.y, r4.y, l(0.250000), l(0.750000)
  mad r5.x, cb7[0].z, l(0.500000), l(0.750000)
  max r4.x, r4.y, r5.x
  sample r4.xyzw, r4.xzwx, t6.xyzw, s1
else 
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
div r4.yz, v7.xxyx, v7.wwww
sample r5.xyzw, r4.yzyy, t2.xyzw, s5
add_sat r1.w, r1.w, r5.x
min r4.x, r1.w, r4.x
movc r1.w, r3.w, r4.x, r1.w
sample r4.xyzw, r0.xyxx, t3.xyzw, s3
add r0.x, -cb0[73].y, l(1.000000)
mad r0.x, r4.y, cb0[73].y, r0.x
add r0.y, -cb0[72].w, l(1.000000)
dp3 r4.x, r3.xyzx, r2.xyzx
add r4.x, r4.x, r4.x
mad r4.xyz, r2.xyzx, -r4.xxxx, r3.xyzx
mul r5.xyz, r1.wwww, cb0[2].xyzx
if_nz r3.w
  eq r1.w, cb7[0].y, l(1.000000)
  mul r6.xyz, v8.yyyy, cb7[2].xyzx
  mad r6.xyz, cb7[1].xyzx, v8.xxxx, r6.xyzx
  mad r6.xyz, cb7[3].xyzx, v8.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb7[4].xyzx
  movc r6.xyz, r1.wwww, r6.xyzx, v8.xyzx
  add r6.xyz, r6.xyzx, -cb7[6].xyzx
  mul r6.yzw, r6.xxyz, cb7[5].xxyz
  mul r1.w, r6.y, l(0.250000)
  mul r3.w, cb7[0].z, l(0.500000)
  mad r4.w, -cb7[0].z, l(0.500000), l(0.250000)
  max r1.w, r1.w, r3.w
  min r6.x, r4.w, r1.w
  sample r7.xyzw, r6.xzwx, t6.xyzw, s1
  add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r8.xyzw, r8.xyzx, t6.xyzw, s1
  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t6.xyzw, s1
  mov r2.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r2.xyzw
  dp4 r7.y, r8.xyzw, r2.xyzw
  dp4 r7.z, r6.xyzw, r2.xyzw
else 
  mov r2.w, l(1.000000)
  dp4 r7.x, cb2[39].xyzw, r2.xyzw
  dp4 r7.y, cb2[40].xyzw, r2.xyzw
  dp4 r7.z, cb2[41].xyzw, r2.xyzw
endif 
add r6.xyz, r7.xyzx, v6.xyzx
max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), cb6[2].w
if_nz r1.w
  dp3 r1.w, r4.xyzx, r4.xyzx
  rsq r1.w, r1.w
  mul r7.xyz, r1.wwww, r4.xyzx
  add r8.xyz, -v8.xyzx, cb6[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -v8.xyzx, cb6[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r1.w, r8.y, r8.x
  min r1.w, r8.z, r1.w
  add r8.xyz, v8.xyzx, -cb6[2].xyzx
  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
else 
  mov r7.xyz, r4.xyzx
endif 
mad r1.w, -r0.y, l(0.700000), l(1.700000)
mul r1.w, r0.y, r1.w
mul r1.w, r1.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r1.w
add r2.w, r7.w, l(-1.000000)
mad r2.w, cb6[3].w, r2.w, l(1.000000)
log r2.w, r2.w
mul r2.w, r2.w, cb6[3].y
exp r2.w, r2.w
mul r2.w, r2.w, cb6[3].x
mul r8.xyz, r7.xyzx, r2.wwww
lt r3.w, cb6[1].w, l(0.999990)
if_nz r3.w
  lt r3.w, l(0.000000), cb6[6].w
  if_nz r3.w
    dp3 r3.w, r4.xyzx, r4.xyzx
    rsq r3.w, r3.w
    mul r9.xyz, r3.wwww, r4.xyzx
    add r10.xyz, -v8.xyzx, cb6[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -v8.xyzx, cb6[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r3.w, r10.y, r10.x
    min r3.w, r10.z, r3.w
    add r10.xyz, v8.xyzx, -cb6[6].xyzx
    mad r4.xyz, r9.xyzx, r3.wwww, r10.xyzx
  endif 
  sample_l r4.xyzw, r4.xyzx, t5.xyzw, s0, r1.w
  add r1.w, r4.w, l(-1.000000)
  mad r1.w, cb6[7].w, r1.w, l(1.000000)
  log r1.w, r1.w
  mul r1.w, r1.w, cb6[7].y
  exp r1.w, r1.w
  mul r1.w, r1.w, cb6[7].x
  mul r4.xyz, r4.xyzx, r1.wwww
  mad r7.xyz, r2.wwww, r7.xyzx, -r4.xyzx
  mad r8.xyz, cb6[1].wwww, r7.xyzx, r4.xyzx
endif 
mul r4.xyz, r0.xxxx, r8.xyzx
mad r7.xyz, -v2.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r7.xyzx, r7.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r7.xyz, r0.wwww, r7.xyzx
dp3 r0.w, r2.xyzx, -r3.xyzx
dp3_sat r1.w, r2.xyzx, cb2[0].xyzx
dp3_sat r2.x, r2.xyzx, r7.xyzx
dp3_sat r2.y, cb2[0].xyzx, r7.xyzx
mul r2.z, r2.y, r2.y
dp2 r2.z, r2.zzzz, r0.yyyy
add r2.z, r2.z, l(-0.500000)
add r2.w, -r1.w, l(1.000000)
mul r3.x, r2.w, r2.w
mul r3.x, r3.x, r3.x
mul r2.w, r2.w, r3.x
mad r2.w, r2.z, r2.w, l(1.000000)
add r3.x, -|r0.w|, l(1.000000)
mul r3.y, r3.x, r3.x
mul r3.y, r3.y, r3.y
mul r3.x, r3.x, r3.y
mad r2.z, r2.z, r3.x, l(1.000000)
mul r2.z, r2.z, r2.w
mul r2.z, r1.w, r2.z
mul r0.y, r0.y, r0.y
max r0.y, r0.y, l(0.002000)
add r2.w, -r0.y, l(1.000000)
mad r3.y, |r0.w|, r2.w, r0.y
mad r2.w, r1.w, r2.w, r0.y
mul r0.w, |r0.w|, r2.w
mad r0.w, r1.w, r3.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r2.w, r0.y, r0.y
mad r3.y, r2.x, r2.w, -r2.x
mad r2.x, r3.y, r2.x, l(1.000000)
mul r2.w, r2.w, l(0.318309873)
mad r2.x, r2.x, r2.x, l(1.000000012E-007)
div r2.x, r2.w, r2.x
mul r0.w, r0.w, r2.x
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r1.w, r0.w
max r0.w, r0.w, l(0.000000)
mad r0.y, r0.y, r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
dp3 r1.w, cb0[3].xyzx, cb0[3].xyzx
ne r1.w, r1.w, l(0.000000)
and r1.w, r1.w, l(0x3f800000)
mul r0.w, r0.w, r1.w
add r0.z, -r0.z, cb0[72].w
add_sat r0.z, r0.z, l(1.000000)
mul r2.xzw, r2.zzzz, r5.xxyz
mad r2.xzw, r6.xxyz, r0.xxxx, r2.xxzw
mul r3.yzw, r5.xxyz, r0.wwww
add r0.x, -r2.y, l(1.000000)
mul r0.w, r0.x, r0.x
mul r0.w, r0.w, r0.w
mul r0.x, r0.x, r0.w
add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, r5.xyzx, r0.xxxx, cb0[3].xyzx
mul r3.yzw, r3.yyzw, r5.xxyz
mad r1.xyz, r1.xyzx, r2.xzwx, r3.yzwy
mul r0.xyw, r4.xyxz, r0.yyyy
add r2.xyz, r0.zzzz, -cb0[3].xyzx
mad r2.xyz, r3.xxxx, r2.xyzx, cb0[3].xyzx
mad r0.xyz, r0.xywx, r2.xyzx, r1.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb5[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used