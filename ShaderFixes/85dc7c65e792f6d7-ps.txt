// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 85dc7c65e792f6d7-ps.txt
// 3DMigoto: 85dc7c65e792f6d7 | Matched 2 variants of 1 shaders: Alloy/Core
//
//       Unity headers extracted from Alloy_Core
//       Shader "Alloy/Core" {
//         CustomEditor "AlloyFieldBasedEditor"
//         Fallback "VertexLit"
//         SubShader 1/1 {
//           LOD 300
//           Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//           Pass 4/5 {
//             Name "DEFERRED"
//             Tags { "LIGHTMODE"="DEFERRED" "PerformanceChecks"="False" "RenderType"="Opaque" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Alloy_Core:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201708220 76 6 4
//      undeciphered1a: 7
// 1:   Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" "_NORMALMAP" }
// 2:   Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "UNITY_HDR_ON" }
//      undeciphered2: 1 3 4 3 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 1296
//      Vector 160 [_Color]
//      Vector 176 [_MainTex_ST]
//      Vector 192 [_MainTexVelocity] 2
//      Float 204 [_MainTexUV]
//      Float 240 [_BaseColorVertexTint]
//      Float 244 [_Metal]
//      Float 248 [_Specularity]
//      Float 252 [_SpecularTint]
//      Float 256 [_Roughness]
//      Float 260 [_Occlusion]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 768
//      Vector 624 [unity_SHAr]
//      Vector 640 [unity_SHAg]
//      Vector 656 [unity_SHAb]
//      Vector 752 [unity_ProbesOcclusion]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 10
//      SetTexture 1 [_SpecTex] 2D 20
//      SetTexture 2 [unity_ProbeVolumeSH] 3D 00
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:31:57 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 1   xy          1     NONE   float       
// SV_POSITION              0   xyzw        2      POS   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[48], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear v0.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 85dc7c65e792f6d7-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v6.xyzx, v6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v6.xyzx
add r1.xyz, -v4.xyzx, r8.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
lt r1.w, cb0[12].w, l(0.500000)
movc r2.xy, r1.wwww, v5.xyxx, v5.zwzz
mad r2.zw, cb0[12].xxxy, cb1[0].yyyy, cb0[11].zzzw
div r2.zw, r2.zzzw, cb0[11].xxxy
add r2.xy, r2.zwzz, r2.xyxx
mul r2.xy, r2.xyxx, cb0[11].xyxx
dp3_sat r1.x, r0.xyzx, r1.xyzx
add r1.yzw, v3.xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r1.yzw, cb0[15].xxxx, r1.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r1.yzw, r1.yyzw, cb0[10].xxyz
sample r3.xyzw, r2.xyxx, t0.xyzw, s1
mul_sat r1.yzw, r1.yyzw, r3.xxyz
sample r2.xyzw, r2.xyxx, t1.xyzw, s2
mad r3.x, r2.y, l(0.305306017), l(0.682171106)
mad r3.x, r2.y, r3.x, l(0.0125228781)
mad r2.y, r2.y, r3.x, l(-1.000000)
mad r2.y, cb0[16].y, r2.y, l(1.000000)
mul r3.xy, r2.xzxx, cb0[15].yzyy
mul r2.z, r3.y, l(0.080000)
dp3 r3.y, r1.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
max r3.y, r3.y, l(0.000001)
div r3.yzw, r1.yyzw, r3.yyyy
add r3.yzw, r3.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r3.yzw, cb0[15].wwww, r3.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r4.xyz, r2.zzzz, r3.yzwy
mad r2.x, -cb0[15].y, r2.x, l(1.000000)
mul r5.xyz, r1.yzwy, r2.xxxx
mad r1.yzw, -r2.zzzz, r3.yyzw, r1.yyzw
mad r1.yzw, r3.xxxx, r1.yyzw, r4.xxyz
add r1.x, r1.x, r2.y
mad r1.x, r1.x, r1.x, r2.y
add_sat r5.w, r1.x, l(-1.000000)
eq r1.x, cb3[0].x, l(1.000000)
if_nz r1.x
  eq r2.x, cb3[0].y, l(1.000000)
  mul r3.xyz, v4.yyyy, cb3[2].xyzx
  mad r3.xyz, cb3[1].xyzx, v4.xxxx, r3.xyzx
  mad r3.xyz, cb3[3].xyzx, v4.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb3[4].xyzx
  movc r3.xyz, r2.xxxx, r3.xyzx, v4.xyzx
  add r3.xyz, r3.xyzx, -cb3[6].xyzx
  mul r3.yzw, r3.xxyz, cb3[5].xxyz
  mul r2.x, r3.y, l(0.250000)
  mul r2.z, cb3[0].z, l(0.500000)
  mad r3.y, -cb3[0].z, l(0.500000), l(0.250000)
  max r2.x, r2.z, r2.x
  min r3.x, r3.y, r2.x
  sample r4.xyzw, r3.xzwx, t2.xyzw, s0
  add r6.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t2.xyzw, s0
  add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r3.xyzw, r3.xyzx, t2.xyzw, s0
  mov r0.w, l(1.000000)
  dp4 r4.x, r4.xyzw, r0.xyzw
  dp4 r4.y, r6.xyzw, r0.xyzw
  dp4 r4.z, r3.xyzw, r0.xyzw
else 
  mov r0.w, l(1.000000)
  dp4 r4.x, cb2[39].xyzw, r0.xyzw
  dp4 r4.y, cb2[40].xyzw, r0.xyzw
  dp4 r4.z, cb2[41].xyzw, r0.xyzw
endif 
add r3.xyz, r4.xyzx, v0.xyzx
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.xyz, r2.yyyy, r3.xyzx
add r0.w, -r5.w, l(1.000000)
mad r3.xyz, r1.yzwy, r0.wwww, r5.xyzx
mul r2.xyz, r2.xyzx, r3.xyzx
if_nz r1.x
  eq r0.w, cb3[0].y, l(1.000000)
  mul r3.xyz, v4.yyyy, cb3[2].xyzx
  mad r3.xyz, cb3[1].xyzx, v4.xxxx, r3.xyzx
  mad r3.xyz, cb3[3].xyzx, v4.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb3[4].xyzx
  movc r3.xyz, r0.wwww, r3.xyzx, v4.xyzx
  add r3.xyz, r3.xyzx, -cb3[6].xyzx
  mul r3.yzw, r3.xxyz, cb3[5].xxyz
  mad r0.w, r3.y, l(0.250000), l(0.750000)
  mad r1.x, cb3[0].z, l(0.500000), l(0.750000)
  max r3.x, r0.w, r1.x
  sample o4.xyzw, r3.xzwx, t2.xyzw, s0
else 
  mov o4.xyzw, cb2[47].xyzw
endif 
min o3.xyz, r2.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000)
mad o1.w, -cb0[16].x, r2.w, l(1.000000)
mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o0.xyzw, r5.xyzw
mov o1.xyz, r1.yzwy
mov o2.w, l(1.000000)
mov o3.w, l(0)
ret 
// Approximately 0 instruction slots used