// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7caad60f28cdc0e1-ps.txt
// 3DMigoto: 7caad60f28cdc0e1 |    Unity headers extracted from Legacy Shaders_Reflective_Bumped Specular
//    Shader "Legacy Shaders/Reflective/Bumped Specular" {
//      Fallback "Legacy Shaders/Reflective/Bumped Diffuse"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 5/6 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Legacy Shaders_Reflective_Bumped Specular:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 57 7 4
//   undeciphered1a: 7
//   Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
//   undeciphered2: 1 4 4 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1184
//   Vector 48 [_SpecColor]
//   Vector 1088 [_Color]
//   Vector 1104 [_ReflectColor]
//   Float 1120 [_Shininess]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 752 [unity_ProbesOcclusion]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 10
//   SetTexture 1 [_BumpMap] 2D 20
//   SetTexture 2 [_Cube] CUBE 30
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 00
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:29:53 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[71], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[48], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7caad60f28cdc0e1-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r8.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s1
mul r2.xyz, r2.xyzx, cb0[68].xyzx
sample r3.xyzw, v1.zwzz, t1.xyzw, s2
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.x, r3.xyxx, r3.xyxx
min r0.x, r0.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
sqrt r3.z, r0.x
dp3 r4.x, v2.xyzx, r3.xyzx
dp3 r4.y, v3.xyzx, r3.xyzx
dp3 r4.z, v4.xyzx, r3.xyzx
dp3 r0.x, -r1.xyzx, r4.xyzx
add r0.x, r0.x, r0.x
mad r1.xyz, r4.xyzx, -r0.xxxx, -r1.xyzx
sample r1.xyzw, r1.xyzx, t2.xyzw, s3
mul r1.xyz, r2.wwww, r1.xyzx
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, r4.xyzx
eq r0.x, cb3[0].x, l(1.000000)
if_nz r0.x
  eq r1.w, cb3[0].y, l(1.000000)
  mul r4.xyz, v3.wwww, cb3[2].xyzx
  mad r4.xyz, cb3[1].xyzx, v2.wwww, r4.xyzx
  mad r4.xyz, cb3[3].xyzx, v4.wwww, r4.xyzx
  add r4.xyz, r4.xyzx, cb3[4].xyzx
  movc r0.yzw, r1.wwww, r4.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb3[6].xxyz
  mul r4.yzw, r0.yyzw, cb3[5].xxyz
  mul r0.y, r4.y, l(0.250000)
  mul r0.z, cb3[0].z, l(0.500000)
  mad r0.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r4.x, r0.w, r0.y
  sample r5.xyzw, r4.xzwx, t3.xyzw, s0
  add r0.yzw, r4.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r6.xyzw, r0.yzwy, t3.xyzw, s0
  add r0.yzw, r4.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r4.xyzw, r0.yzwy, t3.xyzw, s0
  mov r3.w, l(1.000000)
  dp4 r5.x, r5.xyzw, r3.xyzw
  dp4 r5.y, r6.xyzw, r3.xyzw
  dp4 r5.z, r4.xyzw, r3.xyzw
else 
  mov r3.w, l(1.000000)
  dp4 r5.x, cb2[39].xyzw, r3.xyzw
  dp4 r5.y, cb2[40].xyzw, r3.xyzw
  dp4 r5.z, cb2[41].xyzw, r3.xyzw
endif 
add r0.yzw, r5.xxyz, v6.xxyz
max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r4.xyz, r2.wwww, cb0[3].xyzx
mul o1.xyz, r4.xyzx, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
mad o2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mul r0.yzw, r0.yyzw, r2.xxyz
mad r0.yzw, r1.xxyz, cb0[69].xxyz, r0.yyzw
if_nz r0.x
  eq r0.x, cb3[0].y, l(1.000000)
  and r1.xyz, r0.xxxx, cb3[4].xyzx
  add r1.xyz, r1.xyzx, -cb3[6].xyzx
  mul r1.yzw, r1.xxyz, cb3[5].xxyz
  mad r0.x, r1.y, l(0.250000), l(0.750000)
  mad r1.y, cb3[0].z, l(0.500000), l(0.750000)
  max r1.x, r0.x, r1.y
  sample o4.xyzw, r1.xzwx, t3.xyzw, s0
else 
  mov o4.xyzw, cb2[47].xyzw
endif 
exp o3.xyz, -r0.yzwy
mov o0.xyz, r2.xyzx
mov o0.w, l(1.000000)
mov o1.w, cb0[70].x
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret 
// Approximately 0 instruction slots used