// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed b685d48edce08cac-vs.txt
// 3DMigoto: b685d48edce08cac | Matched 2 variants of 1 shaders: Shader Forge/DiffuseSpecNormOffset_AlphaRotate_IBL
//
//       Unity headers extracted from Shader Forge_DiffuseSpecNormOffset_AlphaRotate_IBL
//       Shader "Shader Forge/DiffuseSpecNormOffset_AlphaRotate_IBL" {
//         CustomEditor "ShaderForgeMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//           Pass 3/3 {
//             Name "FORWARD_DELTA"
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "RenderType"="Transparent" }
//             ZWrite Off
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Shader Forge_DiffuseSpecNormOffset_AlphaRotate_IBL:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201708220 31 0 0
//      undeciphered1a: 4
// 1:   Keywords { "POINT" }
// 2:   Keywords { "POINT_COOKIE" }
//      undeciphered2: 1 0 3 0 0 0
//      undeciphered3: 143 5 0 0 1 2 7 8 3 4 2 1
//      ConstBuffer "$Globals" 1408
//      Matrix 1056 [unity_WorldToLight]
//      ConstBuffer "UnityPerDraw" 160
//      Matrix 0 [unity_ObjectToWorld]
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 272 [unity_MatrixVP]
//      BindCB "$Globals" 0
//      BindCB "UnityPerDraw" 1
//      BindCB "UnityPerFrame" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:43:19 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// COLOR                    0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// COLOR                    0   xyzw        7     NONE   float   xyzw
// TEXCOORD                 6   xyz         8     NONE   float   xyz 
//
vs_4_0
dcl_constantbuffer cb0[70], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xy
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyz
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
add r1.xyzw, r0.xyzw, cb1[3].xyzw
mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
mul r2.xyzw, r1.yyyy, cb2[18].xyzw
mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
mad r1.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed b685d48edce08cac-vs.txt
ne r4.w, r1.w, l(1.0)
if_nz r4.w
  add r4.w, r1.w, -r4.y
  mad r1.x, r4.w, r4.x, r1.x
endif

mov o6.xyzw, r1.xyzw
mov o1.xy, v3.xyxx
mov o2.xyzw, r0.xyzw
dp3 r1.x, v1.xyzx, cb1[4].xyzx
dp3 r1.y, v1.xyzx, cb1[5].xyzx
dp3 r1.z, v1.xyzx, cb1[6].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mov o3.xyz, r1.xyzx
mul r2.xyz, v2.yyyy, cb1[1].xyzx
mad r2.xyz, cb1[0].xyzx, v2.xxxx, r2.xyzx
mad r2.xyz, cb1[2].xyzx, v2.zzzz, r2.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mov o4.xyz, r2.xyzx
mul r3.xyz, r1.zxyz, r2.yzxy
mad r1.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
mul r1.xyz, r1.xyzx, v2.wwww
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul o5.xyz, r1.wwww, r1.xyzx
mov o7.xyzw, v4.xyzw
mul r1.xyz, r0.yyyy, cb0[67].xyzx
mad r1.xyz, cb0[66].xyzx, r0.xxxx, r1.xyzx
mad r0.xyz, cb0[68].xyzx, r0.zzzz, r1.xyzx
mad o8.xyz, cb0[69].xyzx, r0.wwww, r0.xyzx
ret 
// Approximately 0 instruction slots used