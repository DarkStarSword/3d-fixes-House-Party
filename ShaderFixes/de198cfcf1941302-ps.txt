// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed de198cfcf1941302-ps.txt
// 3DMigoto: de198cfcf1941302 |    Unity headers extracted from Alloy_Core
//    Shader "Alloy/Core" {
//      CustomEditor "AlloyFieldBasedEditor"
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD_DELTA"
//          Tags { "LIGHTMODE"="FORWARDADD" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Alloy_Core:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 144 7 2
//   undeciphered1a: 9
//   Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_EXP2" "_NORMALMAP" "EFFECT_BUMP" }
//   undeciphered2: 1 7 7 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1360
//   Vector 0 [_LightColor0]
//   Vector 160 [_Color]
//   Vector 176 [_MainTex_ST]
//   Vector 192 [_MainTexVelocity] 2
//   Float 204 [_MainTexUV]
//   Float 240 [_BaseColorVertexTint]
//   Float 244 [_Metal]
//   Float 248 [_Specularity]
//   Float 252 [_SpecularTint]
//   Float 256 [_Roughness]
//   Float 260 [_Occlusion]
//   Float 264 [_BumpScale]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 20
//   SetTexture 1 [_SpecTex] 2D 30
//   SetTexture 2 [_BumpMap] 2D 40
//   SetTexture 3 [_ShadowMapTexture] 2D 50
//   SetTexture 4 [_LightTexture0] 2D 60
//   SetTexture 5 [unity_ShadowMask] 2D 00
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 10
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:54:26 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 1   xyzw        1     NONE   float   xy  
// SV_POSITION              0   xyzw        2      POS   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   x   
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyz         8     NONE   float   xyz 
// TEXCOORD                 8   xyz         9     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xy
dcl_input_ps_siv linear noperspective v2.w, position
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.x
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_input_ps linear v9.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed de198cfcf1941302-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v4.xyzx, r10.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
lt r0.w, cb0[12].w, l(0.500000)
movc r2.xy, r0.wwww, v6.xyxx, v6.zwzz
mad r2.zw, cb0[12].xxxy, cb1[0].yyyy, cb0[11].zzzw
div r2.zw, r2.zzzw, cb0[11].xxxy
add r2.xy, r2.zwzz, r2.xyxx
mul r2.xy, r2.xyxx, cb0[11].xyxx
add r3.xyz, v3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, cb0[15].xxxx, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r3.xyz, r3.xyzx, cb0[10].xyzx
sample r4.xyzw, r2.xyxx, t0.xyzw, s2
mul_sat r3.xyz, r3.xyzx, r4.xyzx
sample r4.xyzw, r2.xyxx, t1.xyzw, s3
mad r0.w, r4.y, l(0.305306017), l(0.682171106)
mad r0.w, r4.y, r0.w, l(0.0125228781)
mad r0.w, r4.y, r0.w, l(-1.000000)
mad r0.w, cb0[16].y, r0.w, l(1.000000)
mul r2.zw, r4.xxxz, cb0[15].yyyz
mul r1.w, r4.w, cb0[16].x
sample r5.xyzw, r2.xyxx, t2.xyzw, s4
mul r5.x, r5.w, r5.x
mad r2.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, cb0[16].zzzz
dp2 r3.w, r2.xyxx, r2.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.w, r3.w
mul r4.yzw, r2.yyyy, v8.xxyz
mad r4.yzw, r2.xxxx, v7.xxyz, r4.yyzw
mad r4.yzw, r3.wwww, v9.xxyz, r4.yyzw
dp3 r2.x, r4.yzwy, r4.yzwy
rsq r2.x, r2.x
mul r4.yzw, r2.xxxx, r4.yyzw
dp3 r2.x, -r1.xyzx, r4.yzwy
add r2.x, r2.x, r2.x
mad r5.xyz, r4.yzwy, -r2.xxxx, -r1.xyzx
dp3_sat r2.x, r4.yzwy, r1.xyzx
mad r2.y, r2.x, l(-5.554730), l(-6.983160)
mul r2.y, r2.x, r2.y
exp r2.y, r2.y
mul r2.w, r2.w, l(0.080000)
dp3 r3.w, r3.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
max r3.w, r3.w, l(0.000001)
div r6.xyz, r3.xyzx, r3.wwww
add r6.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r6.xyz, cb0[15].wwww, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r7.xyz, r2.wwww, r6.xyzx
mad r3.w, -cb0[15].y, r4.x, l(1.000000)
mul r8.xyz, r3.wwww, r3.xyzx
mad r3.xyz, -r2.wwww, r6.xyzx, r3.xyzx
mad r3.xyz, r2.zzzz, r3.xyzx, r7.xyzx
mad r2.z, r1.w, l(0.950000), l(0.050000)
mul r2.z, r2.z, r2.z
add r2.x, r0.w, r2.x
mad r0.w, r2.x, r2.x, r0.w
add_sat r0.w, r0.w, l(-1.000000)
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r0.x, r0.xyzx, r6.xyzx
add r6.xyz, v4.xyzx, -cb3[25].xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
sqrt r0.y, r0.y
add r0.y, -r0.x, r0.y
mad r0.x, cb3[25].w, r0.y, r0.x
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
eq r0.y, cb6[0].x, l(1.000000)
if_nz r0.y
  eq r0.y, cb6[0].y, l(1.000000)
  mul r6.xyz, v4.yyyy, cb6[2].xyzx
  mad r6.xyz, cb6[1].xyzx, v4.xxxx, r6.xyzx
  mad r6.xyz, cb6[3].xyzx, v4.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb6[4].xyzx
  movc r6.xyz, r0.yyyy, r6.xyzx, v4.xyzx
  add r6.xyz, r6.xyzx, -cb6[6].xyzx
  mul r6.yzw, r6.xxyz, cb6[5].xxyz
  mad r0.y, r6.y, l(0.250000), l(0.750000)
  mad r0.z, cb6[0].z, l(0.500000), l(0.750000)
  max r6.x, r0.z, r0.y
  sample r6.xyzw, r6.xzwx, t6.xyzw, s1
else 
  sample r6.xyzw, v0.xyxx, t5.xyzw, s0
endif 
dp4_sat r0.y, r6.xyzw, cb2[46].xyzw
div r2.xw, v0.zzzw, v2.wwww
sample r6.xyzw, r2.xwxx, t3.xyzw, s5
add_sat r0.x, r0.x, r6.x
min r0.x, r0.y, r0.x
sample r6.xyzw, v1.xyxx, t4.xyzw, s6
mul r6.xyz, r6.wwww, r6.xyzx
mul r6.xyz, r6.xyzx, cb0[0].xyzx
mul r0.y, |cb0[0].w|, l(0.100000)
dp3 r0.z, cb2[0].xyzx, r5.xyzx
mad r5.xyz, r0.zzzz, r5.xyzx, -cb2[0].xyzx
dp3 r0.z, r5.xyzx, r5.xyzx
rsq r0.z, r0.z
mul r0.y, r0.z, r0.y
min r0.y, r0.y, l(1.000000)
mad r5.xyz, r5.xyzx, r0.yyyy, cb2[0].xyzx
dp3 r0.y, r5.xyzx, r5.xyzx
rsq r0.y, r0.y
mul r0.z, r0.y, |cb0[0].w|
mad r0.z, r0.z, l(0.050000), r2.z
min r0.z, r0.z, l(1.000000)
div r0.z, r2.z, r0.z
mul r7.xyz, r0.yyyy, r5.xyzx
mul r0.z, r0.z, r0.z
mad r1.xyz, r5.xyzx, r0.yyyy, r1.xyzx
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r1.xyz, r0.yyyy, r1.xyzx
dp3_sat r0.y, r7.xyzx, r1.xyzx
dp3_sat r1.x, r4.yzwy, r1.xyzx
dp3_sat r1.y, r4.yzwy, cb2[0].xyzx
lt r1.z, l(0.000000), cb0[0].w
and r0.z, r0.z, r1.z
mul r1.z, r0.y, r0.y
mad r2.x, r1.y, l(-5.554730), l(-6.983160)
mul r2.x, r1.y, r2.x
exp r2.x, r2.x
dp2 r1.w, r1.wwww, r1.zzzz
add r1.w, r1.w, l(-0.500000)
mad r2.x, r2.x, r1.w, l(1.000000)
mad r1.w, r2.y, r1.w, l(1.000000)
mul r1.w, r1.w, r2.x
mad r2.x, r0.y, l(-5.554730), l(-6.983160)
mul r0.y, r0.y, r2.x
exp r0.y, r0.y
add r2.xyw, -r3.xyxz, l(1.000000, 1.000000, 0.000000, 1.000000)
mad r2.xyw, r0.yyyy, r2.xyxw, r3.xyxz
mul r0.y, r2.z, r2.z
mul r3.x, r0.y, l(0.250000)
mad r0.y, -r0.y, l(0.250000), l(1.000000)
mad r0.y, r1.z, r0.y, r3.x
mul r1.x, r1.x, r1.x
mad r1.z, r2.z, r2.z, l(-1.000000)
mad r1.x, r1.x, r1.z, l(1.000000)
mul r1.x, r1.x, r1.x
mul r0.y, r0.y, r1.x
div r0.y, r3.x, r0.y
mul r0.y, r0.w, r0.y
mul r0.y, r0.z, r0.y
mul r0.yzw, r0.yyyy, r2.xxyw
mul r0.x, r0.x, r1.y
mad r0.yzw, r8.xxyz, r1.wwww, r0.yyzw
mul r0.xyz, r0.yzwy, r0.xxxx
mul r0.xyz, r0.xyzx, r6.xyzx
div r0.w, v5.x, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb5[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
mul r0.xyz, r0.xyzx, r0.wwww
min o0.xyz, r0.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used