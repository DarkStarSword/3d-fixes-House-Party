// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0a29e24d2a7ad376-ps.txt
// 3DMigoto: 0a29e24d2a7ad376 |    Unity headers extracted from Alloy_Core
//    Shader "Alloy/Core" {
//      CustomEditor "AlloyFieldBasedEditor"
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Alloy_Core:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 214 9 9
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_NORMALMAP" "EFFECT_BUMP" }
//   undeciphered2: 1 8 7 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1296
//   Vector 0 [_LightColor0]
//   Vector 160 [_Color]
//   Vector 176 [_MainTex_ST]
//   Vector 192 [_MainTexVelocity] 2
//   Float 204 [_MainTexUV]
//   Float 240 [_BaseColorVertexTint]
//   Float 244 [_Metal]
//   Float 248 [_Specularity]
//   Float 252 [_SpecularTint]
//   Float 256 [_Roughness]
//   Float 260 [_Occlusion]
//   Float 264 [_BumpScale]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 30
//   SetTexture 1 [_SpecTex] 2D 40
//   SetTexture 2 [_BumpMap] 2D 50
//   SetTexture 3 [_ShadowMapTexture] 2D 60
//   SetTexture 4 [unity_ShadowMask] 2D 00
//   SetTexture 5 [unity_SpecCube0] CUBE 10
//   SetTexture 6 [unity_SpecCube1] CUBE -10
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 20
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityReflectionProbes" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:04:41 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 1   xyzw        1     NONE   float   xyzw
// SV_POSITION              0   xyzw        2      POS   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xyzw
dcl_input_ps_siv linear noperspective v2.w, position
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0a29e24d2a7ad376-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v4.xyzx, r15.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
lt r0.w, cb0[12].w, l(0.500000)
movc r2.xy, r0.wwww, v5.xyxx, v5.zwzz
mad r2.zw, cb0[12].xxxy, cb1[0].yyyy, cb0[11].zzzw
div r2.zw, r2.zzzw, cb0[11].xxxy
add r2.xy, r2.zwzz, r2.xyxx
mul r2.xy, r2.xyxx, cb0[11].xyxx
add r3.xyz, v3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, cb0[15].xxxx, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r3.xyz, r3.xyzx, cb0[10].xyzx
sample r4.xyzw, r2.xyxx, t0.xyzw, s3
mul_sat r3.xyz, r3.xyzx, r4.xyzx
sample r4.xyzw, r2.xyxx, t1.xyzw, s4
mad r0.w, r4.y, l(0.305306017), l(0.682171106)
mad r0.w, r4.y, r0.w, l(0.0125228781)
mad r0.w, r4.y, r0.w, l(-1.000000)
mad r0.w, cb0[16].y, r0.w, l(1.000000)
mul r2.zw, r4.xxxz, cb0[15].yyyz
mul r1.w, r4.w, cb0[16].x
sample r5.xyzw, r2.xyxx, t2.xyzw, s5
mul r5.x, r5.w, r5.x
mad r2.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, cb0[16].zzzz
dp2 r3.w, r2.xyxx, r2.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.w, r3.w
mul r4.yzw, r2.yyyy, v7.xxyz
mad r4.yzw, r2.xxxx, v6.xxyz, r4.yyzw
mad r4.yzw, r3.wwww, v8.xxyz, r4.yyzw
dp3 r2.x, r4.yzwy, r4.yzwy
rsq r2.x, r2.x
mul r5.xyz, r2.xxxx, r4.yzwy
dp3 r2.x, -r1.xyzx, r5.xyzx
add r2.x, r2.x, r2.x
mad r4.yzw, r5.xxyz, -r2.xxxx, -r1.xxyz
dp3_sat r2.x, r5.xyzx, r1.xyzx
mul r2.y, r2.x, l(-9.280000)
mad r3.w, r2.x, l(-5.554730), l(-6.983160)
mul r3.w, r2.x, r3.w
exp r3.w, r3.w
mul r2.w, r2.w, l(0.080000)
dp3 r6.x, r3.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
max r6.x, r6.x, l(0.000001)
div r6.xyz, r3.xyzx, r6.xxxx
add r6.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r6.xyz, cb0[15].wwww, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r7.xyz, r2.wwww, r6.xyzx
mad r4.x, -cb0[15].y, r4.x, l(1.000000)
mul r8.xyz, r3.xyzx, r4.xxxx
mad r3.xyz, -r2.wwww, r6.xyzx, r3.xyzx
mad r3.xyz, r2.zzzz, r3.xyzx, r7.xyzx
mad r2.z, r1.w, l(0.950000), l(0.050000)
mul r2.z, r2.z, r2.z
add r2.x, r0.w, r2.x
mad r2.x, r2.x, r2.x, r0.w
add_sat r2.x, r2.x, l(-1.000000)
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r0.x, r0.xyzx, r6.xyzx
add r6.xyz, v4.xyzx, -cb3[25].xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
sqrt r0.y, r0.y
add r0.y, -r0.x, r0.y
mad r0.x, cb3[25].w, r0.y, r0.x
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
eq r0.y, cb6[0].x, l(1.000000)
if_nz r0.y
  eq r0.z, cb6[0].y, l(1.000000)
  mul r6.xyz, v4.yyyy, cb6[2].xyzx
  mad r6.xyz, cb6[1].xyzx, v4.xxxx, r6.xyzx
  mad r6.xyz, cb6[3].xyzx, v4.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb6[4].xyzx
  movc r6.xyz, r0.zzzz, r6.xyzx, v4.xyzx
  add r6.xyz, r6.xyzx, -cb6[6].xyzx
  mul r6.yzw, r6.xxyz, cb6[5].xxyz
  mad r0.z, r6.y, l(0.250000), l(0.750000)
  mad r2.w, cb6[0].z, l(0.500000), l(0.750000)
  max r6.x, r0.z, r2.w
  sample r6.xyzw, r6.xzwx, t7.xyzw, s2
else 
  sample r6.xyzw, v1.xyxx, t4.xyzw, s0
endif 
dp4_sat r0.z, r6.xyzw, cb2[46].xyzw
div r6.xy, v1.zwzz, v2.wwww
sample r6.xyzw, r6.xyxx, t3.xyzw, s6
add r0.z, r0.z, -r6.x
mad r0.x, r0.x, r0.z, r6.x
if_nz r0.y
  eq r0.y, cb6[0].y, l(1.000000)
  mul r6.xyz, v4.yyyy, cb6[2].xyzx
  mad r6.xyz, cb6[1].xyzx, v4.xxxx, r6.xyzx
  mad r6.xyz, cb6[3].xyzx, v4.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb6[4].xyzx
  movc r6.xyz, r0.yyyy, r6.xyzx, v4.xyzx
  add r6.xyz, r6.xyzx, -cb6[6].xyzx
  mul r6.yzw, r6.xxyz, cb6[5].xxyz
  mul r0.y, r6.y, l(0.250000)
  mul r0.z, cb6[0].z, l(0.500000)
  mad r2.w, -cb6[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r6.x, r2.w, r0.y
  sample r7.xyzw, r6.xzwx, t7.xyzw, s2
  add r9.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r9.xyzw, r9.xyzx, t7.xyzw, s2
  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t7.xyzw, s2
  mov r5.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r5.xyzw
  dp4 r7.y, r9.xyzw, r5.xyzw
  dp4 r7.z, r6.xyzw, r5.xyzw
else 
  mov r5.w, l(1.000000)
  dp4 r7.x, cb2[39].xyzw, r5.xyzw
  dp4 r7.y, cb2[40].xyzw, r5.xyzw
  dp4 r7.z, cb2[41].xyzw, r5.xyzw
endif 
add r6.xyz, r7.xyzx, v0.xyzx
max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.y, l(0.000000), cb5[2].w
if_nz r0.y
  dp3 r0.y, r4.yzwy, r4.yzwy
  rsq r0.y, r0.y
  mul r7.xyz, r0.yyyy, r4.yzwy
  add r9.xyz, -v4.xyzx, cb5[0].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  add r10.xyz, -v4.xyzx, cb5[1].xyzx
  div r10.xyz, r10.xyzx, r7.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r0.y, r9.y, r9.x
  min r0.y, r9.z, r0.y
  add r9.xyz, v4.xyzx, -cb5[2].xyzx
  mad r7.xyz, r7.xyzx, r0.yyyy, r9.xyzx
else 
  mov r7.xyz, r4.yzwy
endif 
mad r0.y, -r1.w, l(0.700000), l(1.700000)
mul r0.y, r0.y, r1.w
mul r0.y, r0.y, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t5.xyzw, s1, r0.y
add r0.z, r7.w, l(-1.000000)
mad r0.z, cb5[3].w, r0.z, l(1.000000)
log r0.z, r0.z
mul r0.z, r0.z, cb5[3].y
exp r0.z, r0.z
mul r0.z, r0.z, cb5[3].x
mul r9.xyz, r7.xyzx, r0.zzzz
lt r2.w, cb5[1].w, l(0.999990)
if_nz r2.w
  lt r2.w, l(0.000000), cb5[6].w
  if_nz r2.w
    dp3 r2.w, r4.yzwy, r4.yzwy
    rsq r2.w, r2.w
    mul r10.xyz, r2.wwww, r4.yzwy
    add r11.xyz, -v4.xyzx, cb5[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -v4.xyzx, cb5[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r2.w, r11.y, r11.x
    min r2.w, r11.z, r2.w
    add r11.xyz, v4.xyzx, -cb5[6].xyzx
    mad r10.xyz, r10.xyzx, r2.wwww, r11.xyzx
  else 
    mov r10.xyz, r4.yzwy
  endif 
  sample_l r10.xyzw, r10.xyzx, t6.xyzw, s1, r0.y
  add r0.y, r10.w, l(-1.000000)
  mad r0.y, cb5[7].w, r0.y, l(1.000000)
  log r0.y, r0.y
  mul r0.y, r0.y, cb5[7].y
  exp r0.y, r0.y
  mul r0.y, r0.y, cb5[7].x
  mul r10.xyz, r10.xyzx, r0.yyyy
  mad r7.xyz, r0.zzzz, r7.xyzx, -r10.xyzx
  mad r9.xyz, cb5[1].wwww, r7.xyzx, r10.xyzx
endif 
mad r7.xyzw, r1.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.y, r7.x, r7.x
exp r0.z, r2.y
min r0.y, r0.z, r0.y
mad r0.y, r0.y, r7.x, r7.y
mad r0.yz, r0.yyyy, l(0.000000, -1.040000, 1.040000, 0.000000), r7.zzwz
mad r7.xyz, r3.xyzx, r0.yyyy, r0.zzzz
mul r0.yzw, r0.wwww, r6.xxyz
mul r6.xyz, r3.xyzx, r0.yzwy
mad r7.xyz, r9.xyzx, r7.xyzx, -r6.xyzx
mad r6.xyz, r2.xxxx, r7.xyzx, r6.xyzx
mad r0.yzw, r0.yyzw, r8.xxyz, r6.xxyz
mul r2.yw, |cb0[0].wwww|, l(0.000000, 0.100000, 0.000000, 0.050000)
dp3 r4.x, cb2[0].xyzx, r4.yzwy
mad r4.xyz, r4.xxxx, r4.yzwy, -cb2[0].xyzx
dp3 r4.w, r4.xyzx, r4.xyzx
rsq r4.w, r4.w
mul r2.y, r2.y, r4.w
min r2.y, r2.y, l(1.000000)
mad r4.xyz, r4.xyzx, r2.yyyy, cb2[0].xyzx
dp3 r2.y, r4.xyzx, r4.xyzx
rsq r2.y, r2.y
mad r2.w, r2.w, r2.y, r2.z
min r2.w, r2.w, l(1.000000)
div r2.w, r2.z, r2.w
mul r6.xyz, r2.yyyy, r4.xyzx
mul r2.w, r2.w, r2.w
mad r1.xyz, r4.xyzx, r2.yyyy, r1.xyzx
dp3 r2.y, r1.xyzx, r1.xyzx
rsq r2.y, r2.y
mul r1.xyz, r1.xyzx, r2.yyyy
dp3_sat r2.y, r6.xyzx, r1.xyzx
dp3_sat r1.x, r5.xyzx, r1.xyzx
dp3_sat r1.y, r5.xyzx, cb2[0].xyzx
lt r1.z, l(0.000000), cb0[0].w
and r1.z, r2.w, r1.z
mul r2.w, r2.y, r2.y
mad r4.x, r1.y, l(-5.554730), l(-6.983160)
mul r4.x, r1.y, r4.x
exp r4.x, r4.x
dp2 r1.w, r1.wwww, r2.wwww
add r1.w, r1.w, l(-0.500000)
mad r4.x, r4.x, r1.w, l(1.000000)
mad r1.w, r3.w, r1.w, l(1.000000)
mul r1.w, r1.w, r4.x
mad r3.w, r2.y, l(-5.554730), l(-6.983160)
mul r2.y, r2.y, r3.w
exp r2.y, r2.y
add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r2.yyyy, r4.xyzx, r3.xyzx
mul r2.y, r2.z, r2.z
mul r3.w, r2.y, l(0.250000)
mad r2.y, -r2.y, l(0.250000), l(1.000000)
mad r2.y, r2.w, r2.y, r3.w
mul r1.x, r1.x, r1.x
mad r2.z, r2.z, r2.z, l(-1.000000)
mad r1.x, r1.x, r2.z, l(1.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r2.y, r1.x
div r1.x, r3.w, r1.x
mul r1.x, r2.x, r1.x
mul r1.x, r1.z, r1.x
mul r2.xyz, r1.xxxx, r3.xyzx
mul r0.x, r0.x, r1.y
mad r1.xyz, r8.xyzx, r1.wwww, r2.xyzx
mul r1.xyz, r0.xxxx, r1.xyzx
mad r0.xyz, cb0[0].xyzx, r1.xyzx, r0.yzwy
min o0.xyz, r0.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used