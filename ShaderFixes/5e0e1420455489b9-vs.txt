// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 5e0e1420455489b9-vs.txt
// 3DMigoto: 5e0e1420455489b9 |              Unity headers extracted from Hidden_Amplify Occlusion_Occlusion
//              Shader "Hidden/Amplify Occlusion/Occlusion" {
//                SubShader 1/1 {
// 00000000001:     Pass 1/42 {
// 00000000200:     Pass 10/42 {
// 00000000400:     Pass 11/42 {
// 00000000800:     Pass 12/42 {
// 00000001000:     Pass 13/42 {
// 00000002000:     Pass 14/42 {
// 00000004000:     Pass 15/42 {
// 00000008000:     Pass 16/42 {
// 00000010000:     Pass 17/42 {
// 00000020000:     Pass 18/42 {
// 00000040000:     Pass 19/42 {
// 00000000002:     Pass 2/42 {
// 00000080000:     Pass 20/42 {
// 00000100000:     Pass 21/42 {
// 00000200000:     Pass 22/42 {
// 00000400000:     Pass 23/42 {
// 00000800000:     Pass 24/42 {
// 00001000000:     Pass 25/42 {
// 00002000000:     Pass 26/42 {
// 00004000000:     Pass 27/42 {
// 00008000000:     Pass 28/42 {
// 00010000000:     Pass 29/42 {
// 00000000004:     Pass 3/42 {
// 00020000000:     Pass 30/42 {
// 00040000000:     Pass 31/42 {
// 00080000000:     Pass 32/42 {
// 00100000000:     Pass 33/42 {
// 00200000000:     Pass 34/42 {
// 00400000000:     Pass 35/42 {
// 00800000000:     Pass 36/42 {
// 01000000000:     Pass 37/42 {
// 02000000000:     Pass 38/42 {
// 04000000000:     Pass 39/42 {
// 00000000008:     Pass 4/42 {
// 08000000000:     Pass 40/42 {
// 10000000000:     Pass 41/42 {
// 20000000000:     Pass 42/42 {
// 00000000010:     Pass 5/42 {
// 00000000020:     Pass 6/42 {
// 00000000040:     Pass 7/42 {
// 00000000080:     Pass 8/42 {
// 00000000100:     Pass 9/42 {
//                    ZWrite Off
//                    Program "vp" {
//                      SubProgram "d3d11" {
//                      }
//                    }
//                  }
//                }
//              }
//
// Unity 5.3 headers extracted from Hidden_Amplify Occlusion_Occlusion:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201708220 7 0 0
//   undeciphered1a: 1
//   undeciphered2: 1 0 2 0 0 0
//   undeciphered3: 1 1 0 0
//   ConstBuffer "$Globals" 432
//   Matrix 48 [_AO_CameraProj]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:23:02 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_input v0.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 2

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r1.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb0[4].xyzw
mad r0.xyzw, cb0[3].xyzw, v0.xxxx, r0.xyzw
add r0.xyzw, r0.xyzw, cb0[6].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 5e0e1420455489b9-vs.txt
ne r1.w, r0.w, l(1.0)
if_nz r1.w
  add r1.w, r0.w, -r1.y
  mad r0.x, r1.w, r1.x, r0.x
endif

mul r0.y, r0.y, cb1[5].x
mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r0.w, r0.y, l(0.500000)
add o1.xy, r0.zzzz, r0.xwxx
ret 
// Approximately 0 instruction slots used