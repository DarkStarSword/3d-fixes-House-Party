// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 17558b6f06101d72-ps.txt
// 3DMigoto: 17558b6f06101d72 | Matched 2 variants of 2 shaders: Standard, Standard Double-Sided
//
// 1:    Unity headers extracted from Standard
// 2:    Unity headers extracted from Standard Double-Sided
// 2:    Shader "Standard Double-Sided" {
// 1:    Shader "Standard" {
//         CustomEditor "StandardShaderGUI"
//         Fallback "VertexLit"
//         SubShader 1/2 {
//           LOD 300
//           Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//           Pass 1/5 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             ZWrite [_ZWrite]
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
// 2: Unity 5.3 headers extracted from Standard Double-Sided:
// 1: Unity 5.3 headers extracted from Standard:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201708220 163 5 4
//      undeciphered1a: 14
//      Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "FOG_EXP2" "_ALPHATEST_ON" }
//      undeciphered2: 1 7 7 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 1200
//      Vector 0 [unity_Lightmap_HDR]
//      Vector 32 [_LightColor0]
//      Vector 1088 [_Color]
//      Float 1104 [_Cutoff]
//      Float 1160 [_Metallic]
//      Float 1164 [_Glossiness]
//      Float 1172 [_OcclusionStrength]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityShadows" 416
//      Vector 384 [_LightShadowData]
//      Vector 400 [unity_ShadowFadeCenterAndType]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 144 [unity_MatrixV]
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      SetTexture 0 [_MainTex] 2D 20
//      SetTexture 1 [_ShadowMapTexture] 2D 40
//      SetTexture 2 [_OcclusionMap] 2D 30
//      SetTexture 3 [unity_Lightmap] 2D 00
//      SetTexture 4 [unity_LightmapInd] 2D -10
//      SetTexture 5 [unity_SpecCube0] CUBE 10
//      SetTexture 6 [unity_SpecCube1] CUBE -10
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityShadows" 3
//      BindCB "UnityPerFrame" 4
//      BindCB "UnityFog" 5
//      BindCB "UnityReflectionProbes" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:07:27 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[74], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.w
dcl_input_ps linear v4.w
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xy
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 17558b6f06101d72-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s2
mul r1.xyz, r0.xyzx, cb0[68].xyzx
mad r0.w, r0.w, cb0[68].w, -cb0[69].x
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
mad r0.xyz, r0.xyzx, cb0[68].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r0.xyz, cb0[72].zzzz, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r0.w, -cb0[72].z, l(0.960000), l(0.960000)
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r1.w, v5.xyzx, v5.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v5.xyzx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx
div r4.xy, v7.xyxx, v7.wwww
sample r4.xyzw, r4.xyxx, t1.xyzw, s4
sample r5.xyzw, v1.xyxx, t2.xyzw, s3
add r2.w, -cb0[73].y, l(1.000000)
mad r2.w, r5.y, cb0[73].y, r2.w
add r3.w, -cb0[72].w, l(1.000000)
dp3 r4.y, r3.xyzx, r2.xyzx
add r4.y, r4.y, r4.y
mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
mov r5.x, v3.w
mov r5.y, v4.w
mov r5.z, v5.w
add r6.xyz, -r5.xyzx, r15.xyzx
mov r7.x, cb4[9].z
mov r7.y, cb4[10].z
mov r7.z, cb4[11].z
dp3 r5.w, r6.xyzx, r7.xyzx
add r6.xyz, r5.xyzx, -cb3[25].xyzx
dp3 r6.x, r6.xyzx, r6.xyzx
sqrt r6.x, r6.x
add r6.x, -r5.w, r6.x
mad r5.w, cb3[25].w, r6.x, r5.w
mad_sat r5.w, r5.w, cb3[24].z, cb3[24].w
add_sat r4.x, r4.x, r5.w
mul r6.xyz, r4.xxxx, cb0[2].xyzx
sample r7.xyzw, v6.xyxx, t3.xyzw, s0
log r4.x, r7.w
mul r4.x, r4.x, cb0[0].y
exp r4.x, r4.x
mul r4.x, r4.x, cb0[0].x
mul r7.xyz, r7.xyzx, r4.xxxx
sample r8.xyzw, v6.xyxx, t4.xyzw, s0
add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r4.x, r2.xyzx, r8.xyzx
add r4.x, r4.x, l(0.500000)
mul r7.xyz, r4.xxxx, r7.xyzx
max r4.x, r8.w, l(0.000100)
div r7.xyz, r7.xyzx, r4.xxxx
lt r4.x, l(0.000000), cb6[2].w
if_nz r4.x
  dp3 r4.x, r4.yzwy, r4.yzwy
  rsq r4.x, r4.x
  mul r8.xyz, r4.xxxx, r4.yzwy
  add r9.xyz, -r5.xyzx, cb6[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r5.xyzx, cb6[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r4.x, r9.y, r9.x
  min r4.x, r9.z, r4.x
  add r9.xyz, r5.xyzx, -cb6[2].xyzx
  mad r8.xyz, r8.xyzx, r4.xxxx, r9.xyzx
else 
  mov r8.xyz, r4.yzwy
endif 
mad r4.x, -r3.w, l(0.700000), l(1.700000)
mul r4.x, r3.w, r4.x
mul r4.x, r4.x, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t5.xyzw, s1, r4.x
add r5.w, r8.w, l(-1.000000)
mad r5.w, cb6[3].w, r5.w, l(1.000000)
log r5.w, r5.w
mul r5.w, r5.w, cb6[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb6[3].x
mul r9.xyz, r8.xyzx, r5.wwww
lt r6.w, cb6[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb6[6].w
  if_nz r6.w
    dp3 r6.w, r4.yzwy, r4.yzwy
    rsq r6.w, r6.w
    mul r10.xyz, r4.yzwy, r6.wwww
    add r11.xyz, -r5.xyzx, cb6[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r5.xyzx, cb6[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r6.w, r11.y, r11.x
    min r6.w, r11.z, r6.w
    add r5.xyz, r5.xyzx, -cb6[6].xyzx
    mad r4.yzw, r10.xxyz, r6.wwww, r5.xxyz
  endif 
  sample_l r4.xyzw, r4.yzwy, t6.xyzw, s1, r4.x
  add r4.w, r4.w, l(-1.000000)
  mad r4.w, cb6[7].w, r4.w, l(1.000000)
  log r4.w, r4.w
  mul r4.w, r4.w, cb6[7].y
  exp r4.w, r4.w
  mul r4.w, r4.w, cb6[7].x
  mul r4.xyz, r4.xyzx, r4.wwww
  mad r5.xyz, r5.wwww, r8.xyzx, -r4.xyzx
  mad r9.xyz, cb6[1].wwww, r5.xyzx, r4.xyzx
endif 
mul r4.xyz, r2.wwww, r9.xyzx
mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
dp3 r1.w, r2.xyzx, -r3.xyzx
dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
dp3_sat r2.x, r2.xyzx, r5.xyzx
dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
mul r2.z, r2.y, r2.y
dp2 r2.z, r2.zzzz, r3.wwww
add r2.z, r2.z, l(-0.500000)
add r3.y, -r3.x, l(1.000000)
mul r3.z, r3.y, r3.y
mul r3.z, r3.z, r3.z
mul r3.y, r3.y, r3.z
mad r3.y, r2.z, r3.y, l(1.000000)
add r3.z, -|r1.w|, l(1.000000)
mul r4.w, r3.z, r3.z
mul r4.w, r4.w, r4.w
mul r3.z, r3.z, r4.w
mad r2.z, r2.z, r3.z, l(1.000000)
mul r2.z, r2.z, r3.y
mul r2.z, r3.x, r2.z
mul r3.y, r3.w, r3.w
max r3.y, r3.y, l(0.002000)
add r3.w, -r3.y, l(1.000000)
mad r4.w, |r1.w|, r3.w, r3.y
mad r3.w, r3.x, r3.w, r3.y
mul r1.w, |r1.w|, r3.w
mad r1.w, r3.x, r4.w, r1.w
add r1.w, r1.w, l(0.000010)
div r1.w, l(0.500000), r1.w
mul r3.w, r3.y, r3.y
mad r4.w, r2.x, r3.w, -r2.x
mad r2.x, r4.w, r2.x, l(1.000000)
mul r3.w, r3.w, l(0.318309873)
mad r2.x, r2.x, r2.x, l(1.000000012E-007)
div r2.x, r3.w, r2.x
mul r1.w, r1.w, r2.x
mul r1.w, r1.w, l(3.14159274)
mul r1.w, r3.x, r1.w
max r1.w, r1.w, l(0.000000)
mad r2.x, r3.y, r3.y, l(1.000000)
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
dp3 r3.x, r0.xyzx, r0.xyzx
ne r3.x, r3.x, l(0.000000)
and r3.x, r3.x, l(0x3f800000)
mul r1.w, r1.w, r3.x
add r0.w, -r0.w, cb0[72].w
add_sat r0.w, r0.w, l(1.000000)
mul r3.xyw, r2.zzzz, r6.xyxz
mad r3.xyw, r7.xyxz, r2.wwww, r3.xyxw
mul r5.xyz, r6.xyzx, r1.wwww
add r1.w, -r2.y, l(1.000000)
mul r2.y, r1.w, r1.w
mul r2.y, r2.y, r2.y
mul r1.w, r1.w, r2.y
add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
mul r2.yzw, r2.yyzw, r5.xxyz
mad r1.xyz, r1.xyzx, r3.xywx, r2.yzwy
mul r2.xyz, r4.xyzx, r2.xxxx
add r3.xyw, -r0.xyxz, r0.wwww
mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb5[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used