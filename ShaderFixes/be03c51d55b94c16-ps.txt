// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed be03c51d55b94c16-ps.txt
// 3DMigoto: be03c51d55b94c16 |    Unity headers extracted from kawetofe_highlightShaderUnity5WithOutline
//    Shader "kawetofe/highlightShaderUnity5WithOutline" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from kawetofe_highlightShaderUnity5WithOutline:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 188 8 6
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
//   undeciphered2: 1 8 7 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1168
//   Vector 0 [unity_Lightmap_HDR]
//   Vector 32 [_LightColor0]
//   Float 1084 [_Glossiness]
//   Float 1088 [_Metallic]
//   Vector 1104 [_Color]
//   Vector 1120 [_RimColor]
//   Float 1136 [_RimPower]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 672 [unity_SHBr]
//   Vector 688 [unity_SHBg]
//   Vector 704 [unity_SHBb]
//   Vector 720 [unity_SHC]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 40
//   SetTexture 1 [_ShadowMapTexture] 2D 30
//   SetTexture 2 [unity_Lightmap] 2D 00
//   SetTexture 3 [unity_LightmapInd] 2D -10
//   SetTexture 4 [unity_ShadowMask] 2D -10
//   SetTexture 5 [unity_SpecCube0] CUBE 10
//   SetTexture 6 [unity_SpecCube1] CUBE -10
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 20
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityReflectionProbes" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:45:20 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// TEXCOORD                 6   xyz         6     NONE   float       
// TEXCOORD                 7   xyz         7     NONE   float       
// TEXCOORD                 8   xyz         8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[72], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyw
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed be03c51d55b94c16-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r15.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s4
mul r3.xyz, r2.xyzx, cb0[69].xyzx
dp3_sat r1.w, r1.xyzx, v2.xyzx
add r1.w, -r1.w, l(1.000000)
mul r4.xyz, cb0[70].xyzx, cb0[70].wwww
mul r4.xyz, r4.xyzx, l(20.000000, 20.000000, 20.000000, 0.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb0[71].x
exp r1.w, r1.w
div r5.xy, v5.xyxx, v5.wwww
sample r5.xyzw, r5.xyxx, t1.xyzw, s3
add r2.w, -cb0[67].w, l(1.000000)
dp3 r3.w, -r1.xyzx, v2.xyzx
add r3.w, r3.w, r3.w
mad r5.yzw, v2.xxyz, -r3.wwww, -r1.xxyz
sample r6.xyzw, v4.xyxx, t4.xyzw, s0
dp4_sat r3.w, r6.xyzw, cb2[46].xyzw
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r4.w, r0.xyzx, r6.xyzx
add r6.xyz, v3.xyzx, -cb3[25].xyzx
dp3 r6.x, r6.xyzx, r6.xyzx
sqrt r6.x, r6.x
add r6.x, -r4.w, r6.x
mad r4.w, cb3[25].w, r6.x, r4.w
mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
add r3.w, -r5.x, r3.w
mad r3.w, r4.w, r3.w, r5.x
mul r6.xyz, r3.wwww, cb0[2].xyzx
eq r3.w, cb6[0].x, l(1.000000)
if_nz r3.w
  eq r3.w, cb6[0].y, l(1.000000)
  mul r7.xyz, v3.yyyy, cb6[2].xyzx
  mad r7.xyz, cb6[1].xyzx, v3.xxxx, r7.xyzx
  mad r7.xyz, cb6[3].xyzx, v3.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb6[4].xyzx
  movc r7.xyz, r3.wwww, r7.xyzx, v3.xyzx
  add r7.xyz, r7.xyzx, -cb6[6].xyzx
  mul r7.yzw, r7.xxyz, cb6[5].xxyz
  mul r3.w, r7.y, l(0.250000)
  mul r4.w, cb6[0].z, l(0.500000)
  mad r5.x, -cb6[0].z, l(0.500000), l(0.250000)
  max r3.w, r3.w, r4.w
  min r7.x, r5.x, r3.w
  sample r8.xyzw, r7.xzwx, t7.xyzw, s2
  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r9.xyzw, r9.xyzx, t7.xyzw, s2
  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r7.xyzx, t7.xyzw, s2
  mov r10.xyz, v2.xyzx
  mov r10.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r10.xyzw
  dp4 r8.y, r9.xyzw, r10.xyzw
  dp4 r8.z, r7.xyzw, r10.xyzw
else 
  mov r7.xyz, v2.xyzx
  mov r7.w, l(1.000000)
  dp4 r8.x, cb2[39].xyzw, r7.xyzw
  dp4 r8.y, cb2[40].xyzw, r7.xyzw
  dp4 r8.z, cb2[41].xyzw, r7.xyzw
endif 
mul r7.xyzw, v2.yzzx, v2.xyzz
dp4 r9.x, cb2[42].xyzw, r7.xyzw
dp4 r9.y, cb2[43].xyzw, r7.xyzw
dp4 r9.z, cb2[44].xyzw, r7.xyzw
mul r3.w, v2.y, v2.y
mad r3.w, v2.x, v2.x, -r3.w
mad r7.xyz, cb2[45].xyzx, r3.wwww, r9.xyzx
add r7.xyz, r7.xyzx, r8.xyzx
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
sample r8.xyzw, v4.xyxx, t2.xyzw, s0
log r3.w, r8.w
mul r3.w, r3.w, cb0[0].y
exp r3.w, r3.w
mul r3.w, r3.w, cb0[0].x
mul r8.xyz, r8.xyzx, r3.wwww
sample r9.xyzw, v4.xyxx, t3.xyzw, s0
add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r3.w, v2.xyzx, r9.xyzx
add r3.w, r3.w, l(0.500000)
mul r8.xyz, r3.wwww, r8.xyzx
max r3.w, r9.w, l(0.000100)
div r8.xyz, r8.xyzx, r3.wwww
add r7.xyz, r7.xyzx, r8.xyzx
lt r3.w, l(0.000000), cb5[2].w
if_nz r3.w
  dp3 r3.w, r5.yzwy, r5.yzwy
  rsq r3.w, r3.w
  mul r8.xyz, r3.wwww, r5.yzwy
  add r9.xyz, -v3.xyzx, cb5[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -v3.xyzx, cb5[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r3.w, r9.y, r9.x
  min r3.w, r9.z, r3.w
  add r9.xyz, v3.xyzx, -cb5[2].xyzx
  mad r8.xyz, r8.xyzx, r3.wwww, r9.xyzx
else 
  mov r8.xyz, r5.yzwy
endif 
mad r3.w, -r2.w, l(0.700000), l(1.700000)
mul r3.w, r2.w, r3.w
mul r3.w, r3.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t5.xyzw, s1, r3.w
add r4.w, r8.w, l(-1.000000)
mad r4.w, cb5[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb5[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb5[3].x
mul r9.xyz, r8.xyzx, r4.wwww
lt r5.x, cb5[1].w, l(0.999990)
if_nz r5.x
  lt r5.x, l(0.000000), cb5[6].w
  if_nz r5.x
    dp3 r5.x, r5.yzwy, r5.yzwy
    rsq r5.x, r5.x
    mul r10.xyz, r5.xxxx, r5.yzwy
    add r11.xyz, -v3.xyzx, cb5[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -v3.xyzx, cb5[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r5.x, r11.y, r11.x
    min r5.x, r11.z, r5.x
    add r11.xyz, v3.xyzx, -cb5[6].xyzx
    mad r5.yzw, r10.xxyz, r5.xxxx, r11.xxyz
  endif 
  sample_l r5.xyzw, r5.yzwy, t6.xyzw, s1, r3.w
  add r3.w, r5.w, l(-1.000000)
  mad r3.w, cb5[7].w, r3.w, l(1.000000)
  log r3.w, r3.w
  mul r3.w, r3.w, cb5[7].y
  exp r3.w, r3.w
  mul r3.w, r3.w, cb5[7].x
  mul r5.xyz, r5.xyzx, r3.wwww
  mad r8.xyz, r4.wwww, r8.xyzx, -r5.xyzx
  mad r9.xyz, cb5[1].wwww, r8.xyzx, r5.xyzx
endif 
dp3 r3.w, v2.xyzx, v2.xyzx
rsq r3.w, r3.w
mul r5.xyz, r3.wwww, v2.xyzx
mad r2.xyz, r2.xyzx, cb0[69].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r2.xyz, cb0[68].xxxx, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r3.w, -cb0[68].x, l(0.960000), l(0.960000)
mul r3.xyz, r3.wwww, r3.xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r5.xyzx, r1.xyzx
dp3_sat r1.x, r5.xyzx, cb2[0].xyzx
dp3_sat r1.y, r5.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r2.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r4.w, r1.z, r1.z
mul r4.w, r4.w, r4.w
mul r1.z, r1.z, r4.w
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r2.w, r2.w
max r0.z, r0.z, l(0.002000)
add r2.w, -r0.z, l(1.000000)
mad r4.w, |r0.w|, r2.w, r0.z
mad r2.w, r1.x, r2.w, r0.z
mul r0.w, |r0.w|, r2.w
mad r0.w, r1.x, r4.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r2.w, r0.z, r0.z
mad r4.w, r1.y, r2.w, -r1.y
mad r1.y, r4.w, r1.y, l(1.000000)
mul r2.w, r2.w, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r1.y, r2.w, r1.y
mul r0.w, r0.w, r1.y
mul r0.w, r0.w, l(3.14159274)
mul r0.yw, r1.xxxx, r0.yyyw
max r0.w, r0.w, l(0.000000)
mad r0.z, r0.z, r0.z, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
dp3 r1.x, r2.xyzx, r2.xyzx
ne r1.x, r1.x, l(0.000000)
and r1.x, r1.x, l(0x3f800000)
mul r0.w, r0.w, r1.x
add r1.x, -r3.w, cb0[67].w
add_sat r1.x, r1.x, l(1.000000)
mad r5.xyz, r6.xyzx, r0.yyyy, r7.xyzx
mul r6.xyz, r6.xyzx, r0.wwww
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r7.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyw, r7.xyxz, r0.xxxx, r2.xyxz
mul r0.xyw, r0.xyxw, r6.xyxz
mad r0.xyw, r3.xyxz, r5.xyxz, r0.xyxw
mul r3.xyz, r9.xyzx, r0.zzzz
add r5.xyz, -r2.xyzx, r1.xxxx
mad r1.xyz, r1.zzzz, r5.xyzx, r2.xyzx
mad r0.xyz, r3.xyzx, r1.xyzx, r0.xywx
mad o0.xyz, r4.xyzx, r1.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used