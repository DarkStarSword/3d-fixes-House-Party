// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8ac92f106d76d7ea-ps.txt
// 3DMigoto: 8ac92f106d76d7ea | Matched 2 variants of 1 shaders: Alloy/Core
//
//       Unity headers extracted from Alloy_Core
//       Shader "Alloy/Core" {
//         CustomEditor "AlloyFieldBasedEditor"
//         Fallback "VertexLit"
//         SubShader 1/1 {
//           LOD 300
//           Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//           Pass 1/5 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             ZWrite [_ZWrite]
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Alloy_Core:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201708220 179 4 7
//      undeciphered1a: 13
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_NORMALMAP" }
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
//      undeciphered2: 1 6 7 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 1296
//      Vector 0 [_LightColor0]
//      Vector 160 [_Color]
//      Vector 176 [_MainTex_ST]
//      Vector 192 [_MainTexVelocity] 2
//      Float 204 [_MainTexUV]
//      Float 240 [_BaseColorVertexTint]
//      Float 244 [_Metal]
//      Float 248 [_Specularity]
//      Float 252 [_SpecularTint]
//      Float 256 [_Roughness]
//      Float 260 [_Occlusion]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 736 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityShadows" 416
//      Vector 384 [_LightShadowData]
//      Vector 400 [unity_ShadowFadeCenterAndType]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 144 [unity_MatrixV]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 20
//      SetTexture 1 [_SpecTex] 2D 30
//      SetTexture 2 [_ShadowMapTexture] 2D 40
//      SetTexture 3 [unity_SpecCube0] CUBE 00
//      SetTexture 4 [unity_SpecCube1] CUBE -10
//      SetTexture 5 [unity_ProbeVolumeSH] 3D 10
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityShadows" 3
//      BindCB "UnityPerFrame" 4
//      BindCB "UnityReflectionProbes" 5
//      BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:33:09 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float       
// TEXCOORD                 1   xyzw        1     NONE   float   xy w
// SV_POSITION              0   xyzw        2      POS   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8ac92f106d76d7ea-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v6.xyzx, v6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v6.xyzx
add r1.xyz, -v4.xyzx, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
lt r0.w, cb0[12].w, l(0.500000)
movc r3.xy, r0.wwww, v5.xyxx, v5.zwzz
mad r3.zw, cb0[12].xxxy, cb1[0].yyyy, cb0[11].zzzw
div r3.zw, r3.zzzw, cb0[11].xxxy
add r3.xy, r3.zwzz, r3.xyxx
mul r3.xy, r3.xyxx, cb0[11].xyxx
dp3 r0.w, -r2.xyzx, r0.xyzx
add r0.w, r0.w, r0.w
mad r4.xyz, r0.xyzx, -r0.wwww, -r2.xyzx
dp3_sat r0.w, r0.xyzx, r2.xyzx
mul r1.w, r0.w, l(-9.280000)
mad r2.w, r0.w, l(-5.554730), l(-6.983160)
mul r2.w, r0.w, r2.w
exp r2.w, r2.w
add r5.xyz, v3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r5.xyz, cb0[15].xxxx, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r5.xyz, r5.xyzx, cb0[10].xyzx
sample r6.xyzw, r3.xyxx, t0.xyzw, s2
mul_sat r5.xyz, r5.xyzx, r6.xyzx
sample r3.xyzw, r3.xyxx, t1.xyzw, s3
mad r4.w, r3.y, l(0.305306017), l(0.682171106)
mad r4.w, r3.y, r4.w, l(0.0125228781)
mad r3.y, r3.y, r4.w, l(-1.000000)
mad r3.y, cb0[16].y, r3.y, l(1.000000)
mul r6.xy, r3.xzxx, cb0[15].yzyy
mul r3.z, r3.w, cb0[16].x
mul r3.w, r6.y, l(0.080000)
dp3 r4.w, r5.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
max r4.w, r4.w, l(0.000001)
div r6.yzw, r5.xxyz, r4.wwww
add r6.yzw, r6.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r6.yzw, cb0[15].wwww, r6.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r7.xyz, r3.wwww, r6.yzwy
mad r3.x, -cb0[15].y, r3.x, l(1.000000)
mul r8.xyz, r3.xxxx, r5.xyzx
mad r5.xyz, -r3.wwww, r6.yzwy, r5.xyzx
mad r5.xyz, r6.xxxx, r5.xyzx, r7.xyzx
mad r3.x, r3.z, l(0.950000), l(0.050000)
mul r3.x, r3.x, r3.x
add r0.w, r0.w, r3.y
mad r0.w, r0.w, r0.w, r3.y
add_sat r0.w, r0.w, l(-1.000000)
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r1.x, r1.xyzx, r6.xyzx
add r6.xyz, v4.xyzx, -cb3[25].xyzx
dp3 r1.y, r6.xyzx, r6.xyzx
sqrt r1.y, r1.y
add r1.y, -r1.x, r1.y
mad r1.x, cb3[25].w, r1.y, r1.x
mad_sat r1.x, r1.x, cb3[24].z, cb3[24].w
eq r1.y, cb6[0].x, l(1.000000)
if_nz r1.y
  eq r1.z, cb6[0].y, l(1.000000)
  mul r6.xyz, v4.yyyy, cb6[2].xyzx
  mad r6.xyz, cb6[1].xyzx, v4.xxxx, r6.xyzx
  mad r6.xyz, cb6[3].xyzx, v4.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb6[4].xyzx
  movc r6.xyz, r1.zzzz, r6.xyzx, v4.xyzx
  add r6.xyz, r6.xyzx, -cb6[6].xyzx
  mul r6.yzw, r6.xxyz, cb6[5].xxyz
  mad r1.z, r6.y, l(0.250000), l(0.750000)
  mad r3.y, cb6[0].z, l(0.500000), l(0.750000)
  max r6.x, r1.z, r3.y
  sample r6.xyzw, r6.xzwx, t5.xyzw, s1
else 
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r1.z, r6.xyzw, cb2[46].xyzw
div r3.yw, v1.xxxy, v1.wwww
sample r6.xyzw, r3.ywyy, t2.xyzw, s4
add_sat r1.x, r1.x, r6.x
min r1.z, r1.x, r1.z
movc r1.x, r1.y, r1.z, r1.x
lt r1.y, l(0.000000), cb5[2].w
if_nz r1.y
  dp3 r1.y, r4.xyzx, r4.xyzx
  rsq r1.y, r1.y
  mul r6.xyz, r1.yyyy, r4.xyzx
  add r7.xyz, -v4.xyzx, cb5[0].xyzx
  div r7.xyz, r7.xyzx, r6.xyzx
  add r9.xyz, -v4.xyzx, cb5[1].xyzx
  div r9.xyz, r9.xyzx, r6.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  movc r7.xyz, r10.xyzx, r7.xyzx, r9.xyzx
  min r1.y, r7.y, r7.x
  min r1.y, r7.z, r1.y
  add r7.xyz, v4.xyzx, -cb5[2].xyzx
  mad r6.xyz, r6.xyzx, r1.yyyy, r7.xyzx
else 
  mov r6.xyz, r4.xyzx
endif 
mad r1.y, -r3.z, l(0.700000), l(1.700000)
mul r1.y, r1.y, r3.z
mul r1.y, r1.y, l(6.000000)
sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r1.y
add r1.z, r6.w, l(-1.000000)
mad r1.z, cb5[3].w, r1.z, l(1.000000)
log r1.z, r1.z
mul r1.z, r1.z, cb5[3].y
exp r1.z, r1.z
mul r1.z, r1.z, cb5[3].x
mul r7.xyz, r6.xyzx, r1.zzzz
lt r3.y, cb5[1].w, l(0.999990)
if_nz r3.y
  lt r3.y, l(0.000000), cb5[6].w
  if_nz r3.y
    dp3 r3.y, r4.xyzx, r4.xyzx
    rsq r3.y, r3.y
    mul r9.xyz, r3.yyyy, r4.xyzx
    add r10.xyz, -v4.xyzx, cb5[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -v4.xyzx, cb5[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r3.y, r10.y, r10.x
    min r3.y, r10.z, r3.y
    add r10.xyz, v4.xyzx, -cb5[6].xyzx
    mad r9.xyz, r9.xyzx, r3.yyyy, r10.xyzx
  else 
    mov r9.xyz, r4.xyzx
  endif 
  sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r1.y
  add r1.y, r9.w, l(-1.000000)
  mad r1.y, cb5[7].w, r1.y, l(1.000000)
  log r1.y, r1.y
  mul r1.y, r1.y, cb5[7].y
  exp r1.y, r1.y
  mul r1.y, r1.y, cb5[7].x
  mul r9.xyz, r9.xyzx, r1.yyyy
  mad r6.xyz, r1.zzzz, r6.xyzx, -r9.xyzx
  mad r7.xyz, cb5[1].wwww, r6.xyzx, r9.xyzx
endif 
mad r6.xyzw, r3.zzzz, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r1.y, r6.x, r6.x
exp r1.z, r1.w
min r1.y, r1.z, r1.y
mad r1.y, r1.y, r6.x, r6.y
mad r1.yz, r1.yyyy, l(0.000000, -1.040000, 1.040000, 0.000000), r6.zzwz
mad r1.yzw, r5.xxyz, r1.yyyy, r1.zzzz
mul r1.yzw, r1.yyzw, r7.xxyz
mul r3.yw, |cb0[0].wwww|, l(0.000000, 0.100000, 0.000000, 0.050000)
dp3 r4.w, cb2[0].xyzx, r4.xyzx
mad r4.xyz, r4.wwww, r4.xyzx, -cb2[0].xyzx
dp3 r4.w, r4.xyzx, r4.xyzx
rsq r4.w, r4.w
mul r3.y, r3.y, r4.w
min r3.y, r3.y, l(1.000000)
mad r4.xyz, r4.xyzx, r3.yyyy, cb2[0].xyzx
dp3 r3.y, r4.xyzx, r4.xyzx
rsq r3.y, r3.y
mad r3.w, r3.w, r3.y, r3.x
min r3.w, r3.w, l(1.000000)
div r3.w, r3.x, r3.w
mul r6.xyz, r3.yyyy, r4.xyzx
mul r3.w, r3.w, r3.w
mad r2.xyz, r4.xyzx, r3.yyyy, r2.xyzx
dp3 r3.y, r2.xyzx, r2.xyzx
rsq r3.y, r3.y
mul r2.xyz, r2.xyzx, r3.yyyy
dp3_sat r3.y, r6.xyzx, r2.xyzx
dp3_sat r2.x, r0.xyzx, r2.xyzx
dp3_sat r0.x, r0.xyzx, cb2[0].xyzx
lt r0.y, l(0.000000), cb0[0].w
and r0.y, r3.w, r0.y
mul r0.z, r3.y, r3.y
mad r2.y, r0.x, l(-5.554730), l(-6.983160)
mul r2.y, r0.x, r2.y
exp r2.y, r2.y
dp2 r2.z, r3.zzzz, r0.zzzz
add r2.z, r2.z, l(-0.500000)
mad r2.y, r2.y, r2.z, l(1.000000)
mad r2.z, r2.w, r2.z, l(1.000000)
mul r2.y, r2.z, r2.y
mad r2.z, r3.y, l(-5.554730), l(-6.983160)
mul r2.z, r3.y, r2.z
exp r2.z, r2.z
add r3.yzw, -r5.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
mad r3.yzw, r2.zzzz, r3.yyzw, r5.xxyz
mul r2.z, r3.x, r3.x
mul r2.w, r2.z, l(0.250000)
mad r2.z, -r2.z, l(0.250000), l(1.000000)
mad r0.z, r0.z, r2.z, r2.w
mul r2.x, r2.x, r2.x
mad r2.z, r3.x, r3.x, l(-1.000000)
mad r2.x, r2.x, r2.z, l(1.000000)
mul r2.x, r2.x, r2.x
mul r0.z, r0.z, r2.x
div r0.z, r2.w, r0.z
mul r0.z, r0.w, r0.z
mul r0.y, r0.y, r0.z
mul r2.xzw, r0.yyyy, r3.yyzw
mul r0.x, r0.x, r1.x
mad r2.xyz, r8.xyzx, r2.yyyy, r2.xzwx
mul r0.xyz, r0.xxxx, r2.xyzx
mul r0.xyz, r0.xyzx, cb0[0].xyzx
mad r0.xyz, r0.wwww, r1.yzwy, r0.xyzx
min o0.xyz, r0.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used