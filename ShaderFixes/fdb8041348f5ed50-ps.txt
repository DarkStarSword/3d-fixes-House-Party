// asmtool.py -I ../.. --fix-unity-lighting-ps=TEXCOORD4 --only-autofixed fdb8041348f5ed50-ps.txt
// 3DMigoto: fdb8041348f5ed50 | Matched 2 variants of 1 shaders: Hidden/NGSS_Directional
//
//       Unity headers extracted from Hidden_NGSS_Directional
//       Shader "Hidden/NGSS_Directional" {
//         SubShader 1/6 {
//           Tags { "ShadowmapFilter"="HardShadow" }
//           Pass 1/1 {
//             Tags { "ShadowmapFilter"="HardShadow" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Hidden_NGSS_Directional:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201708220 43 1 0
//      undeciphered1a: 4
//      undeciphered2: 1 2 3 2 0 0
//      undeciphered3: 0 0
//      ConstBuffer "UnityPerCamera" 144
//      Vector 112 [_ZBufferParams]
//      Vector 128 [unity_OrthoParams]
//      ConstBuffer "UnityPerCameraRare" 352
//      Matrix 288 [unity_CameraToWorld]
//      ConstBuffer "UnityShadows" 416
//      Vector 96 [_LightSplitsNear]
//      Vector 112 [_LightSplitsFar]
//      Vector 384 [_LightShadowData]
//      Matrix 128 [unity_WorldToShadow0]
//      Matrix 192 [unity_WorldToShadow1]
//      Matrix 256 [unity_WorldToShadow2]
//      Matrix 320 [unity_WorldToShadow3]
//      SetTexture 0 [_CameraDepthTexture] 2D 10
//      SetTexture 1 [_ShadowMapTexture] 2D 00
//      BindCB "UnityPerCamera" 0
//      BindCB "UnityPerCameraRare" 1
//      BindCB "UnityShadows" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 16:01:49 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4      w        4     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[22], immediateIndexed
dcl_constantbuffer cb2[25], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_temps 7

// New input from vertex shader with unity_CameraInvProjection[0].x:
dcl_input_ps linear v4.w
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s1
mad r0.y, cb0[7].x, r0.x, cb0[7].y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.z, -r0.y, r0.x
mad r0.y, cb0[8].w, r0.z, r0.y
add r0.x, -r0.x, l(1.000000)
add r1.xyz, -v3.xyzx, v4.xyzx
mad r0.xzw, r0.xxxx, r1.xxyz, v3.xxyz
mad r0.xzw, -v2.xxyz, r0.yyyy, r0.xxzw
mul r1.xyz, r0.yyyy, v2.xyzx
mad r0.xyz, cb0[8].wwww, r0.xzwx, r1.xyzx

// copy depth from r0.z to r5.x:
mov r5.x, r0.z

ge r1.xyzw, r0.zzzz, cb2[6].xyzw
and r1.xyzw, r1.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
lt r2.xyzw, r0.zzzz, cb2[7].xyzw
and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mul r1.xyzw, r1.xyzw, r2.xyzw

// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps=TEXCOORD4 --only-autofixed fdb8041348f5ed50-ps.txt

add r6.x, r5.x, -r4.y
mul r6.x, r4.x, r6.x
ne r4.w, l(0.0, 0.0, 0.0, 0.0), v4.w
if_nz r4.w
  mad r0.x, -r6.x, v4.w, r0.x
endif

mul r2.xyzw, r0.yyyy, cb1[19].xyzw
mad r2.xyzw, cb1[18].xyzw, r0.xxxx, r2.xyzw
mad r0.xyzw, cb1[20].xyzw, r0.zzzz, r2.xyzw
add r0.xyzw, r0.xyzw, cb1[21].xyzw

if_z r4.w
  mad r0.xyz, -r6.xxxx, cb10[0].xyzx, r0.xyzw
endif

mul r2.xyz, r0.yyyy, cb2[13].xyzx
mad r2.xyz, cb2[12].xyzx, r0.xxxx, r2.xyzx
mad r2.xyz, cb2[14].xyzx, r0.zzzz, r2.xyzx
mad r2.xyz, cb2[15].xyzx, r0.wwww, r2.xyzx
mul r2.xyz, r1.yyyy, r2.xyzx
mul r3.xyz, r0.yyyy, cb2[9].xyzx
mad r3.xyz, cb2[8].xyzx, r0.xxxx, r3.xyzx
mad r3.xyz, cb2[10].xyzx, r0.zzzz, r3.xyzx
mad r3.xyz, cb2[11].xyzx, r0.wwww, r3.xyzx
mad r2.xyz, r3.xyzx, r1.xxxx, r2.xyzx
mul r3.xyz, r0.yyyy, cb2[17].xyzx
mad r3.xyz, cb2[16].xyzx, r0.xxxx, r3.xyzx
mad r3.xyz, cb2[18].xyzx, r0.zzzz, r3.xyzx
mad r3.xyz, cb2[19].xyzx, r0.wwww, r3.xyzx
mad r2.xyz, r3.xyzx, r1.zzzz, r2.xyzx
mul r3.xyz, r0.yyyy, cb2[21].xyzx
mad r3.xyz, cb2[20].xyzx, r0.xxxx, r3.xyzx
mad r0.xyz, cb2[22].xyzx, r0.zzzz, r3.xyzx
mad r0.xyz, cb2[23].xyzx, r0.wwww, r0.xyzx
mad r0.xyz, r0.xyzx, r1.wwww, r2.xyzx
dp4 r0.w, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r0.z, -r0.w, r0.z
add r0.z, r0.z, l(1.000000)
sample_c_lz r0.x, r0.xyxx, t1.xxxx, s0, r0.z
add o0.xyzw, r0.xxxx, cb2[24].xxxx
ret 
// Approximately 0 instruction slots used