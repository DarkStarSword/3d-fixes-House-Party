// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed cc894ab881fcea6f-ps.txt
// 3DMigoto: cc894ab881fcea6f | Matched 2 variants of 1 shaders: Legacy Shaders/Reflective/Bumped Diffuse
//
//       Unity headers extracted from Legacy Shaders_Reflective_Bumped Diffuse
//       Shader "Legacy Shaders/Reflective/Bumped Diffuse" {
//         Fallback "Legacy Shaders/Reflective/VertexLit"
//         SubShader 1/1 {
//           LOD 300
//           Tags { "RenderType"="Opaque" }
//           Pass 1/6 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Legacy Shaders_Reflective_Bumped Diffuse:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201708220 80 9 2
//      undeciphered1a: 7
// 2:   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_EXP2" }
// 1:   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_EXP2" }
//      undeciphered2: 1 7 5 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 1152
//      Vector 0 [unity_Lightmap_HDR]
//      Vector 32 [_LightColor0]
//      Vector 1088 [_Color]
//      Vector 1104 [_ReflectColor]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 624 [unity_SHAr]
//      Vector 640 [unity_SHAg]
//      Vector 656 [unity_SHAb]
//      Vector 672 [unity_SHBr]
//      Vector 688 [unity_SHBg]
//      Vector 704 [unity_SHBb]
//      Vector 720 [unity_SHC]
//      Vector 736 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 20
//      SetTexture 1 [_BumpMap] 2D 30
//      SetTexture 2 [_Cube] CUBE 40
//      SetTexture 3 [unity_Lightmap] 2D 00
//      SetTexture 4 [unity_LightmapInd] 2D -10
//      SetTexture 5 [unity_ShadowMask] 2D -10
//      SetTexture 6 [unity_ProbeVolumeSH] 3D 10
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:49:50 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6     z         6     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[70], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xy
dcl_input_ps linear v6.z
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed cc894ab881fcea6f-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r8.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s2
mul r2.xyz, r2.xyzx, cb0[68].xyzx
sample r3.xyzw, v1.zwzz, t1.xyzw, s3
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.x, r3.xyxx, r3.xyxx
min r0.x, r0.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
sqrt r3.z, r0.x
dp3 r4.x, v2.xyzx, r3.xyzx
dp3 r4.y, v3.xyzx, r3.xyzx
dp3 r4.z, v4.xyzx, r3.xyzx
dp3 r0.x, -r1.xyzx, r4.xyzx
add r0.x, r0.x, r0.x
mad r1.xyz, r4.xyzx, -r0.xxxx, -r1.xyzx
sample r1.xyzw, r1.xyzx, t2.xyzw, s4
mul r1.xyz, r2.wwww, r1.xyzx
sample r3.xyzw, v6.xyxx, t5.xyzw, s0
dp4_sat r0.x, r3.xyzw, cb2[46].xyzw
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r4.xyzx
mul r4.xyz, r0.xxxx, cb0[2].xyzx
eq r0.x, cb4[0].x, l(1.000000)
if_nz r0.x
  eq r0.x, cb4[0].y, l(1.000000)
  mul r5.xyz, v3.wwww, cb4[2].xyzx
  mad r5.xyz, cb4[1].xyzx, v2.wwww, r5.xyzx
  mad r5.xyz, cb4[3].xyzx, v4.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb4[4].xyzx
  movc r0.xyz, r0.xxxx, r5.xyzx, r0.yzwy
  add r0.xyz, r0.xyzx, -cb4[6].xyzx
  mul r0.yzw, r0.xxyz, cb4[5].xxyz
  mul r0.y, r0.y, l(0.250000)
  mul r1.w, cb4[0].z, l(0.500000)
  mad r2.w, -cb4[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.y, r1.w
  min r0.x, r2.w, r0.y
  sample r5.xyzw, r0.xzwx, t6.xyzw, s1
  add r6.xyz, r0.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t6.xyzw, s1
  add r0.xyz, r0.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r0.xyzw, r0.xyzx, t6.xyzw, s1
  mov r3.w, l(1.000000)
  dp4 r5.x, r5.xyzw, r3.xyzw
  dp4 r5.y, r6.xyzw, r3.xyzw
  dp4 r5.z, r0.xyzw, r3.xyzw
else 
  mov r3.w, l(1.000000)
  dp4 r5.x, cb2[39].xyzw, r3.xyzw
  dp4 r5.y, cb2[40].xyzw, r3.xyzw
  dp4 r5.z, cb2[41].xyzw, r3.xyzw
endif 
mul r0.xyzw, r3.yzzx, r3.xyzz
dp4 r6.x, cb2[42].xyzw, r0.xyzw
dp4 r6.y, cb2[43].xyzw, r0.xyzw
dp4 r6.z, cb2[44].xyzw, r0.xyzw
mul r0.x, r3.y, r3.y
mad r0.x, r3.x, r3.x, -r0.x
mad r0.xyz, cb2[45].xyzx, r0.xxxx, r6.xyzx
add r0.xyz, r0.xyzx, r5.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
sample r5.xyzw, v5.xyxx, t3.xyzw, s0
log r0.w, r5.w
mul r0.w, r0.w, cb0[0].y
exp r0.w, r0.w
mul r0.w, r0.w, cb0[0].x
mul r5.xyz, r5.xyzx, r0.wwww
sample r6.xyzw, v5.xyxx, t4.xyzw, s0
add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r0.w, r3.xyzx, r6.xyzx
add r0.w, r0.w, l(0.500000)
mul r5.xyz, r0.wwww, r5.xyzx
max r0.w, r6.w, l(0.000100)
div r5.xyz, r5.xyzx, r0.wwww
add r0.xyz, r0.xyzx, r5.xyzx
dp3 r0.w, r3.xyzx, cb2[0].xyzx
max r0.w, r0.w, l(0.000000)
mul r3.xyz, r2.xyzx, r4.xyzx
mul r0.xyz, r0.xyzx, r2.xyzx
mad r0.xyz, r3.xyzx, r0.wwww, r0.xyzx
mad r0.xyz, r1.xyzx, cb0[69].xyzx, r0.xyzx
div r0.w, v6.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb3[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used