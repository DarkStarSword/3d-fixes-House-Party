// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed c6d30ed577328b97-ps.txt
// 3DMigoto: c6d30ed577328b97 |    Unity headers extracted from Alloy_Glass_HighQuality
//    Shader "Alloy/Glass/HighQuality" {
//      CustomEditor "AlloyFieldBasedEditor"
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 500
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Opaque" }
//        Pass 4/6 {
//          Name "FORWARD_DELTA"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Alloy_Glass_HighQuality:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 189 3 4
//   undeciphered1a: 11
//   Keywords { "POINT" "FOG_EXP2" }
//   undeciphered2: 1 3 5 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1360
//   Vector 0 [_LightColor0]
//   Vector 160 [_Color]
//   Vector 176 [_MainTex_ST]
//   Vector 192 [_MainTexVelocity] 2
//   Float 204 [_MainTexUV]
//   Float 240 [_BaseColorVertexTint]
//   Float 244 [_Metal]
//   Float 248 [_Specularity]
//   Float 252 [_SpecularTint]
//   Float 256 [_Roughness]
//   Float 260 [_Occlusion]
//   Matrix 1296 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 10
//   SetTexture 1 [_SpecTex] 2D 20
//   SetTexture 2 [unity_ProbeVolumeSH] 3D 00
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:48:05 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 1   xyzw        0     NONE   float       
// TEXCOORD                 2   xyzw        1     NONE   float   xyzw
// SV_POSITION              0   xyzw        2      POS   float       
// TEXCOORD                 3   xyzw        3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   x   
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[84], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.x
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed c6d30ed577328b97-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v7.xyzx, v7.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v7.xyzx
add r1.xyz, -v4.xyzx, r12.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
lt r0.w, cb0[12].w, l(0.500000)
movc r2.xy, r0.wwww, v6.xyxx, v6.zwzz
mad r2.zw, cb0[12].xxxy, cb1[0].yyyy, cb0[11].zzzw
div r2.zw, r2.zzzw, cb0[11].xxxy
add r2.xy, r2.zwzz, r2.xyxx
mul r2.xy, r2.xyxx, cb0[11].xyxx
dp3 r0.w, -r1.xyzx, r0.xyzx
add r0.w, r0.w, r0.w
mad r3.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
dp3_sat r0.w, r0.xyzx, r1.xyzx
mad r1.w, r0.w, l(-5.554730), l(-6.983160)
mul r1.w, r0.w, r1.w
exp r1.w, r1.w
add r4.xyz, v3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, cb0[15].xxxx, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, cb0[10].xyzx
sample r5.xyzw, r2.xyxx, t0.xyzw, s1
mul_sat r4.xyz, r4.xyzx, r5.xyzx
mul r2.z, r5.w, cb0[10].w
sample r5.xyzw, r2.xyxx, t1.xyzw, s2
mad r2.x, r5.y, l(0.305306017), l(0.682171106)
mad r2.x, r5.y, r2.x, l(0.0125228781)
mad r2.x, r5.y, r2.x, l(-1.000000)
mad r2.x, cb0[16].y, r2.x, l(1.000000)
mul r2.yw, r5.xxxz, cb0[15].yyyz
mul r3.w, r5.w, cb0[16].x
mul r2.w, r2.w, l(0.080000)
dp3 r4.w, r4.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
max r4.w, r4.w, l(0.000001)
div r5.yzw, r4.xxyz, r4.wwww
add r5.yzw, r5.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r5.yzw, cb0[15].wwww, r5.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r6.xyz, r2.wwww, r5.yzwy
mad r4.w, -cb0[15].y, r5.x, l(1.000000)
mul r7.xyz, r4.wwww, r4.xyzx
mad r4.xyz, -r2.wwww, r5.yzwy, r4.xyzx
mad r4.xyz, r2.yyyy, r4.xyzx, r6.xyzx
mad r5.w, r4.w, r2.z, r2.y
mul r2.yzw, r5.wwww, r7.xxyz
mad r4.w, r3.w, l(0.950000), l(0.050000)
mul r4.w, r4.w, r4.w
add r0.w, r0.w, r2.x
mad r0.w, r0.w, r0.w, r2.x
add_sat r0.w, r0.w, l(-1.000000)
eq r2.x, cb4[0].x, l(1.000000)
if_nz r2.x
  eq r2.x, cb4[0].y, l(1.000000)
  mul r6.xyz, v4.yyyy, cb4[2].xyzx
  mad r6.xyz, cb4[1].xyzx, v4.xxxx, r6.xyzx
  mad r6.xyz, cb4[3].xyzx, v4.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb4[4].xyzx
  movc r6.xyz, r2.xxxx, r6.xyzx, v4.xyzx
  add r6.xyz, r6.xyzx, -cb4[6].xyzx
  mul r6.yzw, r6.xxyz, cb4[5].xxyz
  mad r2.x, r6.y, l(0.250000), l(0.750000)
  mad r6.y, cb4[0].z, l(0.500000), l(0.750000)
  max r6.x, r2.x, r6.y
  sample r6.xyzw, r6.xzwx, t2.xyzw, s0
else 
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r2.x, r6.xyzw, cb2[46].xyzw
ge r6.x, cb0[0].w, l(1.000000)
if_nz r6.x
  mov r6.x, cb0[81].y
  mov r6.y, cb0[82].y
  mov r6.z, cb0[83].y
  dp3 r6.w, r6.xyzx, r6.xyzx
  rsq r6.w, r6.w
  mul r6.xyz, r6.wwww, r6.xyzx
  frc r6.w, |cb0[0].w|
  mul r7.x, r6.w, v1.w
  add r6.w, -r6.w, |cb0[0].w|
  mul r6.w, r6.w, l(0.001000)
  mul r6.w, r6.w, v1.w
  mul r7.yzw, r6.wwww, r6.xxyz
  mad r8.xyz, r6.xyzx, r6.wwww, v1.xyzx
  mul r7.yzw, r7.yyzw, l(0.000000, -2.000000, -2.000000, -2.000000)
  dp3 r8.w, r3.xyzx, r8.xyzx
  dp3 r9.x, r3.xyzx, r7.yzwy
  dp3 r9.y, r8.xyzx, r7.yzwy
  mad r8.w, r8.w, r9.x, -r9.y
  dp3 r9.y, r7.yzwy, r7.yzwy
  mad r9.x, -r9.x, r9.x, r9.y
  div_sat r8.w, r8.w, r9.x
  dp3 r9.x, v1.xyzx, r6.xyzx
  max r9.x, -r6.w, r9.x
  min r9.x, r6.w, r9.x
  mad r6.xyz, -r9.xxxx, r6.xyzx, v1.xyzx
  mad r7.yzw, r7.yyzw, r8.wwww, r8.xxyz
  dp3 r8.x, v1.xyzx, v1.xyzx
  rsq r8.y, r8.x
  mul r6.w, r6.w, l(0.250000)
  dp3 r8.z, r7.yzwy, r3.xyzx
  mad r9.xyz, r8.zzzz, r3.xyzx, -r7.yzwy
  dp3 r8.z, r9.xyzx, r9.xyzx
  rsq r8.z, r8.z
  mul_sat r8.z, r7.x, r8.z
  mad r7.yzw, r9.xxyz, r8.zzzz, r7.yyzw
  dp3 r8.z, r7.yzwy, r7.yzwy
  rsq r8.z, r8.z
  mul r7.x, r7.x, r8.z
  mad_sat r7.x, r7.x, l(0.500000), r4.w
  div r7.x, r4.w, r7.x
  mul r9.xyz, r7.yzwy, r8.zzzz
  mul r7.x, r7.x, r7.x
  mad r7.yzw, r7.yyzw, r8.zzzz, r1.xxyz
  dp3 r8.z, r7.yzwy, r7.yzwy
  rsq r8.z, r8.z
  mul r7.yzw, r7.yyzw, r8.zzzz
  dp3_sat r8.x, r9.xyzx, r7.yzwy
  dp3_sat r9.x, r0.xyzx, r7.yzwy
  dp3 r7.y, r6.xyzx, r6.xyzx
  rsq r7.z, r7.y
  mul r6.xyz, r6.xyzx, r7.zzzz
  dp3_sat r9.y, r0.xyzx, r6.xyzx
  add r6.x, r7.y, l(1.000000)
  div r6.xyz, cb0[0].xyzx, r6.xxxx
  mad r6.w, r6.w, r7.z, l(1.000000)
  div r6.xyz, r6.xyzx, r6.wwww
else 
  mul r6.w, v1.w, |cb0[0].w|
  dp3 r7.y, v1.xyzx, r3.xyzx
  mad r3.xyz, r7.yyyy, r3.xyzx, -v1.xyzx
  dp3 r7.y, r3.xyzx, r3.xyzx
  rsq r7.y, r7.y
  mul_sat r7.y, r6.w, r7.y
  mad r3.xyz, r3.xyzx, r7.yyyy, v1.xyzx
  dp3 r7.y, r3.xyzx, r3.xyzx
  rsq r7.y, r7.y
  mul r6.w, r6.w, r7.y
  mad_sat r6.w, r6.w, l(0.500000), r4.w
  div r6.w, r4.w, r6.w
  mul r10.xyz, r3.xyzx, r7.yyyy
  mul r7.x, r6.w, r6.w
  mad r1.xyz, r3.xyzx, r7.yyyy, r1.xyzx
  dp3 r3.x, r1.xyzx, r1.xyzx
  rsq r3.x, r3.x
  mul r1.xyz, r1.xyzx, r3.xxxx
  dp3_sat r8.x, r10.xyzx, r1.xyzx
  dp3_sat r9.x, r0.xyzx, r1.xyzx
  dp3 r1.x, v1.xyzx, v1.xyzx
  rsq r8.y, r1.x
  mul r3.xyz, r8.yyyy, v1.xyzx
  dp3_sat r9.y, r0.xyzx, r3.xyzx
  add r0.x, r1.x, l(1.000000)
  div r6.xyz, cb0[0].xyzx, r0.xxxx
endif 
mul r0.x, r8.y, v1.w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mul r0.x, r0.x, r0.x
mad r0.x, -r0.x, r0.x, l(1.000000)
max r0.x, r0.x, l(0.000000)
mul r0.x, r0.x, r0.x
mul r0.xyz, r0.xxxx, r6.xyzx
lt r1.x, l(0.000000), cb0[0].w
and r1.x, r7.x, r1.x
mul r1.y, r8.x, r8.x
mad r1.z, r9.y, l(-5.554730), l(-6.983160)
mul r1.z, r9.y, r1.z
exp r1.z, r1.z
dp2 r3.x, r3.wwww, r1.yyyy
add r3.x, r3.x, l(-0.500000)
mad r1.z, r1.z, r3.x, l(1.000000)
mad r1.w, r1.w, r3.x, l(1.000000)
mul r1.z, r1.w, r1.z
mad r1.w, r8.x, l(-5.554730), l(-6.983160)
mul r1.w, r8.x, r1.w
exp r1.w, r1.w
add r3.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r1.wwww, r3.xyzx, r4.xyzx
mul r1.w, r4.w, r4.w
mul r3.w, r1.w, l(0.250000)
mad r1.w, -r1.w, l(0.250000), l(1.000000)
mad r1.y, r1.y, r1.w, r3.w
mul r1.w, r9.x, r9.x
mad r4.x, r4.w, r4.w, l(-1.000000)
mad r1.w, r1.w, r4.x, l(1.000000)
mul r1.w, r1.w, r1.w
mul r1.y, r1.y, r1.w
div r1.y, r3.w, r1.y
mul r0.w, r0.w, r1.y
mul r0.w, r1.x, r0.w
mul r1.xyw, r0.wwww, r3.xyxz
mul r0.w, r2.x, r9.y
mad r1.xyz, r2.yzwy, r1.zzzz, r1.xywx
mul r1.xyz, r0.wwww, r1.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
div r0.w, v5.x, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb3[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
mul r5.xyz, r0.xyzx, r0.wwww
min o0.xyzw, r5.xyzw, l(100.000000, 100.000000, 100.000000, 100.000000)
ret 
// Approximately 0 instruction slots used