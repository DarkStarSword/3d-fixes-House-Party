// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dd573e01131d3896-ps.txt
// 3DMigoto: dd573e01131d3896 |    Unity headers extracted from Alloy_Core
//    Shader "Alloy/Core" {
//      CustomEditor "AlloyFieldBasedEditor"
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Alloy_Core:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 213 7 9
//   undeciphered1a: 13
//   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_EXP2" "_NORMALMAP" "EFFECT_BUMP" }
//   undeciphered2: 1 6 6 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1296
//   Vector 0 [_LightColor0]
//   Vector 160 [_Color]
//   Vector 176 [_MainTex_ST]
//   Vector 192 [_MainTexVelocity] 2
//   Float 204 [_MainTexUV]
//   Float 240 [_BaseColorVertexTint]
//   Float 244 [_Metal]
//   Float 248 [_Specularity]
//   Float 252 [_SpecularTint]
//   Float 256 [_Roughness]
//   Float 260 [_Occlusion]
//   Float 264 [_BumpScale]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 20
//   SetTexture 1 [_SpecTex] 2D 30
//   SetTexture 2 [_BumpMap] 2D 40
//   SetTexture 3 [unity_SpecCube0] CUBE 00
//   SetTexture 4 [unity_SpecCube1] CUBE -10
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 10
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:54:15 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz 
// SV_POSITION              0   xyzw        1      POS   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   x   
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyz         7     NONE   float   xyz 
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v0.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dd573e01131d3896-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r14.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
lt r0.w, cb0[12].w, l(0.500000)
movc r1.xy, r0.wwww, v5.xyxx, v5.zwzz
mad r1.zw, cb0[12].xxxy, cb1[0].yyyy, cb0[11].zzzw
div r1.zw, r1.zzzw, cb0[11].xxxy
add r1.xy, r1.zwzz, r1.xyxx
mul r1.xy, r1.xyxx, cb0[11].xyxx
add r2.xyz, v2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, cb0[15].xxxx, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, cb0[10].xyzx
sample r3.xyzw, r1.xyxx, t0.xyzw, s2
mul_sat r2.xyz, r2.xyzx, r3.xyzx
sample r3.xyzw, r1.xyxx, t1.xyzw, s3
mad r0.w, r3.y, l(0.305306017), l(0.682171106)
mad r0.w, r3.y, r0.w, l(0.0125228781)
mad r0.w, r3.y, r0.w, l(-1.000000)
mad r0.w, cb0[16].y, r0.w, l(1.000000)
mul r1.zw, r3.xxxz, cb0[15].yyyz
mul r2.w, r3.w, cb0[16].x
sample r4.xyzw, r1.xyxx, t2.xyzw, s4
mul r4.x, r4.w, r4.x
mad r1.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, cb0[16].zzzz
dp2 r3.y, r1.xyxx, r1.xyxx
min r3.y, r3.y, l(1.000000)
add r3.y, -r3.y, l(1.000000)
sqrt r3.y, r3.y
mul r4.xyz, r1.yyyy, v7.xyzx
mad r4.xyz, r1.xxxx, v6.xyzx, r4.xyzx
mad r3.yzw, r3.yyyy, v8.xxyz, r4.xxyz
dp3 r1.x, r3.yzwy, r3.yzwy
rsq r1.x, r1.x
mul r4.xyz, r1.xxxx, r3.yzwy
dp3 r1.x, -r0.xyzx, r4.xyzx
add r1.x, r1.x, r1.x
mad r3.yzw, r4.xxyz, -r1.xxxx, -r0.xxyz
dp3_sat r1.x, r4.xyzx, r0.xyzx
mul r1.y, r1.x, l(-9.280000)
mad r5.x, r1.x, l(-5.554730), l(-6.983160)
mul r5.x, r1.x, r5.x
exp r5.x, r5.x
mul r1.w, r1.w, l(0.080000)
dp3 r5.y, r2.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
max r5.y, r5.y, l(0.000001)
div r5.yzw, r2.xxyz, r5.yyyy
add r5.yzw, r5.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r5.yzw, cb0[15].wwww, r5.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r6.xyz, r1.wwww, r5.yzwy
mad r3.x, -cb0[15].y, r3.x, l(1.000000)
mul r7.xyz, r2.xyzx, r3.xxxx
mad r2.xyz, -r1.wwww, r5.yzwy, r2.xyzx
mad r2.xyz, r1.zzzz, r2.xyzx, r6.xyzx
mad r1.z, r2.w, l(0.950000), l(0.050000)
mul r1.z, r1.z, r1.z
add r1.x, r0.w, r1.x
mad r1.x, r1.x, r1.x, r0.w
add_sat r1.x, r1.x, l(-1.000000)
eq r1.w, cb5[0].x, l(1.000000)
if_nz r1.w
  eq r3.x, cb5[0].y, l(1.000000)
  mul r5.yzw, v3.yyyy, cb5[2].xxyz
  mad r5.yzw, cb5[1].xxyz, v3.xxxx, r5.yyzw
  mad r5.yzw, cb5[3].xxyz, v3.zzzz, r5.yyzw
  add r5.yzw, r5.yyzw, cb5[4].xxyz
  movc r5.yzw, r3.xxxx, r5.yyzw, v3.xxyz
  add r5.yzw, r5.yyzw, -cb5[6].xxyz
  mul r6.yzw, r5.yyzw, cb5[5].xxyz
  mad r3.x, r6.y, l(0.250000), l(0.750000)
  mad r5.y, cb5[0].z, l(0.500000), l(0.750000)
  max r6.x, r3.x, r5.y
  sample r6.xyzw, r6.xzwx, t5.xyzw, s1
else 
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r3.x, r6.xyzw, cb2[46].xyzw
if_nz r1.w
  eq r1.w, cb5[0].y, l(1.000000)
  mul r5.yzw, v3.yyyy, cb5[2].xxyz
  mad r5.yzw, cb5[1].xxyz, v3.xxxx, r5.yyzw
  mad r5.yzw, cb5[3].xxyz, v3.zzzz, r5.yyzw
  add r5.yzw, r5.yyzw, cb5[4].xxyz
  movc r5.yzw, r1.wwww, r5.yyzw, v3.xxyz
  add r5.yzw, r5.yyzw, -cb5[6].xxyz
  mul r6.yzw, r5.yyzw, cb5[5].xxyz
  mul r1.w, r6.y, l(0.250000)
  mul r5.y, cb5[0].z, l(0.500000)
  mad r5.z, -cb5[0].z, l(0.500000), l(0.250000)
  max r1.w, r1.w, r5.y
  min r6.x, r5.z, r1.w
  sample r8.xyzw, r6.xzwx, t5.xyzw, s1
  add r5.yzw, r6.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r9.xyzw, r5.yzwy, t5.xyzw, s1
  add r5.yzw, r6.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r6.xyzw, r5.yzwy, t5.xyzw, s1
  mov r4.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r4.xyzw
  dp4 r8.y, r9.xyzw, r4.xyzw
  dp4 r8.z, r6.xyzw, r4.xyzw
else 
  mov r4.w, l(1.000000)
  dp4 r8.x, cb2[39].xyzw, r4.xyzw
  dp4 r8.y, cb2[40].xyzw, r4.xyzw
  dp4 r8.z, cb2[41].xyzw, r4.xyzw
endif 
add r5.yzw, r8.xxyz, v0.xxyz
max r5.yzw, r5.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), cb4[2].w
if_nz r1.w
  dp3 r1.w, r3.yzwy, r3.yzwy
  rsq r1.w, r1.w
  mul r6.xyz, r1.wwww, r3.yzwy
  add r8.xyz, -v3.xyzx, cb4[0].xyzx
  div r8.xyz, r8.xyzx, r6.xyzx
  add r9.xyz, -v3.xyzx, cb4[1].xyzx
  div r9.xyz, r9.xyzx, r6.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r1.w, r8.y, r8.x
  min r1.w, r8.z, r1.w
  add r8.xyz, v3.xyzx, -cb4[2].xyzx
  mad r6.xyz, r6.xyzx, r1.wwww, r8.xyzx
else 
  mov r6.xyz, r3.yzwy
endif 
mad r1.w, -r2.w, l(0.700000), l(1.700000)
mul r1.w, r1.w, r2.w
mul r1.w, r1.w, l(6.000000)
sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r1.w
add r4.w, r6.w, l(-1.000000)
mad r4.w, cb4[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb4[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb4[3].x
mul r8.xyz, r6.xyzx, r4.wwww
lt r6.w, cb4[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb4[6].w
  if_nz r6.w
    dp3 r6.w, r3.yzwy, r3.yzwy
    rsq r6.w, r6.w
    mul r9.xyz, r3.yzwy, r6.wwww
    add r10.xyz, -v3.xyzx, cb4[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -v3.xyzx, cb4[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r6.w, r10.y, r10.x
    min r6.w, r10.z, r6.w
    add r10.xyz, v3.xyzx, -cb4[6].xyzx
    mad r9.xyz, r9.xyzx, r6.wwww, r10.xyzx
  else 
    mov r9.xyz, r3.yzwy
  endif 
  sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r1.w
  add r1.w, r9.w, l(-1.000000)
  mad r1.w, cb4[7].w, r1.w, l(1.000000)
  log r1.w, r1.w
  mul r1.w, r1.w, cb4[7].y
  exp r1.w, r1.w
  mul r1.w, r1.w, cb4[7].x
  mul r9.xyz, r9.xyzx, r1.wwww
  mad r6.xyz, r4.wwww, r6.xyzx, -r9.xyzx
  mad r8.xyz, cb4[1].wwww, r6.xyzx, r9.xyzx
endif 
mad r6.xyzw, r2.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r1.w, r6.x, r6.x
exp r1.y, r1.y
min r1.y, r1.y, r1.w
mad r1.y, r1.y, r6.x, r6.y
mad r1.yw, r1.yyyy, l(0.000000, -1.040000, 0.000000, 1.040000), r6.zzzw
mad r6.xyz, r2.xyzx, r1.yyyy, r1.wwww
mul r5.yzw, r0.wwww, r5.yyzw
mul r9.xyz, r2.xyzx, r5.yzwy
mad r6.xyz, r8.xyzx, r6.xyzx, -r9.xyzx
mad r6.xyz, r1.xxxx, r6.xyzx, r9.xyzx
mad r5.yzw, r5.yyzw, r7.xxyz, r6.xxyz
mul r1.yw, |cb0[0].wwww|, l(0.000000, 0.100000, 0.000000, 0.050000)
dp3 r0.w, cb2[0].xyzx, r3.yzwy
mad r3.yzw, r0.wwww, r3.yyzw, -cb2[0].xxyz
dp3 r0.w, r3.yzwy, r3.yzwy
rsq r0.w, r0.w
mul r0.w, r0.w, r1.y
min r0.w, r0.w, l(1.000000)
mad r3.yzw, r3.yyzw, r0.wwww, cb2[0].xxyz
dp3 r0.w, r3.yzwy, r3.yzwy
rsq r0.w, r0.w
mad r1.y, r1.w, r0.w, r1.z
min r1.y, r1.y, l(1.000000)
div r1.y, r1.z, r1.y
mul r6.xyz, r0.wwww, r3.yzwy
mul r1.y, r1.y, r1.y
mad r0.xyz, r3.yzwy, r0.wwww, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3_sat r0.w, r6.xyzx, r0.xyzx
dp3_sat r0.x, r4.xyzx, r0.xyzx
dp3_sat r0.y, r4.xyzx, cb2[0].xyzx
lt r0.z, l(0.000000), cb0[0].w
and r0.z, r1.y, r0.z
mul r1.y, r0.w, r0.w
mad r1.w, r0.y, l(-5.554730), l(-6.983160)
mul r1.w, r0.y, r1.w
exp r1.w, r1.w
dp2 r2.w, r2.wwww, r1.yyyy
add r2.w, r2.w, l(-0.500000)
mad r1.w, r1.w, r2.w, l(1.000000)
mad r2.w, r5.x, r2.w, l(1.000000)
mul r1.w, r1.w, r2.w
mad r2.w, r0.w, l(-5.554730), l(-6.983160)
mul r0.w, r0.w, r2.w
exp r0.w, r0.w
add r3.yzw, -r2.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
mad r2.xyz, r0.wwww, r3.yzwy, r2.xyzx
mul r0.w, r1.z, r1.z
mul r2.w, r0.w, l(0.250000)
mad r0.w, -r0.w, l(0.250000), l(1.000000)
mad r0.w, r1.y, r0.w, r2.w
mul r0.x, r0.x, r0.x
mad r1.y, r1.z, r1.z, l(-1.000000)
mad r0.x, r0.x, r1.y, l(1.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.w, r0.x
div r0.x, r2.w, r0.x
mul r0.x, r1.x, r0.x
mul r0.x, r0.z, r0.x
mul r0.xzw, r0.xxxx, r2.xxyz
mul r0.y, r0.y, r3.x
mad r0.xzw, r7.xxyz, r1.wwww, r0.xxzw
mul r0.xyz, r0.xzwx, r0.yyyy
mad r0.xyz, cb0[0].xyzx, r0.xyzx, r5.yzwy
div r0.w, v4.x, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb3[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad r0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
min o0.xyz, r0.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used