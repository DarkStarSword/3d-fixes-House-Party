// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 90aff1e3a181125f-ps.txt
// 3DMigoto: 90aff1e3a181125f |    Unity headers extracted from Legacy Shaders_Reflective_Bumped Diffuse
//    Shader "Legacy Shaders/Reflective/Bumped Diffuse" {
//      Fallback "Legacy Shaders/Reflective/VertexLit"
//      SubShader 1/1 {
//        LOD 300
//        Tags { "RenderType"="Opaque" }
//        Pass 1/6 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Legacy Shaders_Reflective_Bumped Diffuse:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 49 5 2
//   undeciphered1a: 6
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
//   undeciphered2: 1 5 6 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1152
//   Vector 32 [_LightColor0]
//   Vector 1088 [_Color]
//   Vector 1104 [_ReflectColor]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 20
//   SetTexture 1 [_BumpMap] 2D 30
//   SetTexture 2 [_Cube] CUBE 40
//   SetTexture 3 [_ShadowMapTexture] 2D 10
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 00
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:34:26 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
// TEXCOORD                 7   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[70], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 90aff1e3a181125f-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r7.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r1.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s2
mul r3.xyz, r3.xyzx, cb0[68].xyzx
sample r4.xyzw, v1.zwzz, t1.xyzw, s3
mul r4.x, r4.w, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.x, r4.xyxx, r4.xyxx
min r0.x, r0.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
sqrt r4.z, r0.x
dp3 r5.x, v2.xyzx, r4.xyzx
dp3 r5.y, v3.xyzx, r4.xyzx
dp3 r5.z, v4.xyzx, r4.xyzx
dp3 r0.x, -r2.xyzx, r5.xyzx
add r0.x, r0.x, r0.x
mad r2.xyz, r5.xyzx, -r0.xxxx, -r2.xyzx
sample r2.xyzw, r2.xyzx, t2.xyzw, s4
mul r2.xyz, r3.wwww, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[69].xyzx
mov r4.x, cb4[9].z
mov r4.y, cb4[10].z
mov r4.z, cb4[11].z
dp3 r0.x, r1.xyzx, r4.xyzx
add r1.xyz, r0.yzwy, -cb3[25].xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
add r1.x, -r0.x, r1.x
mad r0.x, cb3[25].w, r1.x, r0.x
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
eq r1.x, cb5[0].x, l(1.000000)
if_nz r1.x
  eq r1.y, cb5[0].y, l(1.000000)
  mul r4.xyz, v3.wwww, cb5[2].xyzx
  mad r4.xyz, cb5[1].xyzx, v2.wwww, r4.xyzx
  mad r4.xyz, cb5[3].xyzx, v4.wwww, r4.xyzx
  add r4.xyz, r4.xyzx, cb5[4].xyzx
  movc r0.yzw, r1.yyyy, r4.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb5[6].xxyz
  mul r4.yzw, r0.yyzw, cb5[5].xxyz
  mad r0.y, r4.y, l(0.250000), l(0.750000)
  mad r0.z, cb5[0].z, l(0.500000), l(0.750000)
  max r4.x, r0.z, r0.y
  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
else 
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r0.y, r4.xyzw, cb2[46].xyzw
div r0.zw, v5.xxxy, v5.wwww
sample r4.xyzw, r0.zwzz, t3.xyzw, s1
add_sat r0.x, r0.x, r4.x
min r0.y, r0.x, r0.y
movc r0.x, r1.x, r0.y, r0.x
dp3 r0.y, r5.xyzx, r5.xyzx
rsq r0.y, r0.y
mul r0.yzw, r0.yyyy, r5.xxyz
mul r1.xyz, r0.xxxx, cb0[2].xyzx
dp3 r0.x, r0.yzwy, cb2[0].xyzx
max r0.x, r0.x, l(0.000000)
mul r0.yzw, r1.xxyz, r3.xxyz
mad o0.xyz, r0.yzwy, r0.xxxx, r2.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used