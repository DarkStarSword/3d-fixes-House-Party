// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 127a5e9f5d3fcbb3-ps.txt
// 3DMigoto: 127a5e9f5d3fcbb3 |    Unity headers extracted from Legacy Shaders_Bumped Specular
//    Shader "Legacy Shaders/Bumped Specular" {
//      Fallback "Legacy Shaders/Specular"
//      SubShader 1/2 {
//        LOD 400
//        Tags { "RenderType"="Opaque" }
//        Pass 1/6 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Legacy Shaders_Bumped Specular:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 68 6 4
//   undeciphered1a: 8
//   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
//   undeciphered2: 1 3 4 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1152
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 1088 [_Color]
//   Float 1104 [_Shininess]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 10
//   SetTexture 1 [_BumpMap] 2D 20
//   SetTexture 2 [unity_ProbeVolumeSH] 3D 00
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:06:26 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 7   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[70], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 127a5e9f5d3fcbb3-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.y, v2.w
mov r0.z, v3.w
mov r0.w, v4.w
add r1.xyz, -r0.yzwy, r9.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
sample r2.xyzw, v1.xyxx, t0.xyzw, s1
mul r2.xyz, r2.xyzx, cb0[68].xyzx
sample r3.xyzw, v1.zwzz, t1.xyzw, s2
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r3.w, cb3[0].y, l(1.000000)
  mul r4.xyz, v3.wwww, cb3[2].xyzx
  mad r4.xyz, cb3[1].xyzx, v2.wwww, r4.xyzx
  mad r4.xyz, cb3[3].xyzx, v4.wwww, r4.xyzx
  add r4.xyz, r4.xyzx, cb3[4].xyzx
  movc r4.xyz, r3.wwww, r4.xyzx, r0.yzwy
  add r4.xyz, r4.xyzx, -cb3[6].xyzx
  mul r4.yzw, r4.xxyz, cb3[5].xxyz
  mad r3.w, r4.y, l(0.250000), l(0.750000)
  mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  max r4.x, r3.w, r4.y
  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
else 
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
dp3 r4.x, v2.xyzx, r3.xyzx
dp3 r4.y, v3.xyzx, r3.xyzx
dp3 r4.z, v4.xyzx, r3.xyzx
dp3 r3.x, r4.xyzx, r4.xyzx
rsq r3.x, r3.x
mul r4.xyz, r3.xxxx, r4.xyzx
mul r3.xyz, r3.wwww, cb0[2].xyzx
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r5.xyz, v3.wwww, cb3[2].xyzx
  mad r5.xyz, cb3[1].xyzx, v2.wwww, r5.xyzx
  mad r5.xyz, cb3[3].xyzx, v4.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb3[4].xyzx
  movc r0.yzw, r1.wwww, r5.xxyz, r0.yyzw
  add r0.yzw, r0.yyzw, -cb3[6].xxyz
  mul r5.yzw, r0.yyzw, cb3[5].xxyz
  mul r0.y, r5.y, l(0.250000)
  mul r0.z, cb3[0].z, l(0.500000)
  mad r0.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r5.x, r0.w, r0.y
  sample r6.xyzw, r5.xzwx, t2.xyzw, s0
  add r0.yzw, r5.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r7.xyzw, r0.yzwy, t2.xyzw, s0
  add r0.yzw, r5.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r5.xyzw, r0.yzwy, t2.xyzw, s0
  mov r4.w, l(1.000000)
  dp4 r6.x, r6.xyzw, r4.xyzw
  dp4 r6.y, r7.xyzw, r4.xyzw
  dp4 r6.z, r5.xyzw, r4.xyzw
else 
  mov r4.w, l(1.000000)
  dp4 r6.x, cb2[39].xyzw, r4.xyzw
  dp4 r6.y, cb2[40].xyzw, r4.xyzw
  dp4 r6.z, cb2[41].xyzw, r4.xyzw
endif 
add r0.yzw, r6.xxyz, v5.xxyz
mad r1.xyz, r1.xyzx, r0.xxxx, cb2[0].xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
dp3 r0.x, r4.xyzx, cb2[0].xyzx
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r1.x, r4.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
mul r1.y, cb0[69].x, l(128.000000)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.x, r1.x
mul r1.x, r2.w, r1.x
mul r1.yzw, r2.xxyz, r3.xxyz
mul r3.xyz, r3.xyzx, cb0[3].xyzx
mul r3.xyz, r1.xxxx, r3.xyzx
mad r1.xyz, r1.yzwy, r0.xxxx, r3.xyzx
mad o0.xyz, r2.xyzx, r0.yzwy, r1.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used