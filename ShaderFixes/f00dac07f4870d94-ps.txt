// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f00dac07f4870d94-ps.txt
// 3DMigoto: f00dac07f4870d94 |    Unity headers extracted from Standard
//    Shader "Standard" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
//      SubShader 1/2 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD_DELTA"
//          Tags { "LIGHTMODE"="FORWARDADD" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 179 7 6
//   undeciphered1a: 9
//   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "FOG_EXP2" "_NORMALMAP" "_METALLICGLOSSMAP" "_ALPHAPREMULTIPLY_ON" }
//   undeciphered2: 1 8 7 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1264
//   Vector 32 [_LightColor0]
//   Vector 1088 [_Color]
//   Float 1152 [_BumpScale]
//   Float 1168 [_GlossMapScale]
//   Matrix 1200 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 16 [_LightPositionRange]
//   Vector 32 [_LightProjectionParams]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   Matrix 272 [unity_MatrixVP]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 30
//   SetTexture 1 [_MetallicGlossMap] 2D 50
//   SetTexture 2 [_BumpMap] 2D 40
//   SetTexture 3 [unity_RandomRotation16] 2D 10
//   SetTexture 4 [_LightTextureB0] 2D 70
//   SetTexture 5 [_LightTexture0] CUBE 60
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 00
//   SetTexture 7 [_ShadowMapTexture] CUBE 20
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:58:36 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_immediateConstantBuffer { { 0.123298101, -0.0392337516, 0.118705302, 0.795156479},
                              { -0.562537730, -0.360242814, 0.117367499, 0.608787775},
                              { 0.640371919, 0.0682112277, -0.0995851830, 0.724884212},
                              { 0.281338692, -0.588158786, 0.425981194, 0.615271807},
                              { -0.573121786, 0.270057201, 0.372357398, 0.889278710},
                              { 0.203316599, 0.419773906, -0.0228967592, 0.997290790},
                              { 0.846795797, -0.354558408, -0.0823479071, 0.504838586},
                              { -0.423045099, -0.797441, 0.182123497, 0.967378676},
                              { 0.719025314, 0.569357514, -0.213726401, 0.901174605},
                              { 0.0381546803, -0.991417110, 0.311506599, 0.420541495},
                              { -0.223626494, 0.502861381, 0.121632896, 0.383266},
                              { 0.172225401, 0.983663, 0.594893873, 0.759436071},
                              { -0.291246414, 0.898051202, 0.757646501, 0.533641696},
                              { -0.898414791, -0.0876278579, -0.521125, 0.759980321},
                              { -0.699508488, 0.673418522, -0.292312711, 0.654569924},
                              { -0.293196, -0.0628911927, 0.678247273, 0.223850},
                              { 0, 0, -0.307715207, 0.469762713},
                              { 0, 0, 0.448491305, 0.261945486},
                              { 0, 0, -0.530879915, 0.499821514},
                              { 0, 0, -0.737963378, 0.530493617},
                              { 0, 0, 0.0261313301, 0.176430196},
                              { 0, 0, -0.146107301, 0.304738402},
                              { 0, 0, -0.845102727, 0.324907303},
                              { 0, 0, -0.450770706, 0.210199699},
                              { 0, 0, -0.613728225, 0.328367412},
                              { 0, 0, -0.238586798, 0.0871624425},
                              { 0, 0, 0.338654786, 0.0152841099},
                              { 0, 0, -0.0423083305, -0.149465203},
                              { 0, 0, 0.167115, -0.109864801},
                              { 0, 0, -0.525606, 0.0157201905},
                              { 0, 0, -0.796685517, 0.131872699},
                              { 0, 0, 0.570428729, 0.477827311},
                              { 0, 0, -0.951663673, 0.00272503193},
                              { 0, 0, -0.706822276, -0.157232106},
                              { 0, 0, 0.217330605, -0.349408299},
                              { 0, 0, 0.0610042587, -0.449281603},
                              { 0, 0, 0.233398199, 0.224718899},
                              { 0, 0, 0.0727098733, -0.639673412},
                              { 0, 0, 0.467080802, -0.232466906},
                              { 0, 0, 0.372952789, -0.512625},
                              { 0, 0, 0.567507684, -0.405454397},
                              { 0, 0, -0.369198412, -0.128435},
                              { 0, 0, 0.875247300, 0.225698799},
                              { 0, 0, -0.268012702, -0.468439311},
                              { 0, 0, -0.117755100, -0.720575094},
                              { 0, 0, -0.127012104, -0.310542405},
                              { 0, 0, 0.559539378, -0.0630923733},
                              { 0, 0, -0.929913580, -0.187000796},
                              { 0, 0, 0.974674, 0.0367734805},
                              { 0, 0, 0.772673488, -0.0694472417},
                              { 0, 0, -0.499536097, -0.366374910},
                              { 0, 0, 0.647416770, -0.231578693},
                              { 0, 0, 0.191144899, -0.885892093},
                              { 0, 0, 0.367100090, -0.797053516},
                              { 0, 0, -0.697035313, -0.444943190},
                              { 0, 0, -0.417599, -0.718932629},
                              { 0, 0, -0.558474779, -0.602650404},
                              { 0, 0, -0.0262444802, -0.914142311},
                              { 0, 0, 0.565636, -0.658514917},
                              { 0, 0, -0.874976, -0.399787903},
                              { 0, 0, 0.917784274, -0.211052403},
                              { 0, 0, 0.815692723, -0.396955699},
                              { 0, 0, -0.283305407, -0.839544415},
                              { 0, 0, 0.799141, -0.588637173} }
dcl_constantbuffer cb0[79], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[23], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_comparison
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f00dac07f4870d94-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s3
sample r1.xyzw, v1.xyxx, t1.xyzw, s5
mul r2.xyzw, r0.xyzw, cb0[68].xyzw
mad r0.xyz, r0.xyzx, cb0[68].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r0.xyz, r1.xxxx, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r0.w, -r1.x, l(0.960000), l(0.960000)
mul r1.xyz, r0.wwww, r2.xyzx
sample r3.xyzw, v1.xyxx, t2.xyzw, s4
mul r3.x, r3.w, r3.x
mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, cb0[72].xxxx
dp2 r2.z, r2.xyxx, r2.xyxx
min r2.z, r2.z, l(1.000000)
add r2.z, -r2.z, l(1.000000)
sqrt r2.z, r2.z
mul r3.xyz, r2.yyyy, v4.xyzx
mad r3.xyz, v3.xyzx, r2.xxxx, r3.xyzx
mad r2.xyz, v5.xyzx, r2.zzzz, r3.xyzx
dp3 r3.x, r2.xyzx, r2.xyzx
rsq r3.x, r3.x
mul r2.xyz, r2.xyzx, r3.xxxx
dp3 r3.x, v2.xyzx, v2.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, v2.xyzx
mul r1.xyz, r2.wwww, r1.xyzx
add r3.w, -r0.w, l(1.000000)
mad o0.w, r2.w, r0.w, r3.w
mul r4.xyz, v6.yyyy, cb0[76].xyzx
mad r4.xyz, cb0[75].xyzx, v6.xxxx, r4.xyzx
mad r4.xyz, cb0[77].xyzx, v6.zzzz, r4.xyzx
add r4.xyz, r4.xyzx, cb0[78].xyzx
add r5.xyz, -v6.xyzx, r10.xyzx
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r0.w, r5.xyzx, r6.xyzx
add r5.xyz, v6.xyzx, -cb3[25].xyzx
dp3 r2.w, r5.xyzx, r5.xyzx
sqrt r2.w, r2.w
add r2.w, -r0.w, r2.w
mad r0.w, cb3[25].w, r2.w, r0.w
mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
eq r2.w, cb6[0].x, l(1.000000)
if_nz r2.w
  eq r3.w, cb6[0].y, l(1.000000)
  mul r5.xyz, v6.yyyy, cb6[2].xyzx
  mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb6[4].xyzx
  movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  add r5.xyz, r5.xyzx, -cb6[6].xyzx
  mul r5.yzw, r5.xxyz, cb6[5].xxyz
  mad r3.w, r5.y, l(0.250000), l(0.750000)
  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
  max r5.x, r3.w, r4.w
  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
else 
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
add r5.xyz, v6.xyzx, -cb2[1].xyzx
max r4.w, |r5.y|, |r5.x|
max r4.w, |r5.z|, r4.w
add r4.w, r4.w, -cb2[2].z
max r4.w, r4.w, l(0.000000)
mul r4.w, r4.w, cb2[2].w
div r4.w, cb2[2].y, r4.w
add r4.w, r4.w, -cb2[2].x
add r4.w, -r4.w, l(1.000000)
mul r6.xyz, v6.yyyy, cb4[18].xywx
mad r6.xyz, cb4[17].xywx, v6.xxxx, r6.xyzx
mad r6.xyz, cb4[19].xywx, v6.zzzz, r6.xyzx
add r6.xyz, r6.xyzx, cb4[20].xywx
mul r7.xz, r6.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r5.w, r6.y, cb1[5].x
mul r7.w, r5.w, l(0.500000)
add r6.xy, r7.zzzz, r7.xwxx
div r6.xy, r6.xyxx, r6.zzzz
sample r6.xyzw, r6.xyxx, t3.xyzw, s1
mul r7.xyz, r6.xyzx, l(45.543201, 12.989800, 78.233002, 0.000000)
mad r6.xyz, r6.zxyz, l(12.989800, 78.233002, 45.543201, 0.000000), -r7.xyzx
sincos r6.xyz, null, r6.xyzx
mul r6.xyz, r6.xyzx, l(43758.546875, 43758.546875, 43758.546875, 0.000000)
frc r6.xyz, r6.xyzx
mad r6.xyz, r6.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), l(0.000100, 0.000100, 0.000100, 0.000000)
mul r7.xyz, r5.zxyz, r6.xyzx
mad r6.xyz, r5.yzxy, r6.yzxy, -r7.xyzx
dp3 r5.w, r6.xyzx, r6.xyzx
rsq r5.w, r5.w
mul r6.xyz, r5.wwww, r6.xyzx
mul r7.xyz, r5.zxyz, r6.yzxy
mad r7.xyz, r5.yzxy, r6.zxyz, -r7.xyzx
dp3 r5.w, r7.xyzx, r7.xyzx
rsq r5.w, r5.w
mul r7.xyz, r5.wwww, r7.xyzx
add r5.w, -cb3[24].x, l(1.000000)
mul r5.w, r5.w, l(0.100000)
mul r6.xyz, r5.wwww, r6.xyzx
mul r7.xyz, r5.wwww, r7.xyzx
mov r5.w, l(0)
mov r6.w, l(0)
loop 
  ige r7.w, r6.w, l(16)
  breakc_nz r7.w
  mul r8.xyz, r7.xyzx, icb[r6.w + 0].yyyy
  mad r8.xyz, r6.xyzx, icb[r6.w + 0].xxxx, r8.xyzx
  mad r8.xyz, r8.xyzx, l(1.250000, 1.250000, 1.250000, 0.000000), r5.xyzx
  sample_c_lz r7.w, r8.xyzx, t7.xxxx, s2, r4.w
  add r5.w, r5.w, r7.w
  iadd r6.w, r6.w, l(1)
endloop 
eq r8.xy, r5.wwww, l(0.000000, 16.000000, 0.000000, 0.000000)
or r5.w, r8.y, r8.x
if_z r5.w
  mul r5.w, cb2[1].w, l(0.015000)
  mov r6.w, l(0)
  mov r7.w, l(0)
  loop 
    itof r8.y, r7.w
    ge r8.y, r8.y, l(64.000000)
    breakc_nz r8.y
    mul r8.yzw, r7.xxyz, icb[r7.w + 0].wwww
    mad r8.yzw, r6.xxyz, icb[r7.w + 0].zzzz, r8.yyzw
    add r8.yzw, r5.xxyz, r8.yyzw
    sample_c_lz r8.y, r8.yzwy, t7.xxxx, s2, r4.w
    div_sat r8.y, r8.y, r5.w
    add r6.w, r6.w, r8.y
    iadd r7.w, r7.w, l(1)
  endloop 
  mul r4.w, r6.w, l(0.015625)
else 
  movc r4.w, r8.x, l(0), l(1.000000)
endif 
add r0.w, r0.w, r4.w
min r0.w, r0.w, l(1.000000)
min r3.w, r0.w, r3.w
movc r0.w, r2.w, r3.w, r0.w
dp3 r2.w, r4.xyzx, r4.xyzx
sample r5.xyzw, r2.wwww, t4.xyzw, s7
sample r4.xyzw, r4.xyzx, t5.xyzw, s6
mul r2.w, r4.w, r5.x
mul r0.w, r0.w, r2.w
mov r4.x, v3.w
mov r4.y, v4.w
mov r4.z, v5.w
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, r4.xyzx
mul r6.xyz, r0.wwww, cb0[2].xyzx
mad r0.w, -r1.w, cb0[73].x, l(1.000000)
mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
dp3 r1.w, r2.xyzx, -r3.xyzx
dp3_sat r2.w, r2.xyzx, r5.xyzx
dp3_sat r2.x, r2.xyzx, r4.xyzx
dp3_sat r2.y, r5.xyzx, r4.xyzx
mul r2.z, r2.y, r2.y
dp2 r2.z, r2.zzzz, r0.wwww
add r2.z, r2.z, l(-0.500000)
add r3.x, -r2.w, l(1.000000)
mul r3.y, r3.x, r3.x
mul r3.y, r3.y, r3.y
mul r3.x, r3.x, r3.y
mad r3.x, r2.z, r3.x, l(1.000000)
add r3.y, -|r1.w|, l(1.000000)
mul r3.z, r3.y, r3.y
mul r3.z, r3.z, r3.z
mul r3.y, r3.y, r3.z
mad r2.z, r2.z, r3.y, l(1.000000)
mul r2.z, r2.z, r3.x
mul r2.z, r2.w, r2.z
mul r0.w, r0.w, r0.w
max r0.w, r0.w, l(0.002000)
add r3.x, -r0.w, l(1.000000)
mad r3.y, |r1.w|, r3.x, r0.w
mad r3.x, r2.w, r3.x, r0.w
mul r1.w, |r1.w|, r3.x
mad r1.w, r2.w, r3.y, r1.w
add r1.w, r1.w, l(0.000010)
div r1.w, l(0.500000), r1.w
mul r0.w, r0.w, r0.w
mad r3.x, r2.x, r0.w, -r2.x
mad r2.x, r3.x, r2.x, l(1.000000)
mul r0.w, r0.w, l(0.318309873)
mad r2.x, r2.x, r2.x, l(1.000000012E-007)
div r0.w, r0.w, r2.x
mul r0.w, r0.w, r1.w
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.w, r0.w
max r0.w, r0.w, l(0.000000)
dp3 r1.w, r0.xyzx, r0.xyzx
ne r1.w, r1.w, l(0.000000)
and r1.w, r1.w, l(0x3f800000)
mul r0.w, r0.w, r1.w
mul r2.xzw, r2.zzzz, r6.xxyz
mul r3.xyz, r6.xyzx, r0.wwww
add r0.w, -r2.y, l(1.000000)
mul r1.w, r0.w, r0.w
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
mul r0.xyz, r0.xyzx, r3.xyzx
mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb5[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
mul o0.xyz, r0.xyzx, r0.wwww
ret 
// Approximately 0 instruction slots used