// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed c28b9211a41e7aae-ps.txt
// 3DMigoto: c28b9211a41e7aae |    Unity headers extracted from Alloy_Glass_HighQuality
//    Shader "Alloy/Glass/HighQuality" {
//      CustomEditor "AlloyFieldBasedEditor"
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 500
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Opaque" }
//        Pass 3/6 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Alloy_Glass_HighQuality:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 172 3 7
//   undeciphered1a: 13
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 5 5 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1296
//   Vector 0 [_LightColor0]
//   Vector 160 [_Color]
//   Vector 176 [_MainTex_ST]
//   Vector 192 [_MainTexVelocity] 2
//   Float 204 [_MainTexUV]
//   Float 240 [_BaseColorVertexTint]
//   Float 244 [_Metal]
//   Float 248 [_Specularity]
//   Float 252 [_SpecularTint]
//   Float 256 [_Roughness]
//   Float 260 [_Occlusion]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 20
//   SetTexture 1 [_SpecTex] 2D 30
//   SetTexture 2 [unity_SpecCube0] CUBE 00
//   SetTexture 3 [unity_SpecCube1] CUBE -10
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 10
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:46:42 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float       
// SV_POSITION              0   xyzw        1      POS   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed c28b9211a41e7aae-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v5.xyzx, v5.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v5.xyzx
add r1.xyz, -v3.xyzx, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
lt r0.w, cb0[12].w, l(0.500000)
movc r2.xy, r0.wwww, v4.xyxx, v4.zwzz
mad r2.zw, cb0[12].xxxy, cb1[0].yyyy, cb0[11].zzzw
div r2.zw, r2.zzzw, cb0[11].xxxy
add r2.xy, r2.zwzz, r2.xyxx
mul r2.xy, r2.xyxx, cb0[11].xyxx
dp3 r0.w, -r1.xyzx, r0.xyzx
add r0.w, r0.w, r0.w
mad r3.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
dp3_sat r0.w, r0.xyzx, r1.xyzx
mul r1.w, r0.w, l(-9.280000)
mad r2.z, r0.w, l(-5.554730), l(-6.983160)
mul r2.z, r0.w, r2.z
exp r2.z, r2.z
add r4.xyz, v2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, cb0[15].xxxx, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, cb0[10].xyzx
sample r5.xyzw, r2.xyxx, t0.xyzw, s2
mul_sat r4.xyz, r4.xyzx, r5.xyzx
mul r2.w, r5.w, cb0[10].w
sample r5.xyzw, r2.xyxx, t1.xyzw, s3
mad r2.x, r5.y, l(0.305306017), l(0.682171106)
mad r2.x, r5.y, r2.x, l(0.0125228781)
mad r2.x, r5.y, r2.x, l(-1.000000)
mad r2.x, cb0[16].y, r2.x, l(1.000000)
mul r5.yz, r5.xxzx, cb0[15].yyzy
mul r2.y, r5.w, cb0[16].x
mul r3.w, r5.z, l(0.080000)
dp3 r4.w, r4.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
max r4.w, r4.w, l(0.000001)
div r6.xyz, r4.xyzx, r4.wwww
add r6.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r6.xyz, cb0[15].wwww, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r7.xyz, r3.wwww, r6.xyzx
mad r4.w, -cb0[15].y, r5.x, l(1.000000)
mul r5.xzw, r4.wwww, r4.xxyz
mad r4.xyz, -r3.wwww, r6.xyzx, r4.xyzx
mad r4.xyz, r5.yyyy, r4.xyzx, r7.xyzx
mad r6.w, r4.w, r2.w, r5.y
mul r5.xyz, r5.xzwx, r6.wwww
mad r2.w, r2.y, l(0.950000), l(0.050000)
mul r2.w, r2.w, r2.w
add r0.w, r0.w, r2.x
mad r0.w, r0.w, r0.w, r2.x
add_sat r0.w, r0.w, l(-1.000000)
eq r2.x, cb4[0].x, l(1.000000)
if_nz r2.x
  eq r2.x, cb4[0].y, l(1.000000)
  mul r7.xyz, v3.yyyy, cb4[2].xyzx
  mad r7.xyz, cb4[1].xyzx, v3.xxxx, r7.xyzx
  mad r7.xyz, cb4[3].xyzx, v3.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb4[4].xyzx
  movc r7.xyz, r2.xxxx, r7.xyzx, v3.xyzx
  add r7.xyz, r7.xyzx, -cb4[6].xyzx
  mul r7.yzw, r7.xxyz, cb4[5].xxyz
  mad r2.x, r7.y, l(0.250000), l(0.750000)
  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
  max r7.x, r2.x, r3.w
  sample r7.xyzw, r7.xzwx, t4.xyzw, s1
else 
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r2.x, r7.xyzw, cb2[46].xyzw
lt r3.w, l(0.000000), cb3[2].w
if_nz r3.w
  dp3 r3.w, r3.xyzx, r3.xyzx
  rsq r3.w, r3.w
  mul r7.xyz, r3.wwww, r3.xyzx
  add r8.xyz, -v3.xyzx, cb3[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -v3.xyzx, cb3[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r3.w, r8.y, r8.x
  min r3.w, r8.z, r3.w
  add r8.xyz, v3.xyzx, -cb3[2].xyzx
  mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
else 
  mov r7.xyz, r3.xyzx
endif 
mad r3.w, -r2.y, l(0.700000), l(1.700000)
mul r3.w, r2.y, r3.w
mul r3.w, r3.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t2.xyzw, s0, r3.w
add r4.w, r7.w, l(-1.000000)
mad r4.w, cb3[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb3[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb3[3].x
mul r8.xyz, r7.xyzx, r4.wwww
lt r5.w, cb3[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb3[6].w
  if_nz r5.w
    dp3 r5.w, r3.xyzx, r3.xyzx
    rsq r5.w, r5.w
    mul r9.xyz, r3.xyzx, r5.wwww
    add r10.xyz, -v3.xyzx, cb3[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -v3.xyzx, cb3[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r5.w, r10.y, r10.x
    min r5.w, r10.z, r5.w
    add r10.xyz, v3.xyzx, -cb3[6].xyzx
    mad r9.xyz, r9.xyzx, r5.wwww, r10.xyzx
  else 
    mov r9.xyz, r3.xyzx
  endif 
  sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r3.w
  add r3.w, r9.w, l(-1.000000)
  mad r3.w, cb3[7].w, r3.w, l(1.000000)
  log r3.w, r3.w
  mul r3.w, r3.w, cb3[7].y
  exp r3.w, r3.w
  mul r3.w, r3.w, cb3[7].x
  mul r9.xyz, r9.xyzx, r3.wwww
  mad r7.xyz, r4.wwww, r7.xyzx, -r9.xyzx
  mad r8.xyz, cb3[1].wwww, r7.xyzx, r9.xyzx
endif 
mad r7.xyzw, r2.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r3.w, r7.x, r7.x
exp r1.w, r1.w
min r1.w, r1.w, r3.w
mad r1.w, r1.w, r7.x, r7.y
mad r7.xy, r1.wwww, l(-1.040000, 1.040000, 0.000000, 0.000000), r7.zwzz
mad r7.xyz, r4.xyzx, r7.xxxx, r7.yyyy
mul r7.xyz, r7.xyzx, r8.xyzx
mul r8.xy, |cb0[0].wwww|, l(0.100000, 0.050000, 0.000000, 0.000000)
dp3 r1.w, cb2[0].xyzx, r3.xyzx
mad r3.xyz, r1.wwww, r3.xyzx, -cb2[0].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r1.w, r1.w, r8.x
min r1.w, r1.w, l(1.000000)
mad r3.xyz, r3.xyzx, r1.wwww, cb2[0].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mad r3.w, r8.y, r1.w, r2.w
min r3.w, r3.w, l(1.000000)
div r3.w, r2.w, r3.w
mul r8.xyz, r1.wwww, r3.xyzx
mul r3.w, r3.w, r3.w
mad r1.xyz, r3.xyzx, r1.wwww, r1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3_sat r1.w, r8.xyzx, r1.xyzx
dp3_sat r1.x, r0.xyzx, r1.xyzx
dp3_sat r0.x, r0.xyzx, cb2[0].xyzx
lt r0.y, l(0.000000), cb0[0].w
and r0.y, r3.w, r0.y
mul r0.z, r1.w, r1.w
mad r1.y, r0.x, l(-5.554730), l(-6.983160)
mul r1.y, r0.x, r1.y
exp r1.y, r1.y
dp2 r1.z, r2.yyyy, r0.zzzz
add r1.z, r1.z, l(-0.500000)
mad r1.y, r1.y, r1.z, l(1.000000)
mad r1.z, r2.z, r1.z, l(1.000000)
mul r1.y, r1.z, r1.y
mad r1.z, r1.w, l(-5.554730), l(-6.983160)
mul r1.z, r1.w, r1.z
exp r1.z, r1.z
add r3.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r1.zzzz, r3.xyzx, r4.xyzx
mul r1.z, r2.w, r2.w
mul r1.w, r1.z, l(0.250000)
mad r1.z, -r1.z, l(0.250000), l(1.000000)
mad r0.z, r0.z, r1.z, r1.w
mul r1.x, r1.x, r1.x
mad r1.z, r2.w, r2.w, l(-1.000000)
mad r1.x, r1.x, r1.z, l(1.000000)
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
div r0.z, r1.w, r0.z
mul r0.z, r0.w, r0.z
mul r0.y, r0.y, r0.z
mul r1.xzw, r0.yyyy, r3.xxyz
mul r0.x, r0.x, r2.x
mad r1.xyz, r5.xyzx, r1.yyyy, r1.xzwx
mul r0.xyz, r0.xxxx, r1.xyzx
mul r0.xyz, r0.xyzx, cb0[0].xyzx
mad r6.xyz, r0.wwww, r7.xyzx, r0.xyzx
min o0.xyzw, r6.xyzw, l(100.000000, 100.000000, 100.000000, 100.000000)
ret 
// Approximately 0 instruction slots used