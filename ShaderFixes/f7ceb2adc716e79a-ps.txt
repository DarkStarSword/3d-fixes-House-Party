// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f7ceb2adc716e79a-ps.txt
// 3DMigoto: f7ceb2adc716e79a |    Unity headers extracted from Standard
//    Shader "Standard" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
//      SubShader 1/2 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 180 8 6
//   undeciphered1a: 13
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "INSTANCING_ON" "_NORMALMAP" "_DETAIL_MULX2" }
//   undeciphered2: 1 10 7 9 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1200
//   Vector 32 [_LightColor0]
//   Vector 1088 [_Color]
//   Float 1152 [_BumpScale]
//   Float 1156 [_DetailNormalMapScale]
//   Float 1160 [_Metallic]
//   Float 1164 [_Glossiness]
//   Float 1172 [_OcclusionStrength]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 20
//   SetTexture 1 [_DetailMask] 2D 50
//   SetTexture 2 [_DetailAlbedoMap] 2D 30
//   SetTexture 3 [_BumpMap] 2D 40
//   SetTexture 4 [_DetailNormalMap] 2D 60
//   SetTexture 5 [_ShadowMapTexture] 2D 80
//   SetTexture 6 [_OcclusionMap] 2D 70
//   SetTexture 7 [unity_SpecCube0] CUBE 00
//   SetTexture 8 [unity_SpecCube1] CUBE -10
//   SetTexture 9 [unity_ProbeVolumeSH] 3D 10
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityReflectionProbes" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 16:00:29 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[74], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f7ceb2adc716e79a-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s2
mul r0.xyz, r0.xyzx, cb0[68].xyzx
sample r1.xyzw, v1.xyxx, t1.xyzw, s5
sample r2.xyzw, v1.zwzz, t2.xyzw, s3
mul r1.xyz, r1.wwww, r2.xyzx
add r0.w, -r1.w, l(1.000000)
mad r1.xyz, r1.xyzx, l(4.594794, 4.594794, 4.594794, 0.000000), r0.wwww
mul r2.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r0.xyzx, r1.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r0.xyz, cb0[72].zzzz, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r0.w, -cb0[72].z, l(0.960000), l(0.960000)
mul r1.xyz, r0.wwww, r2.xyzx
sample r2.xyzw, v1.xyxx, t3.xyzw, s4
mul r2.x, r2.w, r2.x
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r2.xyxx, cb0[72].xxxx
dp2 r2.z, r3.xyxx, r3.xyxx
min r2.z, r2.z, l(1.000000)
add r2.z, -r2.z, l(1.000000)
sqrt r3.z, r2.z
sample r4.xyzw, v1.zwzz, t4.xyzw, s6
mul r4.x, r4.w, r4.x
mad r2.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r2.zw, r2.zzzw, cb0[72].yyyy
dp2 r3.w, r2.zwzz, r2.zwzz
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.w, r3.w
mad r2.xy, r2.xyxx, cb0[72].xxxx, r2.zwzz
mul r2.z, r3.w, r3.z
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mad r2.xyz, r2.xyzx, r2.wwww, -r3.xyzx
mad r2.xyz, r1.wwww, r2.xyzx, r3.xyzx
mul r3.xyz, r2.yyyy, v4.xyzx
mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx
mov r4.x, v3.w
mov r4.y, v4.w
mov r4.z, v5.w
add r5.xyz, -r4.xyzx, r14.xyzx
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r2.w, r5.xyzx, r6.xyzx
add r5.xyz, r4.xyzx, -cb3[25].xyzx
dp3 r3.w, r5.xyzx, r5.xyzx
sqrt r3.w, r3.w
add r3.w, -r2.w, r3.w
mad r2.w, cb3[25].w, r3.w, r2.w
mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
eq r3.w, cb6[0].x, l(1.000000)
if_nz r3.w
  eq r4.w, cb6[0].y, l(1.000000)
  mul r5.xyz, v4.wwww, cb6[2].xyzx
  mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb6[4].xyzx
  movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  add r5.xyz, r5.xyzx, -cb6[6].xyzx
  mul r5.yzw, r5.xxyz, cb6[5].xxyz
  mad r4.w, r5.y, l(0.250000), l(0.750000)
  mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  max r5.x, r4.w, r5.y
  sample r5.xyzw, r5.xzwx, t9.xyzw, s1
else 
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
div r5.xy, v7.xyxx, v7.wwww
sample r5.xyzw, r5.xyxx, t5.xyzw, s8
add_sat r2.w, r2.w, r5.x
min r4.w, r2.w, r4.w
movc r2.w, r3.w, r4.w, r2.w
sample r5.xyzw, v1.xyxx, t6.xyzw, s7
add r3.w, -cb0[73].y, l(1.000000)
mad r3.w, r5.y, cb0[73].y, r3.w
add r4.w, -cb0[72].w, l(1.000000)
dp3 r5.x, r3.xyzx, r2.xyzx
add r5.x, r5.x, r5.x
mad r5.xyz, r2.xyzx, -r5.xxxx, r3.xyzx
mul r6.xyz, r2.wwww, cb0[2].xyzx
lt r2.w, l(0.000000), cb5[2].w
if_nz r2.w
  dp3 r2.w, r5.xyzx, r5.xyzx
  rsq r2.w, r2.w
  mul r7.xyz, r2.wwww, r5.xyzx
  add r8.xyz, -r4.xyzx, cb5[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -r4.xyzx, cb5[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r2.w, r8.y, r8.x
  min r2.w, r8.z, r2.w
  add r8.xyz, r4.xyzx, -cb5[2].xyzx
  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
else 
  mov r7.xyz, r5.xyzx
endif 
mad r2.w, -r4.w, l(0.700000), l(1.700000)
mul r2.w, r2.w, r4.w
mul r2.w, r2.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t7.xyzw, s0, r2.w
add r5.w, r7.w, l(-1.000000)
mad r5.w, cb5[3].w, r5.w, l(1.000000)
log r5.w, r5.w
mul r5.w, r5.w, cb5[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb5[3].x
mul r8.xyz, r7.xyzx, r5.wwww
lt r6.w, cb5[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb5[6].w
  if_nz r6.w
    dp3 r6.w, r5.xyzx, r5.xyzx
    rsq r6.w, r6.w
    mul r9.xyz, r5.xyzx, r6.wwww
    add r10.xyz, -r4.xyzx, cb5[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -r4.xyzx, cb5[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r6.w, r10.y, r10.x
    min r6.w, r10.z, r6.w
    add r4.xyz, r4.xyzx, -cb5[6].xyzx
    mad r5.xyz, r9.xyzx, r6.wwww, r4.xyzx
  endif 
  sample_l r9.xyzw, r5.xyzx, t8.xyzw, s0, r2.w
  add r2.w, r9.w, l(-1.000000)
  mad r2.w, cb5[7].w, r2.w, l(1.000000)
  log r2.w, r2.w
  mul r2.w, r2.w, cb5[7].y
  exp r2.w, r2.w
  mul r2.w, r2.w, cb5[7].x
  mul r4.xyz, r9.xyzx, r2.wwww
  mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
  mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
endif 
mul r4.xyz, r3.wwww, r8.xyzx
mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
dp3 r1.w, r2.xyzx, -r3.xyzx
dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
dp3_sat r2.x, r2.xyzx, r5.xyzx
dp3_sat r2.y, cb2[0].xyzx, r5.xyzx
mul r2.z, r2.y, r2.y
dp2 r2.z, r2.zzzz, r4.wwww
add r2.z, r2.z, l(-0.500000)
add r3.x, -r2.w, l(1.000000)
mul r3.y, r3.x, r3.x
mul r3.y, r3.y, r3.y
mul r3.x, r3.x, r3.y
mad r3.x, r2.z, r3.x, l(1.000000)
add r3.y, -|r1.w|, l(1.000000)
mul r3.z, r3.y, r3.y
mul r3.z, r3.z, r3.z
mul r3.y, r3.y, r3.z
mad r2.z, r2.z, r3.y, l(1.000000)
mul r2.z, r2.z, r3.x
mul r2.z, r2.w, r2.z
mul r3.x, r4.w, r4.w
max r3.x, r3.x, l(0.002000)
add r3.z, -r3.x, l(1.000000)
mad r3.w, |r1.w|, r3.z, r3.x
mad r3.z, r2.w, r3.z, r3.x
mul r1.w, |r1.w|, r3.z
mad r1.w, r2.w, r3.w, r1.w
add r1.w, r1.w, l(0.000010)
div r1.w, l(0.500000), r1.w
mul r3.z, r3.x, r3.x
mad r3.w, r2.x, r3.z, -r2.x
mad r2.x, r3.w, r2.x, l(1.000000)
mul r3.z, r3.z, l(0.318309873)
mad r2.x, r2.x, r2.x, l(1.000000012E-007)
div r2.x, r3.z, r2.x
mul r1.w, r1.w, r2.x
mul r1.w, r1.w, l(3.14159274)
mul r1.w, r2.w, r1.w
max r1.w, r1.w, l(0.000000)
mad r2.x, r3.x, r3.x, l(1.000000)
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
dp3 r2.w, r0.xyzx, r0.xyzx
ne r2.w, r2.w, l(0.000000)
and r2.w, r2.w, l(0x3f800000)
mul r1.w, r1.w, r2.w
add r0.w, -r0.w, cb0[72].w
add_sat r0.w, r0.w, l(1.000000)
mul r3.xzw, r2.zzzz, r6.xxyz
mul r5.xyz, r6.xyzx, r1.wwww
add r1.w, -r2.y, l(1.000000)
mul r2.y, r1.w, r1.w
mul r2.y, r2.y, r2.y
mul r1.w, r1.w, r2.y
add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
mul r2.yzw, r2.yyzw, r5.xxyz
mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
mul r2.xyz, r4.xyzx, r2.xxxx
add r3.xzw, -r0.xxyz, r0.wwww
mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used