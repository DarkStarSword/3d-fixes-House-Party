// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 834a272684ba3a44-ps.txt
// 3DMigoto: 834a272684ba3a44 |    Unity headers extracted from Standard
//    Shader "Standard" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
//      SubShader 1/2 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 188 10 6
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "_ALPHABLEND_ON" "_DETAIL_MULX2" }
//   undeciphered2: 1 10 7 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1200
//   Vector 0 [unity_Lightmap_HDR]
//   Vector 32 [_LightColor0]
//   Vector 1088 [_Color]
//   Float 1160 [_Metallic]
//   Float 1164 [_Glossiness]
//   Float 1172 [_OcclusionStrength]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 672 [unity_SHBr]
//   Vector 688 [unity_SHBg]
//   Vector 704 [unity_SHBb]
//   Vector 720 [unity_SHC]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 30
//   SetTexture 1 [_DetailMask] 2D 50
//   SetTexture 2 [_DetailAlbedoMap] 2D 40
//   SetTexture 3 [_ShadowMapTexture] 2D 70
//   SetTexture 4 [_OcclusionMap] 2D 60
//   SetTexture 5 [unity_Lightmap] 2D 00
//   SetTexture 6 [unity_LightmapInd] 2D -10
//   SetTexture 7 [unity_SpecCube0] CUBE 10
//   SetTexture 8 [unity_SpecCube1] CUBE -10
//   SetTexture 9 [unity_ProbeVolumeSH] 3D 20
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityReflectionProbes" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:31:15 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[74], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.w
dcl_input_ps linear v4.w
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xy
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 834a272684ba3a44-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s3
mul o0.w, r0.w, cb0[68].w
mul r0.xyz, r0.xyzx, cb0[68].xyzx
sample r1.xyzw, v1.xyxx, t1.xyzw, s5
sample r2.xyzw, v1.zwzz, t2.xyzw, s4
mul r1.xyz, r1.wwww, r2.xyzx
add r0.w, -r1.w, l(1.000000)
mad r1.xyz, r1.xyzx, l(4.594794, 4.594794, 4.594794, 0.000000), r0.wwww
mul r2.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r0.xyzx, r1.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r0.xyz, cb0[72].zzzz, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r0.w, -cb0[72].z, l(0.960000), l(0.960000)
mul r1.xyz, r0.wwww, r2.xyzx
dp3 r1.w, v5.xyzx, v5.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v5.xyzx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx
div r4.xy, v7.xyxx, v7.wwww
sample r4.xyzw, r4.xyxx, t3.xyzw, s7
sample r5.xyzw, v1.xyxx, t4.xyzw, s6
add r3.w, -cb0[73].y, l(1.000000)
mad r3.w, r5.y, cb0[73].y, r3.w
add r4.y, -cb0[72].w, l(1.000000)
dp3 r4.z, r3.xyzx, r2.xyzx
add r4.z, r4.z, r4.z
mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
mov r6.x, v3.w
mov r6.y, v4.w
mov r6.z, v5.w
add r7.xyz, -r6.xyzx, r15.xyzx
mov r8.x, cb4[9].z
mov r8.y, cb4[10].z
mov r8.z, cb4[11].z
dp3 r4.z, r7.xyzx, r8.xyzx
add r7.xyz, r6.xyzx, -cb3[25].xyzx
dp3 r4.w, r7.xyzx, r7.xyzx
sqrt r4.w, r4.w
add r4.w, -r4.z, r4.w
mad r4.z, cb3[25].w, r4.w, r4.z
mad_sat r4.z, r4.z, cb3[24].z, cb3[24].w
add_sat r4.x, r4.z, r4.x
mul r4.xzw, r4.xxxx, cb0[2].xxyz
eq r5.w, cb6[0].x, l(1.000000)
if_nz r5.w
  eq r5.w, cb6[0].y, l(1.000000)
  mul r7.xyz, v4.wwww, cb6[2].xyzx
  mad r7.xyz, cb6[1].xyzx, v3.wwww, r7.xyzx
  mad r7.xyz, cb6[3].xyzx, v5.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, cb6[4].xyzx
  movc r7.xyz, r5.wwww, r7.xyzx, r6.xyzx
  add r7.xyz, r7.xyzx, -cb6[6].xyzx
  mul r7.yzw, r7.xxyz, cb6[5].xxyz
  mul r5.w, r7.y, l(0.250000)
  mul r6.w, cb6[0].z, l(0.500000)
  mad r7.y, -cb6[0].z, l(0.500000), l(0.250000)
  max r5.w, r5.w, r6.w
  min r7.x, r7.y, r5.w
  sample r8.xyzw, r7.xzwx, t9.xyzw, s2
  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r9.xyzw, r9.xyzx, t9.xyzw, s2
  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r7.xyzx, t9.xyzw, s2
  mov r2.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r2.xyzw
  dp4 r8.y, r9.xyzw, r2.xyzw
  dp4 r8.z, r7.xyzw, r2.xyzw
else 
  mov r2.w, l(1.000000)
  dp4 r8.x, cb2[39].xyzw, r2.xyzw
  dp4 r8.y, cb2[40].xyzw, r2.xyzw
  dp4 r8.z, cb2[41].xyzw, r2.xyzw
endif 
mul r7.xyzw, r2.yzzx, r2.xyzz
dp4 r9.x, cb2[42].xyzw, r7.xyzw
dp4 r9.y, cb2[43].xyzw, r7.xyzw
dp4 r9.z, cb2[44].xyzw, r7.xyzw
mul r2.w, r2.y, r2.y
mad r2.w, r2.x, r2.x, -r2.w
mad r7.xyz, cb2[45].xyzx, r2.wwww, r9.xyzx
add r7.xyz, r7.xyzx, r8.xyzx
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
sample r8.xyzw, v6.xyxx, t5.xyzw, s0
log r2.w, r8.w
mul r2.w, r2.w, cb0[0].y
exp r2.w, r2.w
mul r2.w, r2.w, cb0[0].x
mul r8.xyz, r8.xyzx, r2.wwww
sample r9.xyzw, v6.xyxx, t6.xyzw, s0
add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r2.w, r2.xyzx, r9.xyzx
add r2.w, r2.w, l(0.500000)
mul r8.xyz, r2.wwww, r8.xyzx
max r2.w, r9.w, l(0.000100)
div r8.xyz, r8.xyzx, r2.wwww
add r7.xyz, r7.xyzx, r8.xyzx
lt r2.w, l(0.000000), cb5[2].w
if_nz r2.w
  dp3 r2.w, r5.xyzx, r5.xyzx
  rsq r2.w, r2.w
  mul r8.xyz, r2.wwww, r5.xyzx
  add r9.xyz, -r6.xyzx, cb5[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r6.xyzx, cb5[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r2.w, r9.y, r9.x
  min r2.w, r9.z, r2.w
  add r9.xyz, r6.xyzx, -cb5[2].xyzx
  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
else 
  mov r8.xyz, r5.xyzx
endif 
mad r2.w, -r4.y, l(0.700000), l(1.700000)
mul r2.w, r2.w, r4.y
mul r2.w, r2.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t7.xyzw, s1, r2.w
add r5.w, r8.w, l(-1.000000)
mad r5.w, cb5[3].w, r5.w, l(1.000000)
log r5.w, r5.w
mul r5.w, r5.w, cb5[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb5[3].x
mul r9.xyz, r8.xyzx, r5.wwww
lt r6.w, cb5[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb5[6].w
  if_nz r6.w
    dp3 r6.w, r5.xyzx, r5.xyzx
    rsq r6.w, r6.w
    mul r10.xyz, r5.xyzx, r6.wwww
    add r11.xyz, -r6.xyzx, cb5[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r6.xyzx, cb5[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r6.w, r11.y, r11.x
    min r6.w, r11.z, r6.w
    add r6.xyz, r6.xyzx, -cb5[6].xyzx
    mad r5.xyz, r10.xyzx, r6.wwww, r6.xyzx
  endif 
  sample_l r6.xyzw, r5.xyzx, t8.xyzw, s1, r2.w
  add r2.w, r6.w, l(-1.000000)
  mad r2.w, cb5[7].w, r2.w, l(1.000000)
  log r2.w, r2.w
  mul r2.w, r2.w, cb5[7].y
  exp r2.w, r2.w
  mul r2.w, r2.w, cb5[7].x
  mul r5.xyz, r6.xyzx, r2.wwww
  mad r6.xyz, r5.wwww, r8.xyzx, -r5.xyzx
  mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
endif 
mul r5.xyz, r3.wwww, r9.xyzx
mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
dp3 r1.w, r6.xyzx, r6.xyzx
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, r6.xyzx
dp3 r1.w, r2.xyzx, -r3.xyzx
dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
dp3_sat r2.x, r2.xyzx, r6.xyzx
dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
mul r2.z, r2.y, r2.y
dp2 r2.z, r2.zzzz, r4.yyyy
add r2.z, r2.z, l(-0.500000)
add r3.x, -r2.w, l(1.000000)
mul r3.y, r3.x, r3.x
mul r3.y, r3.y, r3.y
mul r3.x, r3.x, r3.y
mad r3.x, r2.z, r3.x, l(1.000000)
add r3.y, -|r1.w|, l(1.000000)
mul r3.z, r3.y, r3.y
mul r3.z, r3.z, r3.z
mul r3.y, r3.y, r3.z
mad r2.z, r2.z, r3.y, l(1.000000)
mul r2.z, r2.z, r3.x
mul r2.z, r2.w, r2.z
mul r3.x, r4.y, r4.y
max r3.x, r3.x, l(0.002000)
add r3.z, -r3.x, l(1.000000)
mad r4.y, |r1.w|, r3.z, r3.x
mad r3.z, r2.w, r3.z, r3.x
mul r1.w, |r1.w|, r3.z
mad r1.w, r2.w, r4.y, r1.w
add r1.w, r1.w, l(0.000010)
div r1.w, l(0.500000), r1.w
mul r3.z, r3.x, r3.x
mad r4.y, r2.x, r3.z, -r2.x
mad r2.x, r4.y, r2.x, l(1.000000)
mul r3.z, r3.z, l(0.318309873)
mad r2.x, r2.x, r2.x, l(1.000000012E-007)
div r2.x, r3.z, r2.x
mul r1.w, r1.w, r2.x
mul r1.w, r1.w, l(3.14159274)
mul r1.w, r2.w, r1.w
max r1.w, r1.w, l(0.000000)
mad r2.x, r3.x, r3.x, l(1.000000)
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
dp3 r2.w, r0.xyzx, r0.xyzx
ne r2.w, r2.w, l(0.000000)
and r2.w, r2.w, l(0x3f800000)
mul r1.w, r1.w, r2.w
add r0.w, -r0.w, cb0[72].w
add_sat r0.w, r0.w, l(1.000000)
mul r6.xyz, r2.zzzz, r4.xzwx
mad r3.xzw, r7.xxyz, r3.wwww, r6.xxyz
mul r4.xyz, r4.xzwx, r1.wwww
add r1.w, -r2.y, l(1.000000)
mul r2.y, r1.w, r1.w
mul r2.y, r2.y, r2.y
mul r1.w, r1.w, r2.y
add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
mul r2.yzw, r2.yyzw, r4.xxyz
mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
mul r2.xyz, r5.xyzx, r2.xxxx
add r3.xzw, -r0.xxyz, r0.wwww
mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
ret 
// Approximately 0 instruction slots used