// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 529812a3fe51278d-ps.txt
// 3DMigoto: 529812a3fe51278d |    Unity headers extracted from Standard (Specular setup)
//    Shader "Standard (Specular setup)" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
//      SubShader 1/2 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD_DELTA"
//          Tags { "LIGHTMODE"="FORWARDADD" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard (Specular setup):
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 159 7 6
//   undeciphered1a: 8
//   Keywords { "SPOT" "SHADOWS_DEPTH" "_ALPHATEST_ON" "_NORMALMAP" "_PARALLAXMAP" }
//   undeciphered2: 1 8 6 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1264
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 1088 [_Color]
//   Float 1104 [_Cutoff]
//   Float 1152 [_BumpScale]
//   Float 1164 [_Glossiness]
//   Float 1176 [_Parallax]
//   Matrix 1200 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 16 [_LightPositionRange]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_ParallaxMap] 2D 50
//   SetTexture 1 [_MainTex] 2D 30
//   SetTexture 2 [_BumpMap] 2D 40
//   SetTexture 3 [unity_RandomRotation16] 2D 10
//   SetTexture 4 [_LightTexture0] 2D 60
//   SetTexture 5 [_LightTextureB0] 2D 70
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 00
//   SetTexture 7 [_ShadowMapTexture] 2D 20
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:20:22 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_immediateConstantBuffer { { 0.123298101, -0.0392337516, 0.118705302, 0.795156479},
                              { -0.562537730, -0.360242814, 0.117367499, 0.608787775},
                              { 0.640371919, 0.0682112277, -0.0995851830, 0.724884212},
                              { 0.281338692, -0.588158786, 0.425981194, 0.615271807},
                              { -0.573121786, 0.270057201, 0.372357398, 0.889278710},
                              { 0.203316599, 0.419773906, -0.0228967592, 0.997290790},
                              { 0.846795797, -0.354558408, -0.0823479071, 0.504838586},
                              { -0.423045099, -0.797441, 0.182123497, 0.967378676},
                              { 0.719025314, 0.569357514, -0.213726401, 0.901174605},
                              { 0.0381546803, -0.991417110, 0.311506599, 0.420541495},
                              { -0.223626494, 0.502861381, 0.121632896, 0.383266},
                              { 0.172225401, 0.983663, 0.594893873, 0.759436071},
                              { -0.291246414, 0.898051202, 0.757646501, 0.533641696},
                              { -0.898414791, -0.0876278579, -0.521125, 0.759980321},
                              { -0.699508488, 0.673418522, -0.292312711, 0.654569924},
                              { -0.293196, -0.0628911927, 0.678247273, 0.223850},
                              { 0, 0, -0.307715207, 0.469762713},
                              { 0, 0, 0.448491305, 0.261945486},
                              { 0, 0, -0.530879915, 0.499821514},
                              { 0, 0, -0.737963378, 0.530493617},
                              { 0, 0, 0.0261313301, 0.176430196},
                              { 0, 0, -0.146107301, 0.304738402},
                              { 0, 0, -0.845102727, 0.324907303},
                              { 0, 0, -0.450770706, 0.210199699},
                              { 0, 0, -0.613728225, 0.328367412},
                              { 0, 0, -0.238586798, 0.0871624425},
                              { 0, 0, 0.338654786, 0.0152841099},
                              { 0, 0, -0.0423083305, -0.149465203},
                              { 0, 0, 0.167115, -0.109864801},
                              { 0, 0, -0.525606, 0.0157201905},
                              { 0, 0, -0.796685517, 0.131872699},
                              { 0, 0, 0.570428729, 0.477827311},
                              { 0, 0, -0.951663673, 0.00272503193},
                              { 0, 0, -0.706822276, -0.157232106},
                              { 0, 0, 0.217330605, -0.349408299},
                              { 0, 0, 0.0610042587, -0.449281603},
                              { 0, 0, 0.233398199, 0.224718899},
                              { 0, 0, 0.0727098733, -0.639673412},
                              { 0, 0, 0.467080802, -0.232466906},
                              { 0, 0, 0.372952789, -0.512625},
                              { 0, 0, 0.567507684, -0.405454397},
                              { 0, 0, -0.369198412, -0.128435},
                              { 0, 0, 0.875247300, 0.225698799},
                              { 0, 0, -0.268012702, -0.468439311},
                              { 0, 0, -0.117755100, -0.720575094},
                              { 0, 0, -0.127012104, -0.310542405},
                              { 0, 0, 0.559539378, -0.0630923733},
                              { 0, 0, -0.929913580, -0.187000796},
                              { 0, 0, 0.974674, 0.0367734805},
                              { 0, 0, 0.772673488, -0.0694472417},
                              { 0, 0, -0.499536097, -0.366374910},
                              { 0, 0, 0.647416770, -0.231578693},
                              { 0, 0, 0.191144899, -0.885892093},
                              { 0, 0, 0.367100090, -0.797053516},
                              { 0, 0, -0.697035313, -0.444943190},
                              { 0, 0, -0.417599, -0.718932629},
                              { 0, 0, -0.558474779, -0.602650404},
                              { 0, 0, -0.0262444802, -0.914142311},
                              { 0, 0, 0.565636, -0.658514917},
                              { 0, 0, -0.874976, -0.399787903},
                              { 0, 0, 0.917784274, -0.211052403},
                              { 0, 0, 0.815692723, -0.396955699},
                              { 0, 0, -0.283305407, -0.839544415},
                              { 0, 0, 0.799141, -0.588637173} }
dcl_constantbuffer cb0[79], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_comparison
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 529812a3fe51278d-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v8.xyzx, v8.xyzx
rsq r0.x, r0.x
mul r0.yz, r0.xxxx, v8.xxyx
sample r1.xyzw, v1.xyxx, t0.xyzw, s5
mul r0.w, cb0[73].z, l(0.500000)
mad r0.w, r1.y, cb0[73].z, -r0.w
mad r0.x, v8.z, r0.x, l(0.420000)
div r0.xy, r0.yzyy, r0.xxxx
mad r0.xy, r0.wwww, r0.xyxx, v1.xyxx
sample r1.xyzw, r0.xyxx, t1.xyzw, s3
mul r1.xyz, r1.xyzx, cb0[68].xyzx
mad r0.z, r1.w, cb0[68].w, -cb0[69].x
lt r0.z, r0.z, l(0.000000)
discard_nz r0.z
max r0.z, cb0[3].y, cb0[3].x
max r0.z, r0.z, cb0[3].z
add r0.z, -r0.z, l(1.000000)
mul r1.xyz, r0.zzzz, r1.xyzx
sample r0.xyzw, r0.xyxx, t2.xyzw, s4
mul r0.x, r0.w, r0.x
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, cb0[72].xxxx
dp2 r0.z, r0.xyxx, r0.xyxx
min r0.z, r0.z, l(1.000000)
add r0.z, -r0.z, l(1.000000)
sqrt r0.z, r0.z
mul r2.xyz, r0.yyyy, v4.xyzx
mad r0.xyw, v3.xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, v5.xyzx, r0.zzzz, r0.xywx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v2.xyzx
mul r3.xyzw, v6.yyyy, cb0[76].xyzw
mad r3.xyzw, cb0[75].xyzw, v6.xxxx, r3.xyzw
mad r3.xyzw, cb0[77].xyzw, v6.zzzz, r3.xyzw
add r3.xyzw, r3.xyzw, cb0[78].xyzw
add r4.xyz, -v6.xyzx, r9.xyzx
mov r5.x, cb4[9].z
mov r5.y, cb4[10].z
mov r5.z, cb4[11].z
dp3 r0.w, r4.xyzx, r5.xyzx
add r4.xyz, v6.xyzx, -cb3[25].xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
sqrt r1.w, r1.w
add r1.w, -r0.w, r1.w
mad r0.w, cb3[25].w, r1.w, r0.w
mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
eq r1.w, cb5[0].x, l(1.000000)
if_nz r1.w
  eq r2.w, cb5[0].y, l(1.000000)
  mul r4.xyz, v6.yyyy, cb5[2].xyzx
  mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb5[4].xyzx
  movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  add r4.xyz, r4.xyzx, -cb5[6].xyzx
  mul r4.yzw, r4.xxyz, cb5[5].xxyz
  mad r2.w, r4.y, l(0.250000), l(0.750000)
  mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  max r4.x, r2.w, r4.y
  sample r4.xyzw, r4.xzwx, t6.xyzw, s0
else 
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
mul r4.xyzw, v6.yyyy, cb3[9].xyzw
mad r4.xyzw, cb3[8].xyzw, v6.xxxx, r4.xyzw
mad r4.xyzw, cb3[10].xyzw, v6.zzzz, r4.xyzw
add r4.xyzw, r4.xyzw, cb3[11].xyzw
div r4.xyz, r4.xyzx, r4.wwww
mul r5.xy, r4.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)
sample r5.xyzw, r5.xyxx, t3.xyzw, s1
dp3 r4.w, r5.xyzx, l(12.989800, 78.233002, 45.543201, 0.000000)
sincos r4.w, null, r4.w
mul r4.w, r4.w, l(43758.546875)
frc r4.w, r4.w
mul r4.w, r4.w, l(10.000000)
sincos r5.x, r6.x, r4.w
add r4.w, -cb3[24].x, l(1.000000)
mul r4.w, r4.w, l(0.012500)
mov r5.yz, l(0,0,0,0)
loop 
  ige r5.w, r5.z, l(16)
  breakc_nz r5.w
  mul r6.yz, r6.xxxx, icb[r5.z + 0].xxyx
  mad r7.x, icb[r5.z + 0].y, r5.x, r6.y
  mad r7.y, icb[r5.z + 0].x, -r5.x, r6.z
  mad r6.yz, r7.xxyx, r4.wwww, r4.xxyx
  sample_c_lz r5.w, r6.yzyy, t7.xxxx, s2, r4.z
  add r5.y, r5.w, r5.y
  iadd r5.z, r5.z, l(1)
endloop 
eq r5.yz, r5.yyyy, l(0.000000, 0.000000, 16.000000, 0.000000)
or r5.z, r5.z, r5.y
if_z r5.z
  mul r5.z, cb2[1].w, l(0.015000)
  mov r5.w, l(0)
  mov r6.y, l(0)
  loop 
    itof r6.z, r6.y
    ge r6.z, r6.z, l(64.000000)
    breakc_nz r6.z
    mul r6.zw, r6.xxxx, icb[r6.y + 0].zzzw
    mad r7.x, icb[r6.y + 0].w, r5.x, r6.z
    mad r7.y, icb[r6.y + 0].z, -r5.x, r6.w
    mad r6.zw, r7.xxxy, r4.wwww, r4.xxxy
    sample_c_lz r6.z, r6.zwzz, t7.xxxx, s2, r4.z
    div_sat r6.z, r6.z, r5.z
    add r5.w, r5.w, r6.z
    iadd r6.y, r6.y, l(1)
  endloop 
  mul r4.x, r5.w, l(0.015625)
else 
  movc r4.x, r5.y, l(0), l(1.000000)
endif 
add r0.w, r0.w, r4.x
min r0.w, r0.w, l(1.000000)
min r2.w, r0.w, r2.w
movc r0.w, r1.w, r2.w, r0.w
lt r1.w, l(0.000000), r3.z
and r1.w, r1.w, l(0x3f800000)
div r4.xy, r3.xyxx, r3.wwww
add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample r4.xyzw, r4.xyxx, t4.xyzw, s6
mul r1.w, r1.w, r4.w
dp3 r2.w, r3.xyzx, r3.xyzx
sample r3.xyzw, r2.wwww, t5.xyzw, s7
mul r1.w, r1.w, r3.x
mul r0.w, r0.w, r1.w
mov r3.x, v3.w
mov r3.y, v4.w
mov r3.z, v5.w
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r3.xyzx
mul r5.xyz, r0.wwww, cb0[2].xyzx
add r0.w, -cb0[72].w, l(1.000000)
mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
dp3 r1.w, r0.xyzx, -r2.xyzx
dp3_sat r2.x, r0.xyzx, r4.xyzx
dp3_sat r0.x, r0.xyzx, r3.xyzx
dp3_sat r0.y, r4.xyzx, r3.xyzx
mul r0.z, r0.y, r0.y
dp2 r0.z, r0.zzzz, r0.wwww
add r0.z, r0.z, l(-0.500000)
add r2.y, -r2.x, l(1.000000)
mul r2.z, r2.y, r2.y
mul r2.z, r2.z, r2.z
mul r2.y, r2.y, r2.z
mad r2.y, r0.z, r2.y, l(1.000000)
add r2.z, -|r1.w|, l(1.000000)
mul r2.w, r2.z, r2.z
mul r2.w, r2.w, r2.w
mul r2.z, r2.z, r2.w
mad r0.z, r0.z, r2.z, l(1.000000)
mul r0.z, r0.z, r2.y
mul r0.w, r0.w, r0.w
max r0.w, r0.w, l(0.002000)
add r2.y, -r0.w, l(1.000000)
mad r2.z, |r1.w|, r2.y, r0.w
mad r2.y, r2.x, r2.y, r0.w
mul r1.w, |r1.w|, r2.y
mad r1.w, r2.x, r2.z, r1.w
add r1.w, r1.w, l(0.000010)
div r1.w, l(0.500000), r1.w
mul r0.w, r0.w, r0.w
mad r2.y, r0.x, r0.w, -r0.x
mad r0.x, r2.y, r0.x, l(1.000000)
mul r0.w, r0.w, l(0.318309873)
mad r0.x, r0.x, r0.x, l(1.000000012E-007)
div r0.x, r0.w, r0.x
mul r0.x, r0.x, r1.w
mul r0.x, r0.x, l(3.14159274)
mul r0.xz, r2.xxxx, r0.xxzx
max r0.x, r0.x, l(0.000000)
dp3 r0.w, cb0[3].xyzx, cb0[3].xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.x, r0.w, r0.x
mul r2.xyz, r0.zzzz, r5.xyzx
mul r0.xzw, r5.xxyz, r0.xxxx
add r0.y, -r0.y, l(1.000000)
mul r1.w, r0.y, r0.y
mul r1.w, r1.w, r1.w
mul r0.y, r0.y, r1.w
add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r3.xyzx, r0.yyyy, cb0[3].xyzx
mul r0.xyz, r0.xzwx, r3.xyzx
mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used