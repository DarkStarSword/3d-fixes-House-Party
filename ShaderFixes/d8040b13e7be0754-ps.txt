// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d8040b13e7be0754-ps.txt
// 3DMigoto: d8040b13e7be0754 |    Unity headers extracted from Standard (Specular setup)
//    Shader "Standard (Specular setup)" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
// 1:   SubShader 1/2 {
// 2:   SubShader 2/2 {
// 2:     LOD 150
// 1:     LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
// 2:     Pass 1/4 {
// 1:     Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard (Specular setup):
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 164 5 6
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_EXP2" "_SPECGLOSSMAP" "_ALPHAPREMULTIPLY_ON" }
//   undeciphered2: 1 7 8 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1200
//   Vector 32 [_LightColor0]
//   Vector 1088 [_Color]
//   Float 1168 [_GlossMapScale]
//   Float 1172 [_OcclusionStrength]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 20
//   SetTexture 1 [_SpecGlossMap] 2D 30
//   SetTexture 2 [_ShadowMapTexture] 2D 50
//   SetTexture 3 [_OcclusionMap] 2D 40
//   SetTexture 4 [unity_SpecCube0] CUBE 00
//   SetTexture 5 [unity_SpecCube1] CUBE -10
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 10
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityReflectionProbes" 6
//   BindCB "UnityProbeVolume" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:53:01 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[74], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_constantbuffer cb7[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.w
dcl_input_ps linear v4.w
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d8040b13e7be0754-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s2
sample r1.xyzw, v1.xyxx, t1.xyzw, s3
mul r0.xyzw, r0.xyzw, cb0[68].xyzw
max r2.x, r1.y, r1.x
max r2.x, r1.z, r2.x
add r2.x, -r2.x, l(1.000000)
mul r0.xyz, r0.xyzx, r2.xxxx
dp3 r2.y, v5.xyzx, v5.xyzx
rsq r2.y, r2.y
mul r2.yzw, r2.yyyy, v5.xxyz
dp3 r3.x, v2.xyzx, v2.xyzx
rsq r3.x, r3.x
mul r3.yzw, r3.xxxx, v2.xxyz
mul r0.xyz, r0.wwww, r0.xyzx
add r4.x, -r2.x, l(1.000000)
mad o0.w, r0.w, r2.x, r4.x
mov r5.x, v3.w
mov r5.y, v4.w
mov r5.z, v5.w
add r4.yzw, -r5.xxyz, r15.xxyz
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r0.w, r4.yzwy, r6.xyzx
add r4.yzw, r5.xxyz, -cb3[25].xxyz
dp3 r2.x, r4.yzwy, r4.yzwy
sqrt r2.x, r2.x
add r2.x, -r0.w, r2.x
mad r0.w, cb3[25].w, r2.x, r0.w
mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
eq r2.x, cb7[0].x, l(1.000000)
if_nz r2.x
  eq r4.y, cb7[0].y, l(1.000000)
  mul r6.xyz, v4.wwww, cb7[2].xyzx
  mad r6.xyz, cb7[1].xyzx, v3.wwww, r6.xyzx
  mad r6.xyz, cb7[3].xyzx, v5.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb7[4].xyzx
  movc r4.yzw, r4.yyyy, r6.xxyz, r5.xxyz
  add r4.yzw, r4.yyzw, -cb7[6].xxyz
  mul r6.yzw, r4.yyzw, cb7[5].xxyz
  mad r4.y, r6.y, l(0.250000), l(0.750000)
  mad r4.z, cb7[0].z, l(0.500000), l(0.750000)
  max r6.x, r4.z, r4.y
  sample r6.xyzw, r6.xzwx, t6.xyzw, s1
else 
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r4.y, r6.xyzw, cb2[46].xyzw
div r4.zw, v7.xxxy, v7.wwww
sample r6.xyzw, r4.zwzz, t2.xyzw, s5
add_sat r0.w, r0.w, r6.x
min r4.y, r0.w, r4.y
movc r0.w, r2.x, r4.y, r0.w
sample r6.xyzw, v1.xyxx, t3.xyzw, s4
add r2.x, -cb0[73].y, l(1.000000)
mad r2.x, r6.y, cb0[73].y, r2.x
mad r4.y, -r1.w, cb0[73].x, l(1.000000)
dp3 r4.z, r3.yzwy, r2.yzwy
add r4.z, r4.z, r4.z
mad r6.xyz, r2.yzwy, -r4.zzzz, r3.yzwy
mul r7.xyz, r0.wwww, cb0[2].xyzx
lt r0.w, l(0.000000), cb6[2].w
if_nz r0.w
  dp3 r0.w, r6.xyzx, r6.xyzx
  rsq r0.w, r0.w
  mul r8.xyz, r0.wwww, r6.xyzx
  add r9.xyz, -r5.xyzx, cb6[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r5.xyzx, cb6[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r0.w, r9.y, r9.x
  min r0.w, r9.z, r0.w
  add r9.xyz, r5.xyzx, -cb6[2].xyzx
  mad r8.xyz, r8.xyzx, r0.wwww, r9.xyzx
else 
  mov r8.xyz, r6.xyzx
endif 
mad r0.w, -r4.y, l(0.700000), l(1.700000)
mul r0.w, r0.w, r4.y
mul r0.w, r0.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t4.xyzw, s0, r0.w
add r4.z, r8.w, l(-1.000000)
mad r4.z, cb6[3].w, r4.z, l(1.000000)
log r4.z, r4.z
mul r4.z, r4.z, cb6[3].y
exp r4.z, r4.z
mul r4.z, r4.z, cb6[3].x
mul r9.xyz, r8.xyzx, r4.zzzz
lt r4.w, cb6[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb6[6].w
  if_nz r4.w
    dp3 r4.w, r6.xyzx, r6.xyzx
    rsq r4.w, r4.w
    mul r10.xyz, r4.wwww, r6.xyzx
    add r11.xyz, -r5.xyzx, cb6[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r5.xyzx, cb6[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r4.w, r11.y, r11.x
    min r4.w, r11.z, r4.w
    add r5.xyz, r5.xyzx, -cb6[6].xyzx
    mad r6.xyz, r10.xyzx, r4.wwww, r5.xyzx
  endif 
  sample_l r5.xyzw, r6.xyzx, t5.xyzw, s0, r0.w
  add r0.w, r5.w, l(-1.000000)
  mad r0.w, cb6[7].w, r0.w, l(1.000000)
  log r0.w, r0.w
  mul r0.w, r0.w, cb6[7].y
  exp r0.w, r0.w
  mul r0.w, r0.w, cb6[7].x
  mul r5.xyz, r5.xyzx, r0.wwww
  mad r6.xyz, r4.zzzz, r8.xyzx, -r5.xyzx
  mad r9.xyz, cb6[1].wwww, r6.xyzx, r5.xyzx
endif 
mul r5.xyz, r2.xxxx, r9.xyzx
mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
dp3 r0.w, r6.xyzx, r6.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx
dp3 r0.w, r2.yzwy, -r3.yzwy
dp3_sat r2.x, r2.yzwy, cb2[0].xyzx
dp3_sat r2.y, r2.yzwy, r6.xyzx
dp3_sat r2.z, cb2[0].xyzx, r6.xyzx
mul r2.w, r2.z, r2.z
dp2 r2.w, r2.wwww, r4.yyyy
add r2.w, r2.w, l(-0.500000)
add r3.x, -r2.x, l(1.000000)
mul r3.y, r3.x, r3.x
mul r3.y, r3.y, r3.y
mul r3.x, r3.x, r3.y
mad r3.x, r2.w, r3.x, l(1.000000)
add r3.y, -|r0.w|, l(1.000000)
mul r3.z, r3.y, r3.y
mul r3.z, r3.z, r3.z
mul r3.y, r3.y, r3.z
mad r2.w, r2.w, r3.y, l(1.000000)
mul r2.w, r2.w, r3.x
mul r2.w, r2.x, r2.w
mul r3.x, r4.y, r4.y
max r3.x, r3.x, l(0.002000)
add r3.z, -r3.x, l(1.000000)
mad r3.w, |r0.w|, r3.z, r3.x
mad r3.z, r2.x, r3.z, r3.x
mul r0.w, |r0.w|, r3.z
mad r0.w, r2.x, r3.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r3.z, r3.x, r3.x
mad r3.w, r2.y, r3.z, -r2.y
mad r2.y, r3.w, r2.y, l(1.000000)
mul r3.z, r3.z, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r3.z, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r2.x, r3.x, r3.x, l(1.000000)
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
dp3 r2.y, r1.xyzx, r1.xyzx
ne r2.y, r2.y, l(0.000000)
and r2.y, r2.y, l(0x3f800000)
mul r0.w, r0.w, r2.y
mad_sat r1.w, r1.w, cb0[73].x, r4.x
mul r3.xzw, r2.wwww, r7.xxyz
mul r4.xyz, r7.xyzx, r0.wwww
add r0.w, -r2.z, l(1.000000)
mul r2.y, r0.w, r0.w
mul r2.y, r2.y, r2.y
mul r0.w, r0.w, r2.y
add r2.yzw, -r1.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
mad r2.yzw, r2.yyzw, r0.wwww, r1.xxyz
mul r2.yzw, r2.yyzw, r4.xxyz
mad r0.xyz, r0.xyzx, r3.xzwx, r2.yzwy
mul r2.xyz, r5.xyzx, r2.xxxx
add r3.xzw, -r1.xxyz, r1.wwww
mad r1.xyz, r3.yyyy, r3.xzwx, r1.xyzx
mad r0.xyz, r2.xyzx, r1.xyzx, r0.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb5[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
ret 
// Approximately 0 instruction slots used