// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed c4c518e1460c2fd6-ps.txt
// 3DMigoto: c4c518e1460c2fd6 |    Unity headers extracted from Standard (Specular setup)
//    Shader "Standard (Specular setup)" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
//      SubShader 1/2 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard (Specular setup):
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 203 10 8
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_EXP2" "_SPECGLOSSMAP" "_NORMALMAP" "_PARALLAXMAP" }
//   undeciphered2: 1 9 8 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1200
//   Vector 32 [_LightColor0]
//   Vector 1088 [_Color]
//   Float 1152 [_BumpScale]
//   Float 1168 [_GlossMapScale]
//   Float 1172 [_OcclusionStrength]
//   Float 1176 [_Parallax]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_ParallaxMap] 2D 60
//   SetTexture 1 [_MainTex] 2D 20
//   SetTexture 2 [_SpecGlossMap] 2D 40
//   SetTexture 3 [_BumpMap] 2D 30
//   SetTexture 4 [_ShadowMapTexture] 2D 70
//   SetTexture 5 [_OcclusionMap] 2D 50
//   SetTexture 6 [unity_SpecCube0] CUBE 00
//   SetTexture 7 [unity_SpecCube1] CUBE -10
//   SetTexture 8 [unity_ProbeVolumeSH] 3D 10
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityReflectionProbes" 6
//   BindCB "UnityProbeVolume" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:47:28 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[74], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_constantbuffer cb7[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed c4c518e1460c2fd6-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v3.w
mov r0.y, v4.w
mov r0.z, v5.w
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xy, r0.wwww, r0.xyxx
sample r1.xyzw, v1.xyxx, t0.xyzw, s6
mul r1.x, cb0[73].z, l(0.500000)
mad r1.x, r1.y, cb0[73].z, -r1.x
mad r0.z, r0.z, r0.w, l(0.420000)
div r0.xy, r0.xyxx, r0.zzzz
mad r0.xy, r1.xxxx, r0.xyxx, v1.xyxx
sample r1.xyzw, r0.xyxx, t2.xyzw, s4
sample r2.xyzw, r0.xyxx, t1.xyzw, s2
mul r2.xyz, r2.xyzx, cb0[68].xyzx
max r0.z, r1.y, r1.x
max r0.z, r1.z, r0.z
add r0.z, -r0.z, l(1.000000)
mul r2.xyz, r0.zzzz, r2.xyzx
sample r3.xyzw, r0.xyxx, t3.xyzw, s3
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[72].xxxx
dp2 r0.w, r3.xyxx, r3.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.w, r0.w
mul r3.yzw, r3.yyyy, v4.xxyz
mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, v2.xyzx
add r5.xyz, -v8.xyzx, r15.xyzx
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r2.w, r5.xyzx, r6.xyzx
add r5.xyz, v8.xyzx, -cb3[25].xyzx
dp3 r4.w, r5.xyzx, r5.xyzx
sqrt r4.w, r4.w
add r4.w, -r2.w, r4.w
mad r2.w, cb3[25].w, r4.w, r2.w
mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
eq r4.w, cb7[0].x, l(1.000000)
if_nz r4.w
  eq r5.x, cb7[0].y, l(1.000000)
  mul r5.yzw, v8.yyyy, cb7[2].xxyz
  mad r5.yzw, cb7[1].xxyz, v8.xxxx, r5.yyzw
  mad r5.yzw, cb7[3].xxyz, v8.zzzz, r5.yyzw
  add r5.yzw, r5.yyzw, cb7[4].xxyz
  movc r5.xyz, r5.xxxx, r5.yzwy, v8.xyzx
  add r5.xyz, r5.xyzx, -cb7[6].xyzx
  mul r5.yzw, r5.xxyz, cb7[5].xxyz
  mad r5.y, r5.y, l(0.250000), l(0.750000)
  mad r6.x, cb7[0].z, l(0.500000), l(0.750000)
  max r5.x, r5.y, r6.x
  sample r5.xyzw, r5.xzwx, t8.xyzw, s1
else 
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
div r5.yz, v7.xxyx, v7.wwww
sample r6.xyzw, r5.yzyy, t4.xyzw, s7
add_sat r2.w, r2.w, r6.x
min r5.x, r2.w, r5.x
movc r2.w, r4.w, r5.x, r2.w
sample r5.xyzw, r0.xyxx, t5.xyzw, s5
add r0.x, -cb0[73].y, l(1.000000)
mad r0.x, r5.y, cb0[73].y, r0.x
mad r0.y, -r1.w, cb0[73].x, l(1.000000)
dp3 r5.x, r4.xyzx, r3.xyzx
add r5.x, r5.x, r5.x
mad r5.xyz, r3.xyzx, -r5.xxxx, r4.xyzx
mul r6.xyz, r2.wwww, cb0[2].xyzx
if_nz r4.w
  eq r2.w, cb7[0].y, l(1.000000)
  mul r7.xyz, v8.yyyy, cb7[2].xyzx
  mad r7.xyz, cb7[1].xyzx, v8.xxxx, r7.xyzx
  mad r7.xyz, cb7[3].xyzx, v8.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb7[4].xyzx
  movc r7.xyz, r2.wwww, r7.xyzx, v8.xyzx
  add r7.xyz, r7.xyzx, -cb7[6].xyzx
  mul r7.yzw, r7.xxyz, cb7[5].xxyz
  mul r2.w, r7.y, l(0.250000)
  mul r4.w, cb7[0].z, l(0.500000)
  mad r5.w, -cb7[0].z, l(0.500000), l(0.250000)
  max r2.w, r2.w, r4.w
  min r7.x, r5.w, r2.w
  sample r8.xyzw, r7.xzwx, t8.xyzw, s1
  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r9.xyzw, r9.xyzx, t8.xyzw, s1
  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r7.xyzx, t8.xyzw, s1
  mov r3.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r3.xyzw
  dp4 r8.y, r9.xyzw, r3.xyzw
  dp4 r8.z, r7.xyzw, r3.xyzw
else 
  mov r3.w, l(1.000000)
  dp4 r8.x, cb2[39].xyzw, r3.xyzw
  dp4 r8.y, cb2[40].xyzw, r3.xyzw
  dp4 r8.z, cb2[41].xyzw, r3.xyzw
endif 
add r7.xyz, r8.xyzx, v6.xyzx
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb6[2].w
if_nz r2.w
  dp3 r2.w, r5.xyzx, r5.xyzx
  rsq r2.w, r2.w
  mul r8.xyz, r2.wwww, r5.xyzx
  add r9.xyz, -v8.xyzx, cb6[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -v8.xyzx, cb6[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r2.w, r9.y, r9.x
  min r2.w, r9.z, r2.w
  add r9.xyz, v8.xyzx, -cb6[2].xyzx
  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
else 
  mov r8.xyz, r5.xyzx
endif 
mad r2.w, -r0.y, l(0.700000), l(1.700000)
mul r2.w, r0.y, r2.w
mul r2.w, r2.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t6.xyzw, s0, r2.w
add r3.w, r8.w, l(-1.000000)
mad r3.w, cb6[3].w, r3.w, l(1.000000)
log r3.w, r3.w
mul r3.w, r3.w, cb6[3].y
exp r3.w, r3.w
mul r3.w, r3.w, cb6[3].x
mul r9.xyz, r8.xyzx, r3.wwww
lt r4.w, cb6[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb6[6].w
  if_nz r4.w
    dp3 r4.w, r5.xyzx, r5.xyzx
    rsq r4.w, r4.w
    mul r10.xyz, r4.wwww, r5.xyzx
    add r11.xyz, -v8.xyzx, cb6[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -v8.xyzx, cb6[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r4.w, r11.y, r11.x
    min r4.w, r11.z, r4.w
    add r11.xyz, v8.xyzx, -cb6[6].xyzx
    mad r5.xyz, r10.xyzx, r4.wwww, r11.xyzx
  endif 
  sample_l r5.xyzw, r5.xyzx, t7.xyzw, s0, r2.w
  add r2.w, r5.w, l(-1.000000)
  mad r2.w, cb6[7].w, r2.w, l(1.000000)
  log r2.w, r2.w
  mul r2.w, r2.w, cb6[7].y
  exp r2.w, r2.w
  mul r2.w, r2.w, cb6[7].x
  mul r5.xyz, r5.xyzx, r2.wwww
  mad r8.xyz, r3.wwww, r8.xyzx, -r5.xyzx
  mad r9.xyz, cb6[1].wwww, r8.xyzx, r5.xyzx
endif 
mul r5.xyz, r0.xxxx, r9.xyzx
mad r8.xyz, -v2.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r8.xyzx, r8.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r8.xyz, r0.wwww, r8.xyzx
dp3 r0.w, r3.xyzx, -r4.xyzx
dp3_sat r2.w, r3.xyzx, cb2[0].xyzx
dp3_sat r3.x, r3.xyzx, r8.xyzx
dp3_sat r3.y, cb2[0].xyzx, r8.xyzx
mul r3.z, r3.y, r3.y
dp2 r3.z, r3.zzzz, r0.yyyy
add r3.z, r3.z, l(-0.500000)
add r3.w, -r2.w, l(1.000000)
mul r4.x, r3.w, r3.w
mul r4.x, r4.x, r4.x
mul r3.w, r3.w, r4.x
mad r3.w, r3.z, r3.w, l(1.000000)
add r4.x, -|r0.w|, l(1.000000)
mul r4.y, r4.x, r4.x
mul r4.y, r4.y, r4.y
mul r4.x, r4.x, r4.y
mad r3.z, r3.z, r4.x, l(1.000000)
mul r3.z, r3.z, r3.w
mul r3.z, r2.w, r3.z
mul r0.y, r0.y, r0.y
max r0.y, r0.y, l(0.002000)
add r3.w, -r0.y, l(1.000000)
mad r4.y, |r0.w|, r3.w, r0.y
mad r3.w, r2.w, r3.w, r0.y
mul r0.w, |r0.w|, r3.w
mad r0.w, r2.w, r4.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r3.w, r0.y, r0.y
mad r4.y, r3.x, r3.w, -r3.x
mad r3.x, r4.y, r3.x, l(1.000000)
mul r3.w, r3.w, l(0.318309873)
mad r3.x, r3.x, r3.x, l(1.000000012E-007)
div r3.x, r3.w, r3.x
mul r0.w, r0.w, r3.x
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.w, r0.w
max r0.w, r0.w, l(0.000000)
mad r0.y, r0.y, r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
dp3 r2.w, r1.xyzx, r1.xyzx
ne r2.w, r2.w, l(0.000000)
and r2.w, r2.w, l(0x3f800000)
mul r0.w, r0.w, r2.w
mad r0.z, r1.w, cb0[73].x, -r0.z
add_sat r0.z, r0.z, l(1.000000)
mul r3.xzw, r3.zzzz, r6.xxyz
mad r3.xzw, r7.xxyz, r0.xxxx, r3.xxzw
mul r4.yzw, r6.xxyz, r0.wwww
add r0.x, -r3.y, l(1.000000)
mul r0.w, r0.x, r0.x
mul r0.w, r0.w, r0.w
mul r0.x, r0.x, r0.w
add r6.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r6.xyz, r6.xyzx, r0.xxxx, r1.xyzx
mul r4.yzw, r4.yyzw, r6.xxyz
mad r2.xyz, r2.xyzx, r3.xzwx, r4.yzwy
mul r0.xyw, r5.xyxz, r0.yyyy
add r3.xyz, -r1.xyzx, r0.zzzz
mad r1.xyz, r4.xxxx, r3.xyzx, r1.xyzx
mad r0.xyz, r0.xywx, r1.xyzx, r2.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb5[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used