// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dd854276e7f2362f-ps.txt
// 3DMigoto: dd854276e7f2362f |    Unity headers extracted from kawetofe_highlightShaderUnity5WithOutline
//    Shader "kawetofe/highlightShaderUnity5WithOutline" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 3/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from kawetofe_highlightShaderUnity5WithOutline:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 147 6 7
//   undeciphered1a: 11
//   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "SHADOWS_SHADOWMASK" }
//   undeciphered2: 1 7 6 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1312
//   Vector 32 [_LightColor0]
//   Float 1232 [_Glossiness]
//   Float 1236 [_Metallic]
//   Vector 1248 [_Color]
//   Matrix 1168 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 70
//   SetTexture 1 [unity_RandomRotation16] 2D 20
//   SetTexture 2 [_LightTexture0] 2D 50
//   SetTexture 3 [_LightTextureB0] 2D 60
//   SetTexture 4 [unity_ShadowMask] 2D 00
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 10
//   SetTexture 6 [_ShadowMapTexture] 2D 40
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//   SetSampler 3 84
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:54:18 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 3     zw        1     NONE   float     zw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_immediateConstantBuffer { { 0.123298101, -0.0392337516, 0.118705302, 0.795156479},
                              { -0.562537730, -0.360242814, 0.117367499, 0.608787775},
                              { 0.640371919, 0.0682112277, -0.0995851830, 0.724884212},
                              { 0.281338692, -0.588158786, 0.425981194, 0.615271807},
                              { -0.573121786, 0.270057201, 0.372357398, 0.889278710},
                              { 0.203316599, 0.419773906, -0.0228967592, 0.997290790},
                              { 0.846795797, -0.354558408, -0.0823479071, 0.504838586},
                              { -0.423045099, -0.797441, 0.182123497, 0.967378676},
                              { 0.719025314, 0.569357514, -0.213726401, 0.901174605},
                              { 0.0381546803, -0.991417110, 0.311506599, 0.420541495},
                              { -0.223626494, 0.502861381, 0.121632896, 0.383266},
                              { 0.172225401, 0.983663, 0.594893873, 0.759436071},
                              { -0.291246414, 0.898051202, 0.757646501, 0.533641696},
                              { -0.898414791, -0.0876278579, -0.521125, 0.759980321},
                              { -0.699508488, 0.673418522, -0.292312711, 0.654569924},
                              { -0.293196, -0.0628911927, 0.678247273, 0.223850},
                              { 0, 0, -0.307715207, 0.469762713},
                              { 0, 0, 0.448491305, 0.261945486},
                              { 0, 0, -0.530879915, 0.499821514},
                              { 0, 0, -0.737963378, 0.530493617},
                              { 0, 0, 0.0261313301, 0.176430196},
                              { 0, 0, -0.146107301, 0.304738402},
                              { 0, 0, -0.845102727, 0.324907303},
                              { 0, 0, -0.450770706, 0.210199699},
                              { 0, 0, -0.613728225, 0.328367412},
                              { 0, 0, -0.238586798, 0.0871624425},
                              { 0, 0, 0.338654786, 0.0152841099},
                              { 0, 0, -0.0423083305, -0.149465203},
                              { 0, 0, 0.167115, -0.109864801},
                              { 0, 0, -0.525606, 0.0157201905},
                              { 0, 0, -0.796685517, 0.131872699},
                              { 0, 0, 0.570428729, 0.477827311},
                              { 0, 0, -0.951663673, 0.00272503193},
                              { 0, 0, -0.706822276, -0.157232106},
                              { 0, 0, 0.217330605, -0.349408299},
                              { 0, 0, 0.0610042587, -0.449281603},
                              { 0, 0, 0.233398199, 0.224718899},
                              { 0, 0, 0.0727098733, -0.639673412},
                              { 0, 0, 0.467080802, -0.232466906},
                              { 0, 0, 0.372952789, -0.512625},
                              { 0, 0, 0.567507684, -0.405454397},
                              { 0, 0, -0.369198412, -0.128435},
                              { 0, 0, 0.875247300, 0.225698799},
                              { 0, 0, -0.268012702, -0.468439311},
                              { 0, 0, -0.117755100, -0.720575094},
                              { 0, 0, -0.127012104, -0.310542405},
                              { 0, 0, 0.559539378, -0.0630923733},
                              { 0, 0, -0.929913580, -0.187000796},
                              { 0, 0, 0.974674, 0.0367734805},
                              { 0, 0, 0.772673488, -0.0694472417},
                              { 0, 0, -0.499536097, -0.366374910},
                              { 0, 0, 0.647416770, -0.231578693},
                              { 0, 0, 0.191144899, -0.885892093},
                              { 0, 0, 0.367100090, -0.797053516},
                              { 0, 0, -0.697035313, -0.444943190},
                              { 0, 0, -0.417599, -0.718932629},
                              { 0, 0, -0.558474779, -0.602650404},
                              { 0, 0, -0.0262444802, -0.914142311},
                              { 0, 0, 0.565636, -0.658514917},
                              { 0, 0, -0.874976, -0.399787903},
                              { 0, 0, 0.917784274, -0.211052403},
                              { 0, 0, 0.815692723, -0.396955699},
                              { 0, 0, -0.283305407, -0.839544415},
                              { 0, 0, 0.799141, -0.588637173} }
dcl_constantbuffer cb0[79], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_comparison
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dd854276e7f2362f-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v3.xyzx, r12.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r2.xyzx
sample r4.xyzw, v1.xyxx, t0.xyzw, s7
mul r5.xyz, r4.xyzx, cb0[78].xyzx
mul r6.xyzw, v3.yyyy, cb0[74].xyzw
mad r6.xyzw, cb0[73].xyzw, v3.xxxx, r6.xyzw
mad r6.xyzw, cb0[75].xyzw, v3.zzzz, r6.xyzw
add r6.xyzw, r6.xyzw, cb0[76].xyzw
mov r7.x, cb4[9].z
mov r7.y, cb4[10].z
mov r7.z, cb4[11].z
dp3 r1.w, r2.xyzx, r7.xyzx
add r2.xyz, v3.xyzx, -cb3[25].xyzx
dp3 r2.x, r2.xyzx, r2.xyzx
sqrt r2.x, r2.x
add r2.x, -r1.w, r2.x
mad r1.w, cb3[25].w, r2.x, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r2.x, cb5[0].x, l(1.000000)
if_nz r2.x
  eq r2.x, cb5[0].y, l(1.000000)
  mul r2.yzw, v3.yyyy, cb5[2].xxyz
  mad r2.yzw, cb5[1].xxyz, v3.xxxx, r2.yyzw
  mad r2.yzw, cb5[3].xxyz, v3.zzzz, r2.yyzw
  add r2.yzw, r2.yyzw, cb5[4].xxyz
  movc r2.xyz, r2.xxxx, r2.yzwy, v3.xyzx
  add r2.xyz, r2.xyzx, -cb5[6].xyzx
  mul r2.yzw, r2.xxyz, cb5[5].xxyz
  mad r2.y, r2.y, l(0.250000), l(0.750000)
  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  max r2.x, r2.y, r3.w
  sample r2.xyzw, r2.xzwx, t5.xyzw, s1
else 
  sample r2.xyzw, v1.zwzz, t4.xyzw, s0
endif 
dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
lt r2.y, r1.w, l(0.990000)
if_nz r2.y
  mul r7.xyzw, v3.yyyy, cb3[9].xyzw
  mad r7.xyzw, cb3[8].xyzw, v3.xxxx, r7.xyzw
  mad r7.xyzw, cb3[10].xyzw, v3.zzzz, r7.xyzw
  add r7.xyzw, r7.xyzw, cb3[11].xyzw
  div r2.yzw, r7.xxyz, r7.wwww
  mul r7.xy, r2.yzyy, l(10.000000, 10.000000, 0.000000, 0.000000)
  sample r7.xyzw, r7.xyxx, t1.xyzw, s2
  dp3 r3.w, r7.xyzx, l(12.989800, 78.233002, 45.543201, 0.000000)
  sincos r3.w, null, r3.w
  mul r3.w, r3.w, l(43758.546875)
  frc r3.w, r3.w
  mul r3.w, r3.w, l(10.000000)
  sincos r7.x, r8.x, r3.w
  add r3.w, -cb3[24].x, l(1.000000)
  mul r3.w, r3.w, l(0.050000)
  mov r7.yz, l(0,0,0,0)
  mov r4.w, l(0)
  loop 
    ige r5.w, r4.w, l(16)
    breakc_nz r5.w
    mul r8.yz, r8.xxxx, icb[r4.w + 0].xxyx
    mad r9.x, icb[r4.w + 0].y, r7.x, r8.y
    mad r9.y, icb[r4.w + 0].x, -r7.x, r8.z
    mad r8.yz, r9.xxyx, r3.wwww, r2.yyzy
    sample_l r9.xyzw, r8.yzyy, t6.xyzw, s3, l(0.000000)
    lt r5.w, r2.w, r9.x
    add r10.x, r7.y, l(1.000000)
    add r10.y, r7.z, r9.x
    movc r7.yz, r5.wwww, r10.xxyx, r7.yyzy
    iadd r4.w, r4.w, l(1)
  endloop 
  div r4.w, r7.z, r7.y
  eq r7.yz, r7.yyyy, l(0.000000, 0.000000, 16.000000, 0.000000)
  and r5.w, r7.y, l(0x3f800000)
  or r7.y, r7.z, r7.y
  if_z r7.y
    add r7.y, r2.w, -r4.w
    div r4.w, r7.y, r4.w
    mul r3.w, r3.w, r4.w
    mul r4.w, cb2[1].w, l(0.015000)
    mov r7.yz, l(0,0,0,0)
    loop 
      itof r7.w, r7.z
      ge r7.w, r7.w, l(64.000000)
      breakc_nz r7.w
      mul r8.yz, r8.xxxx, icb[r7.z + 0].zzwz
      mad r9.x, icb[r7.z + 0].w, r7.x, r8.y
      mad r9.y, icb[r7.z + 0].z, -r7.x, r8.z
      mad r8.yz, r9.xxyx, r3.wwww, r2.yyzy
      sample_c_lz r7.w, r8.yzyy, t6.xxxx, s4, r2.w
      div_sat r7.w, r7.w, r4.w
      add r7.y, r7.w, r7.y
      iadd r7.z, r7.z, l(1)
    endloop 
    mul r5.w, r7.y, l(0.015625)
  endif 
else 
  mov r5.w, l(1.000000)
endif 
add r2.x, r2.x, -r5.w
mad r1.w, r1.w, r2.x, r5.w
lt r2.x, l(0.000000), r6.z
and r2.x, r2.x, l(0x3f800000)
div r2.yz, r6.xxyx, r6.wwww
add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
sample r7.xyzw, r2.yzyy, t2.xyzw, s5
mul r2.x, r2.x, r7.w
dp3 r2.y, r6.xyzx, r6.xyzx
sample r6.xyzw, r2.yyyy, t3.xyzw, s6
mul r2.x, r2.x, r6.x
mul r1.w, r1.w, r2.x
mul r2.xyz, r1.wwww, cb0[2].xyzx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, v2.xyzx
mad r4.xyz, r4.xyzx, cb0[78].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r4.xyz, cb0[77].yyyy, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -cb0[77].y, l(0.960000), l(0.960000)
mul r5.xyz, r1.wwww, r5.xyzx
add r1.w, -cb0[77].x, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r6.xyzx, r3.xyzx
dp3_sat r2.w, r6.xyzx, r1.xyzx
dp3_sat r3.x, r6.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.w, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.w, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.w, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r3.x, r0.z, -r3.x
mad r1.x, r1.x, r3.x, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.wwww, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r4.xyzx, r4.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r2.xyzx
mul r0.yzw, r2.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used