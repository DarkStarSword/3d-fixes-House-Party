// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4b499f0e41558f23-ps.txt
// 3DMigoto: 4b499f0e41558f23 | Matched 4 variants of 1 shaders: Alloy/Core
//
//       Unity headers extracted from Alloy_Core
//       Shader "Alloy/Core" {
//         CustomEditor "AlloyFieldBasedEditor"
//         Fallback "VertexLit"
//         SubShader 1/1 {
//           LOD 300
//           Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//           Pass 2/5 {
//             Name "FORWARD_DELTA"
//             Tags { "LIGHTMODE"="FORWARDADD" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Alloy_Core:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201708220 186 4 4
//      undeciphered1a: 10
// 4:   Keywords { "POINT" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_EXP2" "_NORMALMAP" }
// 8:   Keywords { "POINT" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "FOG_EXP2" }
// 1:   Keywords { "POINT" "SHADOWS_SHADOWMASK" "FOG_EXP2" "_NORMALMAP" }
// 2:   Keywords { "POINT" "SHADOWS_SHADOWMASK" "FOG_EXP2" }
//      undeciphered2: 1 4 5 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 1360
//      Vector 0 [_LightColor0]
//      Vector 160 [_Color]
//      Vector 176 [_MainTex_ST]
//      Vector 192 [_MainTexVelocity] 2
//      Float 204 [_MainTexUV]
//      Float 240 [_BaseColorVertexTint]
//      Float 244 [_Metal]
//      Float 248 [_Specularity]
//      Float 252 [_SpecularTint]
//      Float 256 [_Roughness]
//      Float 260 [_Occlusion]
//      Matrix 1296 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 736 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 20
//      SetTexture 1 [_SpecTex] 2D 30
//      SetTexture 2 [unity_ShadowMask] 2D 00
//      SetTexture 3 [unity_ProbeVolumeSH] 3D 10
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:18:47 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// SV_POSITION              0   xyzw        3      POS   float       
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   x   
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyz         8     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[84], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v0.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.x
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4b499f0e41558f23-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v8.xyzx, v8.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v8.xyzx
add r1.xyz, -v5.xyzx, r11.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
lt r0.w, cb0[12].w, l(0.500000)
movc r2.xy, r0.wwww, v7.xyxx, v7.zwzz
mad r2.zw, cb0[12].xxxy, cb1[0].yyyy, cb0[11].zzzw
div r2.zw, r2.zzzw, cb0[11].xxxy
add r2.xy, r2.zwzz, r2.xyxx
mul r2.xy, r2.xyxx, cb0[11].xyxx
dp3 r0.w, -r1.xyzx, r0.xyzx
add r0.w, r0.w, r0.w
mad r3.xyz, r0.xyzx, -r0.wwww, -r1.xyzx
dp3_sat r0.w, r0.xyzx, r1.xyzx
mad r1.w, r0.w, l(-5.554730), l(-6.983160)
mul r1.w, r0.w, r1.w
exp r1.w, r1.w
add r4.xyz, v4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, cb0[15].xxxx, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, cb0[10].xyzx
sample r5.xyzw, r2.xyxx, t0.xyzw, s2
mul_sat r4.xyz, r4.xyzx, r5.xyzx
sample r2.xyzw, r2.xyxx, t1.xyzw, s3
mad r3.w, r2.y, l(0.305306017), l(0.682171106)
mad r3.w, r2.y, r3.w, l(0.0125228781)
mad r2.y, r2.y, r3.w, l(-1.000000)
mad r2.y, cb0[16].y, r2.y, l(1.000000)
mul r5.xy, r2.xzxx, cb0[15].yzyy
mul r2.z, r2.w, cb0[16].x
mul r2.w, r5.y, l(0.080000)
dp3 r3.w, r4.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
max r3.w, r3.w, l(0.000001)
div r5.yzw, r4.xxyz, r3.wwww
add r5.yzw, r5.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r5.yzw, cb0[15].wwww, r5.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r6.xyz, r2.wwww, r5.yzwy
mad r2.x, -cb0[15].y, r2.x, l(1.000000)
mul r7.xyz, r2.xxxx, r4.xyzx
mad r4.xyz, -r2.wwww, r5.yzwy, r4.xyzx
mad r4.xyz, r5.xxxx, r4.xyzx, r6.xyzx
mad r2.x, r2.z, l(0.950000), l(0.050000)
mul r2.x, r2.x, r2.x
add r0.w, r0.w, r2.y
mad r0.w, r0.w, r0.w, r2.y
add_sat r0.w, r0.w, l(-1.000000)
eq r2.y, cb4[0].x, l(1.000000)
if_nz r2.y
  eq r2.y, cb4[0].y, l(1.000000)
  mul r5.xyz, v5.yyyy, cb4[2].xyzx
  mad r5.xyz, cb4[1].xyzx, v5.xxxx, r5.xyzx
  mad r5.xyz, cb4[3].xyzx, v5.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb4[4].xyzx
  movc r5.xyz, r2.yyyy, r5.xyzx, v5.xyzx
  add r5.xyz, r5.xyzx, -cb4[6].xyzx
  mul r5.yzw, r5.xxyz, cb4[5].xxyz
  mad r2.y, r5.y, l(0.250000), l(0.750000)
  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
  max r5.x, r2.w, r2.y
  sample r5.xyzw, r5.xzwx, t3.xyzw, s1
else 
  sample r5.xyzw, v0.xyxx, t2.xyzw, s0
endif 
dp4_sat r2.y, r5.xyzw, cb2[46].xyzw
ge r2.w, cb0[0].w, l(1.000000)
if_nz r2.w
  mov r5.x, cb0[81].y
  mov r5.y, cb0[82].y
  mov r5.z, cb0[83].y
  dp3 r2.w, r5.xyzx, r5.xyzx
  rsq r2.w, r2.w
  mul r5.xyz, r2.wwww, r5.xyzx
  frc r2.w, |cb0[0].w|
  mul r3.w, r2.w, v2.w
  add r2.w, -r2.w, |cb0[0].w|
  mul r2.w, r2.w, l(0.001000)
  mul r2.w, r2.w, v2.w
  mul r6.xyz, r2.wwww, r5.xyzx
  mad r8.xyz, r5.xyzx, r2.wwww, v2.xyzx
  mul r6.xyz, r6.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000)
  dp3 r4.w, r3.xyzx, r8.xyzx
  dp3 r5.w, r3.xyzx, r6.xyzx
  dp3 r6.w, r8.xyzx, r6.xyzx
  mad r4.w, r4.w, r5.w, -r6.w
  dp3 r6.w, r6.xyzx, r6.xyzx
  mad r5.w, -r5.w, r5.w, r6.w
  div_sat r4.w, r4.w, r5.w
  dp3 r5.w, v2.xyzx, r5.xyzx
  max r5.w, -r2.w, r5.w
  min r5.w, r2.w, r5.w
  mad r5.xyz, -r5.wwww, r5.xyzx, v2.xyzx
  mad r6.xyz, r6.xyzx, r4.wwww, r8.xyzx
  dp3 r4.w, v2.xyzx, v2.xyzx
  rsq r8.y, r4.w
  mul r2.w, r2.w, l(0.250000)
  dp3 r4.w, r6.xyzx, r3.xyzx
  mad r9.xyz, r4.wwww, r3.xyzx, -r6.xyzx
  dp3 r4.w, r9.xyzx, r9.xyzx
  rsq r4.w, r4.w
  mul_sat r4.w, r3.w, r4.w
  mad r6.xyz, r9.xyzx, r4.wwww, r6.xyzx
  dp3 r4.w, r6.xyzx, r6.xyzx
  rsq r4.w, r4.w
  mul r3.w, r3.w, r4.w
  mad_sat r3.w, r3.w, l(0.500000), r2.x
  div r3.w, r2.x, r3.w
  mul r9.xyz, r4.wwww, r6.xyzx
  mul r3.w, r3.w, r3.w
  mad r6.xyz, r6.xyzx, r4.wwww, r1.xyzx
  dp3 r4.w, r6.xyzx, r6.xyzx
  rsq r4.w, r4.w
  mul r6.xyz, r4.wwww, r6.xyzx
  dp3_sat r8.x, r9.xyzx, r6.xyzx
  dp3_sat r6.x, r0.xyzx, r6.xyzx
  dp3 r4.w, r5.xyzx, r5.xyzx
  rsq r5.w, r4.w
  mul r5.xyz, r5.wwww, r5.xyzx
  dp3_sat r6.y, r0.xyzx, r5.xyzx
  add r4.w, r4.w, l(1.000000)
  div r5.xyz, cb0[0].xyzx, r4.wwww
  mad r2.w, r2.w, r5.w, l(1.000000)
  div r5.xyz, r5.xyzx, r2.wwww
else 
  mul r2.w, v2.w, |cb0[0].w|
  dp3 r4.w, v2.xyzx, r3.xyzx
  mad r3.xyz, r4.wwww, r3.xyzx, -v2.xyzx
  dp3 r4.w, r3.xyzx, r3.xyzx
  rsq r4.w, r4.w
  mul_sat r4.w, r2.w, r4.w
  mad r3.xyz, r3.xyzx, r4.wwww, v2.xyzx
  dp3 r4.w, r3.xyzx, r3.xyzx
  rsq r4.w, r4.w
  mul r2.w, r2.w, r4.w
  mad_sat r2.w, r2.w, l(0.500000), r2.x
  div r2.w, r2.x, r2.w
  mul r9.xyz, r3.xyzx, r4.wwww
  mul r3.w, r2.w, r2.w
  mad r1.xyz, r3.xyzx, r4.wwww, r1.xyzx
  dp3 r2.w, r1.xyzx, r1.xyzx
  rsq r2.w, r2.w
  mul r1.xyz, r1.xyzx, r2.wwww
  dp3_sat r8.x, r9.xyzx, r1.xyzx
  dp3_sat r6.x, r0.xyzx, r1.xyzx
  dp3 r1.x, v2.xyzx, v2.xyzx
  rsq r8.y, r1.x
  mul r3.xyz, r8.yyyy, v2.xyzx
  dp3_sat r6.y, r0.xyzx, r3.xyzx
  add r0.x, r1.x, l(1.000000)
  div r5.xyz, cb0[0].xyzx, r0.xxxx
endif 
mul r0.x, r8.y, v2.w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mul r0.x, r0.x, r0.x
mad r0.x, -r0.x, r0.x, l(1.000000)
max r0.x, r0.x, l(0.000000)
mul r0.x, r0.x, r0.x
mul r0.xyz, r0.xxxx, r5.xyzx
lt r1.x, l(0.000000), cb0[0].w
and r1.x, r3.w, r1.x
mul r1.y, r8.x, r8.x
mad r1.z, r6.y, l(-5.554730), l(-6.983160)
mul r1.z, r6.y, r1.z
exp r1.z, r1.z
dp2 r2.z, r2.zzzz, r1.yyyy
add r2.z, r2.z, l(-0.500000)
mad r1.z, r1.z, r2.z, l(1.000000)
mad r1.w, r1.w, r2.z, l(1.000000)
mul r1.z, r1.w, r1.z
mad r1.w, r8.x, l(-5.554730), l(-6.983160)
mul r1.w, r8.x, r1.w
exp r1.w, r1.w
add r3.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r1.wwww, r3.xyzx, r4.xyzx
mul r1.w, r2.x, r2.x
mul r2.z, r1.w, l(0.250000)
mad r1.w, -r1.w, l(0.250000), l(1.000000)
mad r1.y, r1.y, r1.w, r2.z
mul r1.w, r6.x, r6.x
mad r2.x, r2.x, r2.x, l(-1.000000)
mad r1.w, r1.w, r2.x, l(1.000000)
mul r1.w, r1.w, r1.w
mul r1.y, r1.y, r1.w
div r1.y, r2.z, r1.y
mul r0.w, r0.w, r1.y
mul r0.w, r1.x, r0.w
mul r1.xyw, r0.wwww, r3.xyxz
mul r0.w, r2.y, r6.y
mad r1.xyz, r7.xyzx, r1.zzzz, r1.xywx
mul r1.xyz, r0.wwww, r1.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
div r0.w, v6.x, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb3[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
mul r0.xyz, r0.xyzx, r0.wwww
min o0.xyz, r0.xyzx, l(100.000000, 100.000000, 100.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used