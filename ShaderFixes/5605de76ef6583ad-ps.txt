// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5605de76ef6583ad-ps.txt
// 3DMigoto: 5605de76ef6583ad |    Unity headers extracted from Alloy_Glass_HighQuality
//    Shader "Alloy/Glass/HighQuality" {
//      CustomEditor "AlloyFieldBasedEditor"
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 500
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Opaque" }
//        Pass 3/6 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Alloy_Glass_HighQuality:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 195 6 5
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "SHADOWS_SHADOWMASK" "FOG_EXP2" }
//   undeciphered2: 1 8 7 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1296
//   Vector 0 [_LightColor0]
//   Vector 112 [unity_Lightmap_HDR]
//   Vector 160 [_Color]
//   Vector 176 [_MainTex_ST]
//   Vector 192 [_MainTexVelocity] 2
//   Float 204 [_MainTexUV]
//   Float 240 [_BaseColorVertexTint]
//   Float 244 [_Metal]
//   Float 248 [_Specularity]
//   Float 252 [_SpecularTint]
//   Float 256 [_Roughness]
//   Float 260 [_Occlusion]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   SetTexture 0 [_MainTex] 2D 20
//   SetTexture 1 [_SpecTex] 2D 30
//   SetTexture 2 [_ShadowMapTexture] 2D 40
//   SetTexture 3 [unity_Lightmap] 2D 00
//   SetTexture 4 [unity_LightmapInd] 2D -10
//   SetTexture 5 [unity_ShadowMask] 2D -10
//   SetTexture 6 [unity_SpecCube0] CUBE 10
//   SetTexture 7 [unity_SpecCube1] CUBE -10
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityReflectionProbes" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:21:12 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xy w
// SV_POSITION              0   xyzw        2      POS   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   x   
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.x
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5605de76ef6583ad-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v7.xyzx, v7.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v7.xyzx
add r1.xyz, -v4.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
lt r0.w, cb0[12].w, l(0.500000)
movc r3.xy, r0.wwww, v6.xyxx, v6.zwzz
mad r3.zw, cb0[12].xxxy, cb1[0].yyyy, cb0[11].zzzw
div r3.zw, r3.zzzw, cb0[11].xxxy
add r3.xy, r3.zwzz, r3.xyxx
mul r3.xy, r3.xyxx, cb0[11].xyxx
dp3 r0.w, -r2.xyzx, r0.xyzx
add r0.w, r0.w, r0.w
mad r4.xyz, r0.xyzx, -r0.wwww, -r2.xyzx
dp3_sat r0.w, r0.xyzx, r2.xyzx
mul r1.w, r0.w, l(-9.280000)
mad r2.w, r0.w, l(-5.554730), l(-6.983160)
mul r2.w, r0.w, r2.w
exp r2.w, r2.w
add r5.xyz, v3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r5.xyz, cb0[15].xxxx, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r5.xyz, r5.xyzx, cb0[10].xyzx
sample r6.xyzw, r3.xyxx, t0.xyzw, s2
mul_sat r5.xyz, r5.xyzx, r6.xyzx
mul r3.z, r6.w, cb0[10].w
sample r6.xyzw, r3.xyxx, t1.xyzw, s3
mad r3.x, r6.y, l(0.305306017), l(0.682171106)
mad r3.x, r6.y, r3.x, l(0.0125228781)
mad r3.x, r6.y, r3.x, l(-1.000000)
mad r3.x, cb0[16].y, r3.x, l(1.000000)
mul r3.yw, r6.xxxz, cb0[15].yyyz
mul r4.w, r6.w, cb0[16].x
mul r3.w, r3.w, l(0.080000)
dp3 r5.w, r5.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
max r5.w, r5.w, l(0.000001)
div r6.yzw, r5.xxyz, r5.wwww
add r6.yzw, r6.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r6.yzw, cb0[15].wwww, r6.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r7.xyz, r3.wwww, r6.yzwy
mad r5.w, -cb0[15].y, r6.x, l(1.000000)
mul r8.xyz, r5.wwww, r5.xyzx
mad r5.xyz, -r3.wwww, r6.yzwy, r5.xyzx
mad r5.xyz, r3.yyyy, r5.xyzx, r7.xyzx
mad r6.w, r5.w, r3.z, r3.y
mul r3.yzw, r6.wwww, r8.xxyz
mad r5.w, r4.w, l(0.950000), l(0.050000)
mul r5.w, r5.w, r5.w
add r0.w, r0.w, r3.x
mad r0.w, r0.w, r0.w, r3.x
add_sat r0.w, r0.w, l(-1.000000)
div r7.xy, v1.xyxx, v1.wwww
sample r7.xyzw, r7.xyxx, t2.xyzw, s4
sample r8.xyzw, v0.xyxx, t5.xyzw, s0
dp4_sat r7.y, r8.xyzw, cb2[46].xyzw
mov r8.x, cb4[9].z
mov r8.y, cb4[10].z
mov r8.z, cb4[11].z
dp3 r1.x, r1.xyzx, r8.xyzx
add r8.xyz, v4.xyzx, -cb3[25].xyzx
dp3 r1.y, r8.xyzx, r8.xyzx
sqrt r1.y, r1.y
add r1.y, -r1.x, r1.y
mad r1.x, cb3[25].w, r1.y, r1.x
mad_sat r1.x, r1.x, cb3[24].z, cb3[24].w
add r1.y, -r7.x, r7.y
mad r1.x, r1.x, r1.y, r7.x
sample r7.xyzw, v0.xyxx, t3.xyzw, s0
log r1.y, r7.w
mul r1.y, r1.y, cb0[7].y
exp r1.y, r1.y
mul r1.y, r1.y, cb0[7].x
mul r7.xyz, r7.xyzx, r1.yyyy
sample r8.xyzw, v0.xyxx, t4.xyzw, s0
add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r1.y, r0.xyzx, r8.xyzx
add r1.y, r1.y, l(0.500000)
mul r7.xyz, r1.yyyy, r7.xyzx
max r1.y, r8.w, l(0.000100)
div r7.xyz, r7.xyzx, r1.yyyy
lt r1.y, l(0.000000), cb6[2].w
if_nz r1.y
  dp3 r1.y, r4.xyzx, r4.xyzx
  rsq r1.y, r1.y
  mul r8.xyz, r1.yyyy, r4.xyzx
  add r9.xyz, -v4.xyzx, cb6[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -v4.xyzx, cb6[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r1.y, r9.y, r9.x
  min r1.y, r9.z, r1.y
  add r9.xyz, v4.xyzx, -cb6[2].xyzx
  mad r8.xyz, r8.xyzx, r1.yyyy, r9.xyzx
else 
  mov r8.xyz, r4.xyzx
endif 
mad r1.y, -r4.w, l(0.700000), l(1.700000)
mul r1.y, r1.y, r4.w
mul r1.y, r1.y, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t6.xyzw, s1, r1.y
add r1.z, r8.w, l(-1.000000)
mad r1.z, cb6[3].w, r1.z, l(1.000000)
log r1.z, r1.z
mul r1.z, r1.z, cb6[3].y
exp r1.z, r1.z
mul r1.z, r1.z, cb6[3].x
mul r9.xyz, r8.xyzx, r1.zzzz
lt r7.w, cb6[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb6[6].w
  if_nz r7.w
    dp3 r7.w, r4.xyzx, r4.xyzx
    rsq r7.w, r7.w
    mul r10.xyz, r4.xyzx, r7.wwww
    add r11.xyz, -v4.xyzx, cb6[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -v4.xyzx, cb6[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r7.w, r11.y, r11.x
    min r7.w, r11.z, r7.w
    add r11.xyz, v4.xyzx, -cb6[6].xyzx
    mad r10.xyz, r10.xyzx, r7.wwww, r11.xyzx
  else 
    mov r10.xyz, r4.xyzx
  endif 
  sample_l r10.xyzw, r10.xyzx, t7.xyzw, s1, r1.y
  add r1.y, r10.w, l(-1.000000)
  mad r1.y, cb6[7].w, r1.y, l(1.000000)
  log r1.y, r1.y
  mul r1.y, r1.y, cb6[7].y
  exp r1.y, r1.y
  mul r1.y, r1.y, cb6[7].x
  mul r10.xyz, r10.xyzx, r1.yyyy
  mad r8.xyz, r1.zzzz, r8.xyzx, -r10.xyzx
  mad r9.xyz, cb6[1].wwww, r8.xyzx, r10.xyzx
endif 
mad r8.xyzw, r4.wwww, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r1.y, r8.x, r8.x
exp r1.z, r1.w
min r1.y, r1.z, r1.y
mad r1.y, r1.y, r8.x, r8.y
mad r1.yz, r1.yyyy, l(0.000000, -1.040000, 1.040000, 0.000000), r8.zzwz
mad r1.yzw, r5.xxyz, r1.yyyy, r1.zzzz
mul r7.xyz, r3.xxxx, r7.xyzx
mul r8.xyz, r5.xyzx, r7.xyzx
mad r1.yzw, r9.xxyz, r1.yyzw, -r8.xxyz
mad r1.yzw, r0.wwww, r1.yyzw, r8.xxyz
mad r1.yzw, r7.xxyz, r3.yyzw, r1.yyzw
mul r3.x, |cb0[0].w|, l(0.100000)
dp3 r7.x, cb2[0].xyzx, r4.xyzx
mad r4.xyz, r7.xxxx, r4.xyzx, -cb2[0].xyzx
dp3 r7.x, r4.xyzx, r4.xyzx
rsq r7.x, r7.x
mul r3.x, r3.x, r7.x
min r3.x, r3.x, l(1.000000)
mad r4.xyz, r4.xyzx, r3.xxxx, cb2[0].xyzx
dp3 r3.x, r4.xyzx, r4.xyzx
rsq r3.x, r3.x
mul r7.x, r3.x, |cb0[0].w|
mad r7.x, r7.x, l(0.050000), r5.w
min r7.x, r7.x, l(1.000000)
div r7.x, r5.w, r7.x
mul r7.yzw, r3.xxxx, r4.xxyz
mul r7.x, r7.x, r7.x
mad r2.xyz, r4.xyzx, r3.xxxx, r2.xyzx
dp3 r3.x, r2.xyzx, r2.xyzx
rsq r3.x, r3.x
mul r2.xyz, r2.xyzx, r3.xxxx
dp3_sat r3.x, r7.yzwy, r2.xyzx
dp3_sat r2.x, r0.xyzx, r2.xyzx
dp3_sat r0.x, r0.xyzx, cb2[0].xyzx
lt r0.y, l(0.000000), cb0[0].w
and r0.y, r7.x, r0.y
mul r0.z, r3.x, r3.x
mad r2.y, r0.x, l(-5.554730), l(-6.983160)
mul r2.y, r0.x, r2.y
exp r2.y, r2.y
dp2 r2.z, r4.wwww, r0.zzzz
add r2.z, r2.z, l(-0.500000)
mad r2.y, r2.y, r2.z, l(1.000000)
mad r2.z, r2.w, r2.z, l(1.000000)
mul r2.y, r2.z, r2.y
mad r2.z, r3.x, l(-5.554730), l(-6.983160)
mul r2.z, r3.x, r2.z
exp r2.z, r2.z
add r4.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r2.zzzz, r4.xyzx, r5.xyzx
mul r2.z, r5.w, r5.w
mul r2.w, r2.z, l(0.250000)
mad r2.z, -r2.z, l(0.250000), l(1.000000)
mad r0.z, r0.z, r2.z, r2.w
mul r2.x, r2.x, r2.x
mad r2.z, r5.w, r5.w, l(-1.000000)
mad r2.x, r2.x, r2.z, l(1.000000)
mul r2.x, r2.x, r2.x
mul r0.z, r0.z, r2.x
div r0.z, r2.w, r0.z
mul r0.z, r0.w, r0.z
mul r0.y, r0.y, r0.z
mul r0.yzw, r0.yyyy, r4.xxyz
mul r0.x, r0.x, r1.x
mad r0.yzw, r3.yyzw, r2.yyyy, r0.yyzw
mul r0.xyz, r0.yzwy, r0.xxxx
mad r0.xyz, cb0[0].xyzx, r0.xyzx, r1.yzwy
div r0.w, v5.x, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb5[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad r6.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
min o0.xyzw, r6.xyzw, l(100.000000, 100.000000, 100.000000, 100.000000)
ret 
// Approximately 0 instruction slots used