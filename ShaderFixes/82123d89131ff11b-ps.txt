// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 82123d89131ff11b-ps.txt
// 3DMigoto: 82123d89131ff11b |    Unity headers extracted from Hidden_Internal-PrePassLighting
//    Shader "Hidden/Internal-PrePassLighting" {
//      SubShader 1/1 {
//        Pass 1/2 {
//          Tags { "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_Internal-PrePassLighting:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 121 4 5
//   undeciphered1a: 9
//   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
//   undeciphered2: 1 6 6 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1216
//   Vector 64 [_LightPos]
//   Vector 80 [_LightColor]
//   Vector 96 [unity_LightmapFade]
//   Vector 1200 [_CameraNormalsTexture_ST]
//   Matrix 112 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityLighting" 768
//   Vector 16 [_LightPositionRange]
//   Vector 32 [_LightProjectionParams]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 272 [unity_MatrixVP]
//   SetTexture 0 [_CameraDepthTexture] 2D 00
//   SetTexture 1 [_LightTextureB0] 2D 10
//   SetTexture 2 [unity_RandomRotation16] 2D 30
//   SetTexture 3 [_LightTexture0] CUBE 20
//   SetTexture 4 [_CameraNormalsTexture] 2D 60
//   SetTexture 5 [_ShadowMapTexture] CUBE 50
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityLighting" 3
//   BindCB "UnityShadows" 4
//   BindCB "UnityPerFrame" 5
//   SetSampler 4 84
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:30:59 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 3      w        2     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_immediateConstantBuffer { { 0.123298101, -0.0392337516, 0.118705302, 0.795156479},
                              { -0.562537730, -0.360242814, 0.117367499, 0.608787775},
                              { 0.640371919, 0.0682112277, -0.0995851830, 0.724884212},
                              { 0.281338692, -0.588158786, 0.425981194, 0.615271807},
                              { -0.573121786, 0.270057201, 0.372357398, 0.889278710},
                              { 0.203316599, 0.419773906, -0.0228967592, 0.997290790},
                              { 0.846795797, -0.354558408, -0.0823479071, 0.504838586},
                              { -0.423045099, -0.797441, 0.182123497, 0.967378676},
                              { 0.719025314, 0.569357514, -0.213726401, 0.901174605},
                              { 0.0381546803, -0.991417110, 0.311506599, 0.420541495},
                              { -0.223626494, 0.502861381, 0.121632896, 0.383266},
                              { 0.172225401, 0.983663, 0.594893873, 0.759436071},
                              { -0.291246414, 0.898051202, 0.757646501, 0.533641696},
                              { -0.898414791, -0.0876278579, -0.521125, 0.759980321},
                              { -0.699508488, 0.673418522, -0.292312711, 0.654569924},
                              { -0.293196, -0.0628911927, 0.678247273, 0.223850},
                              { 0, 0, -0.307715207, 0.469762713},
                              { 0, 0, 0.448491305, 0.261945486},
                              { 0, 0, -0.530879915, 0.499821514},
                              { 0, 0, -0.737963378, 0.530493617},
                              { 0, 0, 0.0261313301, 0.176430196},
                              { 0, 0, -0.146107301, 0.304738402},
                              { 0, 0, -0.845102727, 0.324907303},
                              { 0, 0, -0.450770706, 0.210199699},
                              { 0, 0, -0.613728225, 0.328367412},
                              { 0, 0, -0.238586798, 0.0871624425},
                              { 0, 0, 0.338654786, 0.0152841099},
                              { 0, 0, -0.0423083305, -0.149465203},
                              { 0, 0, 0.167115, -0.109864801},
                              { 0, 0, -0.525606, 0.0157201905},
                              { 0, 0, -0.796685517, 0.131872699},
                              { 0, 0, 0.570428729, 0.477827311},
                              { 0, 0, -0.951663673, 0.00272503193},
                              { 0, 0, -0.706822276, -0.157232106},
                              { 0, 0, 0.217330605, -0.349408299},
                              { 0, 0, 0.0610042587, -0.449281603},
                              { 0, 0, 0.233398199, 0.224718899},
                              { 0, 0, 0.0727098733, -0.639673412},
                              { 0, 0, 0.467080802, -0.232466906},
                              { 0, 0, 0.372952789, -0.512625},
                              { 0, 0, 0.567507684, -0.405454397},
                              { 0, 0, -0.369198412, -0.128435},
                              { 0, 0, 0.875247300, 0.225698799},
                              { 0, 0, -0.268012702, -0.468439311},
                              { 0, 0, -0.117755100, -0.720575094},
                              { 0, 0, -0.127012104, -0.310542405},
                              { 0, 0, 0.559539378, -0.0630923733},
                              { 0, 0, -0.929913580, -0.187000796},
                              { 0, 0, 0.974674, 0.0367734805},
                              { 0, 0, 0.772673488, -0.0694472417},
                              { 0, 0, -0.499536097, -0.366374910},
                              { 0, 0, 0.647416770, -0.231578693},
                              { 0, 0, 0.191144899, -0.885892093},
                              { 0, 0, 0.367100090, -0.797053516},
                              { 0, 0, -0.697035313, -0.444943190},
                              { 0, 0, -0.417599, -0.718932629},
                              { 0, 0, -0.558474779, -0.602650404},
                              { 0, 0, -0.0262444802, -0.914142311},
                              { 0, 0, 0.565636, -0.658514917},
                              { 0, 0, -0.874976, -0.399787903},
                              { 0, 0, 0.917784274, -0.211052403},
                              { 0, 0, 0.815692723, -0.396955699},
                              { 0, 0, -0.283305407, -0.839544415},
                              { 0, 0, 0.799141, -0.588637173} }
dcl_constantbuffer cb0[76], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[3], immediateIndexed
dcl_constantbuffer cb4[26], immediateIndexed
dcl_constantbuffer cb5[23], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_comparison
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 14

// New input from vertex shader with unity_CameraInvProjection[0].x:
dcl_input_ps linear v2.w
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 82123d89131ff11b-ps.txt

mul r9.w, -r9.x, r9.y
ne r11.x, l(0.0, 0.0, 0.0, 0.0), v2.w
if_nz r11.x
  mul r9.w, r9.w, v2.w
  mad r10.xyz, -r9.wwww, cb2[18].xyzw, cb1[4].xyzw
else
  mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw
endif

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r2.xyz, r0.wwww, r0.xyzx

// copy depth from r2.z to r12.x:
mov r12.x, r2.z


// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 82123d89131ff11b-ps.txt

add r13.x, r12.x, -r9.y
mul r13.x, r9.x, r13.x
ne r9.w, l(0.0, 0.0, 0.0, 0.0), v2.w
if_nz r9.w
  mad r2.x, -r13.x, v2.w, r2.x
endif

mul r3.xyz, r2.yyyy, cb2[19].xyzx
mad r2.xyw, cb2[18].xyxz, r2.xxxx, r3.xyxz
mad r2.xyw, cb2[20].xyxz, r2.zzzz, r2.xyxw
add r2.xyw, r2.xyxw, cb2[21].xyxz

if_z r9.w
  mad r2.xyw, -r13.xxxx, cb10[0].xyxz, r2.xyzw
endif

add r3.xyz, r2.xywx, -cb4[25].xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
sqrt r0.x, r0.x
mad r0.x, -r0.z, r0.w, r0.x
mad r0.x, cb4[25].w, r0.x, r2.z
add r0.yzw, r2.xxyw, -cb0[4].xxyz
dp3 r1.z, r0.yzwy, r0.yzwy
rsq r1.w, r1.z
mul r3.xyz, r0.yzwy, r1.wwww
mul r1.z, r1.z, cb0[4].w
sample r4.xyzw, r1.zzzz, t1.xyzw, s1
mad_sat r1.z, r0.x, cb4[24].z, cb4[24].w
lt r1.w, r1.z, l(0.990000)
if_nz r1.w
  max r1.w, |r0.z|, |r0.y|
  max r1.w, |r0.w|, r1.w
  max r2.z, cb3[2].z, l(0.100000)
  min r2.z, r2.z, l(2.000000)
  add r1.w, r1.w, -r2.z
  max r1.w, r1.w, l(0.000000)
  mul r1.w, r1.w, cb3[2].w
  div r1.w, cb3[2].y, r1.w
  add r1.w, r1.w, -cb3[2].x
  add r1.w, -r1.w, l(1.000000)
  add r4.yzw, r0.yyzw, cb3[1].xxyz
  mul r5.xyz, r4.zzzz, cb5[18].xywx
  mad r5.xyz, cb5[17].xywx, r4.yyyy, r5.xyzx
  mad r4.yzw, cb5[19].xxyw, r4.wwww, r5.xxyz
  add r4.yzw, r4.yyzw, cb5[20].xxyw
  mul r5.xz, r4.yywy, l(0.500000, 0.000000, 0.500000, 0.000000)
  mul r2.z, r4.z, cb1[5].x
  mul r5.w, r2.z, l(0.500000)
  add r4.yz, r5.zzzz, r5.xxwx
  div r4.yz, r4.yyzy, r4.wwww
  sample r5.xyzw, r4.yzyy, t2.xyzw, s3
  mul r4.yzw, r5.xxyz, l(0.000000, 45.543201, 12.989800, 78.233002)
  mad r4.yzw, r5.zzxy, l(0.000000, 12.989800, 78.233002, 45.543201), -r4.yyzw
  sincos r4.yzw, null, r4.yyzw
  mul r4.yzw, r4.yyzw, l(0.000000, 43758.546875, 43758.546875, 43758.546875)
  frc r4.yzw, r4.yyzw
  mad r4.yzw, r4.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000), l(0.000000, 0.000100, 0.000100, 0.000100)
  mul r5.xyz, r0.wyzw, r4.yzwy
  mad r4.yzw, r0.zzwy, r4.zzwy, -r5.xxyz
  dp3 r2.z, r4.yzwy, r4.yzwy
  rsq r2.z, r2.z
  mul r4.yzw, r2.zzzz, r4.yyzw
  mul r5.xyz, r0.wyzw, r4.zwyz
  mad r5.xyz, r0.zwyz, r4.wyzw, -r5.xyzx
  dp3 r2.z, r5.xyzx, r5.xyzx
  rsq r2.z, r2.z
  mul r5.xyz, r2.zzzz, r5.xyzx
  add r2.z, -cb4[24].x, l(1.000000)
  mul r2.z, r2.z, l(0.250000)
  mul r4.yzw, r2.zzzz, r4.yyzw
  mul r5.xyz, r2.zzzz, r5.xyzx
  mov r6.xy, l(0,0,0,0)
  mov r2.z, l(0)
  loop 
    ige r3.w, r2.z, l(16)
    breakc_nz r3.w
    mul r7.xyz, r5.xyzx, icb[r2.z + 0].yyyy
    mad r7.xyz, r4.yzwy, icb[r2.z + 0].xxxx, r7.xyzx
    add r7.xyz, r0.yzwy, r7.xyzx
    sample_l r7.xyzw, r7.xyzx, t5.xyzw, s4, l(0.000000)
    ge r3.w, r7.x, r1.w
    add r8.x, r6.x, l(1.000000)
    add r8.y, r6.y, r7.x
    movc r6.xy, r3.wwww, r8.xyxx, r6.xyxx
    iadd r2.z, r2.z, l(1)
  endloop 
  eq r6.zw, r6.xxxx, l(0.000000, 0.000000, 0.000000, 16.000000)
  and r2.z, r6.z, l(0x3f800000)
  or r3.w, r6.w, r6.z
  if_z r3.w
    div r3.w, r6.y, r6.x
    add r5.w, r1.w, -r3.w
    div r3.w, r5.w, r3.w
    mul r5.w, cb3[1].w, l(0.015000)
    mov r6.xy, l(0,0,0,0)
    loop 
      itof r6.z, r6.y
      ge r6.z, r6.z, l(64.000000)
      breakc_nz r6.z
      mul r7.xyz, r5.xyzx, icb[r6.y + 0].wwww
      mad r7.xyz, r4.yzwy, icb[r6.y + 0].zzzz, r7.xyzx
      mad r7.xyz, r7.xyzx, r3.wwww, r0.yzwy
      sample_c_lz r6.z, r7.xyzx, t5.xxxx, s5, r1.w
      div_sat r6.z, r6.z, r5.w
      add r6.x, r6.z, r6.x
      iadd r6.y, r6.y, l(1)
    endloop 
    mul r2.z, r6.x, l(0.015625)
  endif 
else 
  mov r2.z, l(1.000000)
endif 
add r0.y, r1.z, r2.z
min r0.y, r0.y, l(1.000000)
mul r0.y, r0.y, r4.x
mul r4.xyz, r2.yyyy, cb0[8].xyzx
mad r4.xyz, cb0[7].xyzx, r2.xxxx, r4.xyzx
mad r4.xyz, cb0[9].xyzx, r2.wwww, r4.xyzx
add r4.xyz, r4.xyzx, cb0[10].xyzx
sample_b r4.xyzw, r4.xyzx, t3.xyzw, s2, l(-8.000000)
mul r0.y, r0.y, r4.w
mad r0.zw, r1.xxxy, cb0[75].xxxy, cb0[75].zzzw
sample r1.xyzw, r0.zwzz, t4.xyzw, s6
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
dp3 r0.z, -r3.xyzx, r1.xyzx
add r2.xyz, r2.xywx, -r10.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mad r2.xyz, -r2.xyzx, r0.wwww, -r3.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r2.xyzx, r1.xyzx
max r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.x, r1.w, l(128.000000)
log r0.w, r0.w
mul r0.w, r0.w, r1.x
exp r0.w, r0.w
mov_sat r1.x, r0.y
mul r0.w, r0.w, r1.x
mul r0.y, r0.y, r0.z
mul r1.xyz, r0.yyyy, cb0[5].xyzx
dp3 r0.y, cb0[5].xyzx, l(0.0396819152, 0.458021790, 0.00609653955, 0.000000)
mul r1.w, r0.y, r0.w
mad r0.x, r0.x, cb0[6].z, cb0[6].w
add_sat r0.x, -r0.x, l(1.000000)
mul r0.xyzw, r0.xxxx, r1.xyzw
exp o0.xyzw, -r0.xyzw
ret 
// Approximately 0 instruction slots used