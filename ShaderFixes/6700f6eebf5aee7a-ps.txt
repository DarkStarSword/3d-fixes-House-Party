// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6700f6eebf5aee7a-ps.txt
// 3DMigoto: 6700f6eebf5aee7a |    Unity headers extracted from Alloy_Glass_HighQuality
//    Shader "Alloy/Glass/HighQuality" {
//      CustomEditor "AlloyFieldBasedEditor"
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 500
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Opaque" }
//        Pass 3/6 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Alloy_Glass_HighQuality:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 217 9 7
//   undeciphered1a: 15
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
//   undeciphered2: 1 9 7 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1296
//   Vector 0 [_LightColor0]
//   Vector 112 [unity_Lightmap_HDR]
//   Vector 160 [_Color]
//   Vector 176 [_MainTex_ST]
//   Vector 192 [_MainTexVelocity] 2
//   Float 204 [_MainTexUV]
//   Float 240 [_BaseColorVertexTint]
//   Float 244 [_Metal]
//   Float 248 [_Specularity]
//   Float 252 [_SpecularTint]
//   Float 256 [_Roughness]
//   Float 260 [_Occlusion]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 672 [unity_SHBr]
//   Vector 688 [unity_SHBg]
//   Vector 704 [unity_SHBb]
//   Vector 720 [unity_SHC]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 30
//   SetTexture 1 [_SpecTex] 2D 40
//   SetTexture 2 [_ShadowMapTexture] 2D 50
//   SetTexture 3 [unity_Lightmap] 2D 00
//   SetTexture 4 [unity_LightmapInd] 2D -10
//   SetTexture 5 [unity_ShadowMask] 2D -10
//   SetTexture 6 [unity_SpecCube0] CUBE 10
//   SetTexture 7 [unity_SpecCube1] CUBE -10
//   SetTexture 8 [unity_ProbeVolumeSH] 3D 20
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityReflectionProbes" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:25:03 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xy w
// SV_POSITION              0   xyzw        2      POS   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6700f6eebf5aee7a-ps.txt

mul r15.w, -r15.x, r15.y
mad r16.xyz, -r15.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v6.xyzx, v6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v6.xyzx
add r1.xyz, -v4.xyzx, r16.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r1.xyzx
lt r1.w, cb0[12].w, l(0.500000)
movc r3.xy, r1.wwww, v5.xyxx, v5.zwzz
mad r3.zw, cb0[12].xxxy, cb1[0].yyyy, cb0[11].zzzw
div r3.zw, r3.zzzw, cb0[11].xxxy
add r3.xy, r3.zwzz, r3.xyxx
mul r3.xy, r3.xyxx, cb0[11].xyxx
dp3 r1.w, -r2.xyzx, r0.xyzx
add r1.w, r1.w, r1.w
mad r4.xyz, r0.xyzx, -r1.wwww, -r2.xyzx
dp3_sat r1.w, r0.xyzx, r2.xyzx
mul r2.w, r1.w, l(-9.280000)
mad r3.z, r1.w, l(-5.554730), l(-6.983160)
mul r3.z, r1.w, r3.z
exp r3.z, r3.z
add r5.xyz, v3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r5.xyz, cb0[15].xxxx, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r5.xyz, r5.xyzx, cb0[10].xyzx
sample r6.xyzw, r3.xyxx, t0.xyzw, s3
mul_sat r5.xyz, r5.xyzx, r6.xyzx
mul r3.w, r6.w, cb0[10].w
sample r6.xyzw, r3.xyxx, t1.xyzw, s4
mad r3.x, r6.y, l(0.305306017), l(0.682171106)
mad r3.x, r6.y, r3.x, l(0.0125228781)
mad r3.x, r6.y, r3.x, l(-1.000000)
mad r3.x, cb0[16].y, r3.x, l(1.000000)
mul r6.yz, r6.xxzx, cb0[15].yyzy
mul r3.y, r6.w, cb0[16].x
mul r4.w, r6.z, l(0.080000)
dp3 r5.w, r5.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
max r5.w, r5.w, l(0.000001)
div r7.xyz, r5.xyzx, r5.wwww
add r7.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r7.xyz, cb0[15].wwww, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r8.xyz, r4.wwww, r7.xyzx
mad r5.w, -cb0[15].y, r6.x, l(1.000000)
mul r6.xzw, r5.wwww, r5.xxyz
mad r5.xyz, -r4.wwww, r7.xyzx, r5.xyzx
mad r5.xyz, r6.yyyy, r5.xyzx, r8.xyzx
mad r7.w, r5.w, r3.w, r6.y
mul r6.xyz, r6.xzwx, r7.wwww
mad r3.w, r3.y, l(0.950000), l(0.050000)
mul r3.w, r3.w, r3.w
add r1.w, r1.w, r3.x
mad r1.w, r1.w, r1.w, r3.x
add_sat r1.w, r1.w, l(-1.000000)
div r8.xy, v1.xyxx, v1.wwww
sample r8.xyzw, r8.xyxx, t2.xyzw, s5
sample r9.xyzw, v0.xyxx, t5.xyzw, s0
dp4_sat r4.w, r9.xyzw, cb2[46].xyzw
mov r9.x, cb4[9].z
mov r9.y, cb4[10].z
mov r9.z, cb4[11].z
dp3 r1.x, r1.xyzx, r9.xyzx
add r8.yzw, v4.xxyz, -cb3[25].xxyz
dp3 r1.y, r8.yzwy, r8.yzwy
sqrt r1.y, r1.y
add r1.y, -r1.x, r1.y
mad r1.x, cb3[25].w, r1.y, r1.x
mad_sat r1.x, r1.x, cb3[24].z, cb3[24].w
add r1.y, -r8.x, r4.w
mad r1.x, r1.x, r1.y, r8.x
eq r1.y, cb6[0].x, l(1.000000)
if_nz r1.y
  eq r1.y, cb6[0].y, l(1.000000)
  mul r8.xyz, v4.yyyy, cb6[2].xyzx
  mad r8.xyz, cb6[1].xyzx, v4.xxxx, r8.xyzx
  mad r8.xyz, cb6[3].xyzx, v4.zzzz, r8.xyzx
  add r8.xyz, r8.xyzx, cb6[4].xyzx
  movc r8.xyz, r1.yyyy, r8.xyzx, v4.xyzx
  add r8.xyz, r8.xyzx, -cb6[6].xyzx
  mul r8.yzw, r8.xxyz, cb6[5].xxyz
  mul r1.y, r8.y, l(0.250000)
  mul r1.z, cb6[0].z, l(0.500000)
  mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  max r1.y, r1.z, r1.y
  min r8.x, r4.w, r1.y
  sample r9.xyzw, r8.xzwx, t8.xyzw, s2
  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r10.xyzw, r10.xyzx, t8.xyzw, s2
  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r8.xyzw, r8.xyzx, t8.xyzw, s2
  mov r0.w, l(1.000000)
  dp4 r9.x, r9.xyzw, r0.xyzw
  dp4 r9.y, r10.xyzw, r0.xyzw
  dp4 r9.z, r8.xyzw, r0.xyzw
else 
  mov r0.w, l(1.000000)
  dp4 r9.x, cb2[39].xyzw, r0.xyzw
  dp4 r9.y, cb2[40].xyzw, r0.xyzw
  dp4 r9.z, cb2[41].xyzw, r0.xyzw
endif 
mul r8.xyzw, r0.yzzx, r0.xyzz
dp4 r10.x, cb2[42].xyzw, r8.xyzw
dp4 r10.y, cb2[43].xyzw, r8.xyzw
dp4 r10.z, cb2[44].xyzw, r8.xyzw
mul r0.w, r0.y, r0.y
mad r0.w, r0.x, r0.x, -r0.w
mad r8.xyz, cb2[45].xyzx, r0.wwww, r10.xyzx
add r8.xyz, r8.xyzx, r9.xyzx
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
sample r9.xyzw, v0.xyxx, t3.xyzw, s0
log r0.w, r9.w
mul r0.w, r0.w, cb0[7].y
exp r0.w, r0.w
mul r0.w, r0.w, cb0[7].x
mul r9.xyz, r9.xyzx, r0.wwww
sample r10.xyzw, v0.xyxx, t4.xyzw, s0
add r10.xyz, r10.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r0.w, r0.xyzx, r10.xyzx
add r0.w, r0.w, l(0.500000)
mul r9.xyz, r0.wwww, r9.xyzx
max r0.w, r10.w, l(0.000100)
div r9.xyz, r9.xyzx, r0.wwww
add r8.xyz, r8.xyzx, r9.xyzx
lt r0.w, l(0.000000), cb5[2].w
if_nz r0.w
  dp3 r0.w, r4.xyzx, r4.xyzx
  rsq r0.w, r0.w
  mul r9.xyz, r0.wwww, r4.xyzx
  add r10.xyz, -v4.xyzx, cb5[0].xyzx
  div r10.xyz, r10.xyzx, r9.xyzx
  add r11.xyz, -v4.xyzx, cb5[1].xyzx
  div r11.xyz, r11.xyzx, r9.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r0.w, r10.y, r10.x
  min r0.w, r10.z, r0.w
  add r10.xyz, v4.xyzx, -cb5[2].xyzx
  mad r9.xyz, r9.xyzx, r0.wwww, r10.xyzx
else 
  mov r9.xyz, r4.xyzx
endif 
mad r0.w, -r3.y, l(0.700000), l(1.700000)
mul r0.w, r0.w, r3.y
mul r0.w, r0.w, l(6.000000)
sample_l r9.xyzw, r9.xyzx, t6.xyzw, s1, r0.w
add r1.y, r9.w, l(-1.000000)
mad r1.y, cb5[3].w, r1.y, l(1.000000)
log r1.y, r1.y
mul r1.y, r1.y, cb5[3].y
exp r1.y, r1.y
mul r1.y, r1.y, cb5[3].x
mul r10.xyz, r9.xyzx, r1.yyyy
lt r1.z, cb5[1].w, l(0.999990)
if_nz r1.z
  lt r1.z, l(0.000000), cb5[6].w
  if_nz r1.z
    dp3 r1.z, r4.xyzx, r4.xyzx
    rsq r1.z, r1.z
    mul r11.xyz, r1.zzzz, r4.xyzx
    add r12.xyz, -v4.xyzx, cb5[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -v4.xyzx, cb5[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r1.z, r12.y, r12.x
    min r1.z, r12.z, r1.z
    add r12.xyz, v4.xyzx, -cb5[6].xyzx
    mad r11.xyz, r11.xyzx, r1.zzzz, r12.xyzx
  else 
    mov r11.xyz, r4.xyzx
  endif 
  sample_l r11.xyzw, r11.xyzx, t7.xyzw, s1, r0.w
  add r0.w, r11.w, l(-1.000000)
  mad r0.w, cb5[7].w, r0.w, l(1.000000)
  log r0.w, r0.w
  mul r0.w, r0.w, cb5[7].y
  exp r0.w, r0.w
  mul r0.w, r0.w, cb5[7].x
  mul r11.xyz, r11.xyzx, r0.wwww
  mad r9.xyz, r1.yyyy, r9.xyzx, -r11.xyzx
  mad r10.xyz, cb5[1].wwww, r9.xyzx, r11.xyzx
endif 
mad r9.xyzw, r3.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.w, r9.x, r9.x
exp r1.y, r2.w
min r0.w, r0.w, r1.y
mad r0.w, r0.w, r9.x, r9.y
mad r1.yz, r0.wwww, l(0.000000, -1.040000, 1.040000, 0.000000), r9.zzwz
mad r9.xyz, r5.xyzx, r1.yyyy, r1.zzzz
mul r8.xyz, r3.xxxx, r8.xyzx
mul r11.xyz, r5.xyzx, r8.xyzx
mad r9.xyz, r10.xyzx, r9.xyzx, -r11.xyzx
mad r9.xyz, r1.wwww, r9.xyzx, r11.xyzx
mad r8.xyz, r8.xyzx, r6.xyzx, r9.xyzx
mul r0.w, |cb0[0].w|, l(0.100000)
dp3 r1.y, cb2[0].xyzx, r4.xyzx
mad r4.xyz, r1.yyyy, r4.xyzx, -cb2[0].xyzx
dp3 r1.y, r4.xyzx, r4.xyzx
rsq r1.y, r1.y
mul r0.w, r0.w, r1.y
min r0.w, r0.w, l(1.000000)
mad r4.xyz, r4.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r1.y, r0.w, |cb0[0].w|
mad r1.y, r1.y, l(0.050000), r3.w
min r1.y, r1.y, l(1.000000)
div r1.y, r3.w, r1.y
mul r9.xyz, r0.wwww, r4.xyzx
mul r1.y, r1.y, r1.y
mad r2.xyz, r4.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3_sat r0.w, r9.xyzx, r2.xyzx
dp3_sat r1.z, r0.xyzx, r2.xyzx
dp3_sat r0.x, r0.xyzx, cb2[0].xyzx
lt r0.y, l(0.000000), cb0[0].w
and r0.y, r1.y, r0.y
mul r0.z, r0.w, r0.w
mad r1.y, r0.x, l(-5.554730), l(-6.983160)
mul r1.y, r0.x, r1.y
exp r1.y, r1.y
dp2 r2.x, r3.yyyy, r0.zzzz
add r2.x, r2.x, l(-0.500000)
mad r1.y, r1.y, r2.x, l(1.000000)
mad r2.x, r3.z, r2.x, l(1.000000)
mul r1.y, r1.y, r2.x
mad r2.x, r0.w, l(-5.554730), l(-6.983160)
mul r0.w, r0.w, r2.x
exp r0.w, r0.w
add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r0.wwww, r2.xyzx, r5.xyzx
mul r0.w, r3.w, r3.w
mul r2.w, r0.w, l(0.250000)
mad r0.w, -r0.w, l(0.250000), l(1.000000)
mad r0.z, r0.z, r0.w, r2.w
mul r0.w, r1.z, r1.z
mad r1.z, r3.w, r3.w, l(-1.000000)
mad r0.w, r0.w, r1.z, l(1.000000)
mul r0.w, r0.w, r0.w
mul r0.z, r0.z, r0.w
div r0.z, r2.w, r0.z
mul r0.z, r1.w, r0.z
mul r0.y, r0.y, r0.z
mul r0.yzw, r0.yyyy, r2.xxyz
mul r0.x, r0.x, r1.x
mad r0.yzw, r6.xxyz, r1.yyyy, r0.yyzw
mul r0.xyz, r0.yzwy, r0.xxxx
mad r7.xyz, cb0[0].xyzx, r0.xyzx, r8.xyzx
min o0.xyzw, r7.xyzw, l(100.000000, 100.000000, 100.000000, 100.000000)
ret 
// Approximately 0 instruction slots used