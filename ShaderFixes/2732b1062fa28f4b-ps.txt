// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2732b1062fa28f4b-ps.txt
// 3DMigoto: 2732b1062fa28f4b | Matched 2 variants of 1 shaders: Alloy/Glass/HighQuality
//
//       Unity headers extracted from Alloy_Glass_HighQuality
//       Shader "Alloy/Glass/HighQuality" {
//         CustomEditor "AlloyFieldBasedEditor"
//         Fallback "VertexLit"
//         SubShader 1/1 {
//           LOD 500
//           Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Opaque" }
//           Pass 3/6 {
//             Name "FORWARD"
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Alloy_Glass_HighQuality:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201708220 216 8 7
//      undeciphered1a: 14
// 2:   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_EXP2" }
// 1:   Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_EXP2" }
//      undeciphered2: 1 8 6 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 1296
//      Vector 0 [_LightColor0]
//      Vector 112 [unity_Lightmap_HDR]
//      Vector 160 [_Color]
//      Vector 176 [_MainTex_ST]
//      Vector 192 [_MainTexVelocity] 2
//      Float 204 [_MainTexUV]
//      Float 240 [_BaseColorVertexTint]
//      Float 244 [_Metal]
//      Float 248 [_Specularity]
//      Float 252 [_SpecularTint]
//      Float 256 [_Roughness]
//      Float 260 [_Occlusion]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 624 [unity_SHAr]
//      Vector 640 [unity_SHAg]
//      Vector 656 [unity_SHAb]
//      Vector 672 [unity_SHBr]
//      Vector 688 [unity_SHBg]
//      Vector 704 [unity_SHBb]
//      Vector 720 [unity_SHC]
//      Vector 736 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 30
//      SetTexture 1 [_SpecTex] 2D 40
//      SetTexture 2 [unity_Lightmap] 2D 00
//      SetTexture 3 [unity_LightmapInd] 2D -10
//      SetTexture 4 [unity_ShadowMask] 2D -10
//      SetTexture 5 [unity_SpecCube0] CUBE 10
//      SetTexture 6 [unity_SpecCube1] CUBE -10
//      SetTexture 7 [unity_ProbeVolumeSH] 3D 20
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityReflectionProbes" 4
//      BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:11:01 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy  
// TEXCOORD                 1   xy          1     NONE   float   xy  
// SV_POSITION              0   xyzw        2      POS   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   x   
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.x
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2732b1062fa28f4b-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v7.xyzx, v7.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v7.xyzx
add r1.xyz, -v4.xyzx, r15.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
lt r1.w, cb0[12].w, l(0.500000)
movc r2.xy, r1.wwww, v6.xyxx, v6.zwzz
mad r2.zw, cb0[12].xxxy, cb1[0].yyyy, cb0[11].zzzw
div r2.zw, r2.zzzw, cb0[11].xxxy
add r2.xy, r2.zwzz, r2.xyxx
mul r2.xy, r2.xyxx, cb0[11].xyxx
dp3 r1.w, -r1.xyzx, r0.xyzx
add r1.w, r1.w, r1.w
mad r3.xyz, r0.xyzx, -r1.wwww, -r1.xyzx
dp3_sat r1.w, r0.xyzx, r1.xyzx
mul r2.z, r1.w, l(-9.280000)
mad r2.w, r1.w, l(-5.554730), l(-6.983160)
mul r2.w, r1.w, r2.w
exp r2.w, r2.w
add r4.xyz, v3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, cb0[15].xxxx, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, cb0[10].xyzx
sample r5.xyzw, r2.xyxx, t0.xyzw, s3
mul_sat r4.xyz, r4.xyzx, r5.xyzx
mul r3.w, r5.w, cb0[10].w
sample r5.xyzw, r2.xyxx, t1.xyzw, s4
mad r2.x, r5.y, l(0.305306017), l(0.682171106)
mad r2.x, r5.y, r2.x, l(0.0125228781)
mad r2.x, r5.y, r2.x, l(-1.000000)
mad r2.x, cb0[16].y, r2.x, l(1.000000)
mul r5.yz, r5.xxzx, cb0[15].yyzy
mul r2.y, r5.w, cb0[16].x
mul r4.w, r5.z, l(0.080000)
dp3 r5.z, r4.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
max r5.z, r5.z, l(0.000001)
div r6.xyz, r4.xyzx, r5.zzzz
add r6.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r6.xyz, cb0[15].wwww, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r7.xyz, r4.wwww, r6.xyzx
mad r5.x, -cb0[15].y, r5.x, l(1.000000)
mul r8.xyz, r4.xyzx, r5.xxxx
mad r4.xyz, -r4.wwww, r6.xyzx, r4.xyzx
mad r4.xyz, r5.yyyy, r4.xyzx, r7.xyzx
mad r5.w, r5.x, r3.w, r5.y
mul r6.xyz, r5.wwww, r8.xyzx
mad r3.w, r2.y, l(0.950000), l(0.050000)
mul r3.w, r3.w, r3.w
add r1.w, r1.w, r2.x
mad r1.w, r1.w, r1.w, r2.x
add_sat r1.w, r1.w, l(-1.000000)
sample r7.xyzw, v1.xyxx, t4.xyzw, s0
dp4_sat r4.w, r7.xyzw, cb2[46].xyzw
eq r6.w, cb5[0].x, l(1.000000)
if_nz r6.w
  eq r6.w, cb5[0].y, l(1.000000)
  mul r7.xyz, v4.yyyy, cb5[2].xyzx
  mad r7.xyz, cb5[1].xyzx, v4.xxxx, r7.xyzx
  mad r7.xyz, cb5[3].xyzx, v4.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb5[4].xyzx
  movc r7.xyz, r6.wwww, r7.xyzx, v4.xyzx
  add r7.xyz, r7.xyzx, -cb5[6].xyzx
  mul r7.yzw, r7.xxyz, cb5[5].xxyz
  mul r6.w, r7.y, l(0.250000)
  mul r7.y, cb5[0].z, l(0.500000)
  mad r8.x, -cb5[0].z, l(0.500000), l(0.250000)
  max r6.w, r6.w, r7.y
  min r7.x, r8.x, r6.w
  sample r8.xyzw, r7.xzwx, t7.xyzw, s2
  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r9.xyzw, r9.xyzx, t7.xyzw, s2
  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r7.xyzx, t7.xyzw, s2
  mov r0.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r0.xyzw
  dp4 r8.y, r9.xyzw, r0.xyzw
  dp4 r8.z, r7.xyzw, r0.xyzw
else 
  mov r0.w, l(1.000000)
  dp4 r8.x, cb2[39].xyzw, r0.xyzw
  dp4 r8.y, cb2[40].xyzw, r0.xyzw
  dp4 r8.z, cb2[41].xyzw, r0.xyzw
endif 
mul r7.xyzw, r0.yzzx, r0.xyzz
dp4 r9.x, cb2[42].xyzw, r7.xyzw
dp4 r9.y, cb2[43].xyzw, r7.xyzw
dp4 r9.z, cb2[44].xyzw, r7.xyzw
mul r0.w, r0.y, r0.y
mad r0.w, r0.x, r0.x, -r0.w
mad r7.xyz, cb2[45].xyzx, r0.wwww, r9.xyzx
add r7.xyz, r7.xyzx, r8.xyzx
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
sample r8.xyzw, v0.xyxx, t2.xyzw, s0
log r0.w, r8.w
mul r0.w, r0.w, cb0[7].y
exp r0.w, r0.w
mul r0.w, r0.w, cb0[7].x
mul r8.xyz, r8.xyzx, r0.wwww
sample r9.xyzw, v0.xyxx, t3.xyzw, s0
add r9.xyz, r9.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r0.w, r0.xyzx, r9.xyzx
add r0.w, r0.w, l(0.500000)
mul r8.xyz, r0.wwww, r8.xyzx
max r0.w, r9.w, l(0.000100)
div r8.xyz, r8.xyzx, r0.wwww
add r7.xyz, r7.xyzx, r8.xyzx
lt r0.w, l(0.000000), cb4[2].w
if_nz r0.w
  dp3 r0.w, r3.xyzx, r3.xyzx
  rsq r0.w, r0.w
  mul r8.xyz, r0.wwww, r3.xyzx
  add r9.xyz, -v4.xyzx, cb4[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -v4.xyzx, cb4[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r0.w, r9.y, r9.x
  min r0.w, r9.z, r0.w
  add r9.xyz, v4.xyzx, -cb4[2].xyzx
  mad r8.xyz, r8.xyzx, r0.wwww, r9.xyzx
else 
  mov r8.xyz, r3.xyzx
endif 
mad r0.w, -r2.y, l(0.700000), l(1.700000)
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t5.xyzw, s1, r0.w
add r6.w, r8.w, l(-1.000000)
mad r6.w, cb4[3].w, r6.w, l(1.000000)
log r6.w, r6.w
mul r6.w, r6.w, cb4[3].y
exp r6.w, r6.w
mul r6.w, r6.w, cb4[3].x
mul r9.xyz, r8.xyzx, r6.wwww
lt r7.w, cb4[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb4[6].w
  if_nz r7.w
    dp3 r7.w, r3.xyzx, r3.xyzx
    rsq r7.w, r7.w
    mul r10.xyz, r3.xyzx, r7.wwww
    add r11.xyz, -v4.xyzx, cb4[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -v4.xyzx, cb4[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r7.w, r11.y, r11.x
    min r7.w, r11.z, r7.w
    add r11.xyz, v4.xyzx, -cb4[6].xyzx
    mad r10.xyz, r10.xyzx, r7.wwww, r11.xyzx
  else 
    mov r10.xyz, r3.xyzx
  endif 
  sample_l r10.xyzw, r10.xyzx, t6.xyzw, s1, r0.w
  add r0.w, r10.w, l(-1.000000)
  mad r0.w, cb4[7].w, r0.w, l(1.000000)
  log r0.w, r0.w
  mul r0.w, r0.w, cb4[7].y
  exp r0.w, r0.w
  mul r0.w, r0.w, cb4[7].x
  mul r10.xyz, r10.xyzx, r0.wwww
  mad r8.xyz, r6.wwww, r8.xyzx, -r10.xyzx
  mad r9.xyz, cb4[1].wwww, r8.xyzx, r10.xyzx
endif 
mad r8.xyzw, r2.yyyy, l(-1.000000, -0.027500, -0.572000, 0.022000), l(1.000000, 0.042500, 1.040000, -0.040000)
mul r0.w, r8.x, r8.x
exp r2.z, r2.z
min r0.w, r0.w, r2.z
mad r0.w, r0.w, r8.x, r8.y
mad r8.xy, r0.wwww, l(-1.040000, 1.040000, 0.000000, 0.000000), r8.zwzz
mad r8.xyz, r4.xyzx, r8.xxxx, r8.yyyy
mul r7.xyz, r2.xxxx, r7.xyzx
mul r10.xyz, r4.xyzx, r7.xyzx
mad r8.xyz, r9.xyzx, r8.xyzx, -r10.xyzx
mad r8.xyz, r1.wwww, r8.xyzx, r10.xyzx
mad r7.xyz, r7.xyzx, r6.xyzx, r8.xyzx
mul r0.w, |cb0[0].w|, l(0.100000)
dp3 r2.x, cb2[0].xyzx, r3.xyzx
mad r3.xyz, r2.xxxx, r3.xyzx, -cb2[0].xyzx
dp3 r2.x, r3.xyzx, r3.xyzx
rsq r2.x, r2.x
mul r0.w, r0.w, r2.x
min r0.w, r0.w, l(1.000000)
mad r3.xyz, r3.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r2.x, r0.w, |cb0[0].w|
mad r2.x, r2.x, l(0.050000), r3.w
min r2.x, r2.x, l(1.000000)
div r2.x, r3.w, r2.x
mul r8.xyz, r0.wwww, r3.xyzx
mul r2.x, r2.x, r2.x
mad r1.xyz, r3.xyzx, r0.wwww, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3_sat r0.w, r8.xyzx, r1.xyzx
dp3_sat r1.x, r0.xyzx, r1.xyzx
dp3_sat r0.x, r0.xyzx, cb2[0].xyzx
lt r0.y, l(0.000000), cb0[0].w
and r0.y, r2.x, r0.y
mul r0.z, r0.w, r0.w
mad r1.y, r0.x, l(-5.554730), l(-6.983160)
mul r1.y, r0.x, r1.y
exp r1.y, r1.y
dp2 r1.z, r2.yyyy, r0.zzzz
add r1.z, r1.z, l(-0.500000)
mad r1.y, r1.y, r1.z, l(1.000000)
mad r1.z, r2.w, r1.z, l(1.000000)
mul r1.y, r1.z, r1.y
mad r1.z, r0.w, l(-5.554730), l(-6.983160)
mul r0.w, r0.w, r1.z
exp r0.w, r0.w
add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r0.wwww, r2.xyzx, r4.xyzx
mul r0.w, r3.w, r3.w
mul r1.z, r0.w, l(0.250000)
mad r0.w, -r0.w, l(0.250000), l(1.000000)
mad r0.z, r0.z, r0.w, r1.z
mul r0.w, r1.x, r1.x
mad r1.x, r3.w, r3.w, l(-1.000000)
mad r0.w, r0.w, r1.x, l(1.000000)
mul r0.w, r0.w, r0.w
mul r0.z, r0.z, r0.w
div r0.z, r1.z, r0.z
mul r0.z, r1.w, r0.z
mul r0.y, r0.y, r0.z
mul r0.yzw, r0.yyyy, r2.xxyz
mul r0.x, r0.x, r4.w
mad r0.yzw, r6.xxyz, r1.yyyy, r0.yyzw
mul r0.xyz, r0.yzwy, r0.xxxx
mad r0.xyz, cb0[0].xyzx, r0.xyzx, r7.xyzx
div r0.w, v5.x, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb3[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad r5.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
min o0.xyzw, r5.xyzw, l(100.000000, 100.000000, 100.000000, 100.000000)
ret 
// Approximately 0 instruction slots used