// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 87c0f1bdf488a485-ps.txt
// 3DMigoto: 87c0f1bdf488a485 |    Unity headers extracted from Alloy_Human_Hair_HighQuality TwoSided
//    Shader "Alloy/Human/Hair/HighQuality TwoSided" {
//      CustomEditor "AlloyFieldBasedEditor"
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest+1" "RenderType"="TransparentCutout" }
// 1:     Pass 3/8 {
// 2:     Pass 5/8 {
// 1:       Name "TRANSLUCENT_BACK_FORWARD"
// 2:       Name "TRANSLUCENT_FRONT_FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="AlphaTest+1" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Alloy_Human_Hair_HighQuality TwoSided:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 182 4 6
//   undeciphered1a: 16
//   Keywords { "DIRECTIONAL" "FOG_EXP2" }
//   undeciphered2: 1 6 6 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1360
//   Vector 0 [_LightColor0]
//   Float 112 [_HairDiffuseWrapAmount]
//   Float 116 [_HairSpecularity]
//   Float 120 [_AnisoAngle]
//   Vector 128 [_HighlightTint0] 3
//   Float 140 [_HighlightShift0]
//   Float 144 [_HighlightWidth0]
//   Vector 148 [_HighlightTint1] 3
//   Float 160 [_HighlightShift1]
//   Float 164 [_HighlightWidth1]
//   Vector 224 [_Color]
//   Vector 240 [_MainTex_ST]
//   Vector 256 [_MainTexVelocity] 2
//   Float 268 [_MainTexUV]
//   Float 304 [_BaseColorVertexTint]
//   Float 324 [_Occlusion]
//   Float 328 [_BumpScale]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 20
//   SetTexture 1 [_SpecTex] 2D 30
//   SetTexture 2 [_BumpMap] 2D 40
//   SetTexture 3 [unity_SpecCube0] CUBE 00
//   SetTexture 4 [unity_SpecCube1] CUBE -10
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 10
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:32:25 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float       
// SV_POSITION              0   xyzw        1      POS   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xyz 
// TEXCOORD                 3   xyzw        3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   x   
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyz         7     NONE   float   xyz 
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
// SV_IsFrontFace           0   x           9    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[21], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.x
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_input_ps_sgv v9.x, is_front_face
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 87c0f1bdf488a485-ps.txt

mul r16.w, -r16.x, r16.y
mad r17.xyz, -r16.wwww, cb10[0].xyzw, cb1[4].xyzw

movc r0.x, v9.x, l(1.000000), l(-1.000000)
mul r0.xyz, r0.xxxx, v8.xyzx
add r1.xyz, -v3.xyzx, r17.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
lt r1.w, cb0[16].w, l(0.500000)
movc r3.xy, r1.wwww, v5.xyxx, v5.zwzz
mad r3.zw, cb0[16].xxxy, cb1[0].yyyy, cb0[15].zzzw
div r3.zw, r3.zzzw, cb0[15].xxxy
add r3.xy, r3.zwzz, r3.xyxx
mul r3.xy, r3.xyxx, cb0[15].xyxx
add r4.xyz, v2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, cb0[19].xxxx, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, cb0[14].xyzx
sample r5.xyzw, r3.xyxx, t0.xyzw, s2
mul_sat r4.xyz, r4.xyzx, r5.xyzx
mul r5.w, r5.w, cb0[14].w
sample r6.xyzw, r3.xyxx, t1.xyzw, s3
mad r1.w, r6.y, l(0.305306017), l(0.682171106)
mad r1.w, r6.y, r1.w, l(0.0125228781)
add r2.w, r6.x, l(-0.500000)
mul r7.xyz, r6.zzzz, cb0[8].xyzx
add r3.z, r2.w, cb0[8].w
add r2.w, r2.w, cb0[10].x
mad r1.w, r6.y, r1.w, l(-1.000000)
mad r1.w, cb0[20].y, r1.w, l(1.000000)
mul r6.xy, cb0[7].zyzz, l(0.0174532924, 0.080000, 0.000000, 0.000000)
sincos r6.x, r8.x, r6.x
sample r9.xyzw, r3.xyxx, t2.xyzw, s4
mul r9.x, r9.w, r9.x
mad r3.xy, r9.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[20].zzzz
dp2 r3.w, r3.xyxx, r3.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.w, r3.w
mul r8.yzw, r3.yyyy, v7.xxyz
mad r8.yzw, r3.xxxx, v6.xxyz, r8.yyzw
mad r0.xyz, r3.wwww, r0.xyzx, r8.yzwy
dp3 r3.x, r0.xyzx, r0.xyzx
rsq r3.x, r3.x
mul r0.xyz, r0.xyzx, r3.xxxx
dp3 r3.x, -r2.xyzx, r0.xyzx
add r3.x, r3.x, r3.x
mad r3.xyw, r0.xyxz, -r3.xxxx, -r2.xyxz
dp3_sat r2.x, r0.xyzx, r2.xyzx
add r2.x, r1.w, r2.x
mad r1.w, r2.x, r2.x, r1.w
add_sat r1.w, r1.w, l(-1.000000)
mul r2.xyz, r6.xxxx, v7.xyzx
mad r2.xyz, r8.xxxx, v6.xyzx, r2.xyzx
dp3 r4.w, r2.xyzx, r2.xyzx
rsq r4.w, r4.w
mul r2.xyz, r2.xyzx, r4.wwww
mul r8.xyz, r7.xyzx, r6.yyyy
add r4.w, -r6.w, l(1.000000)
mad r6.x, cb0[9].x, r4.w, r6.w
mul r9.xyz, r6.yyyy, cb0[9].yzwy
mad r4.w, cb0[10].y, r4.w, r6.w
mad r6.yzw, r6.yyyy, r7.xxyz, r9.xxyz
mul r6.yzw, r6.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
add r7.x, r4.w, r6.x
eq r7.y, cb5[0].x, l(1.000000)
if_nz r7.y
  eq r7.y, cb5[0].y, l(1.000000)
  mul r10.xyz, v3.yyyy, cb5[2].xyzx
  mad r10.xyz, cb5[1].xyzx, v3.xxxx, r10.xyzx
  mad r10.xyz, cb5[3].xyzx, v3.zzzz, r10.xyzx
  add r10.xyz, r10.xyzx, cb5[4].xyzx
  movc r7.yzw, r7.yyyy, r10.xxyz, v3.xxyz
  add r7.yzw, r7.yyzw, -cb5[6].xxyz
  mul r10.yzw, r7.yyzw, cb5[5].xxyz
  mad r7.y, r10.y, l(0.250000), l(0.750000)
  mad r7.z, cb5[0].z, l(0.500000), l(0.750000)
  max r10.x, r7.z, r7.y
  sample r10.xyzw, r10.xzwx, t5.xyzw, s1
else 
  mov r10.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r7.y, r10.xyzw, cb2[46].xyzw
lt r7.z, l(0.000000), cb4[2].w
if_nz r7.z
  dp3 r7.z, r3.xywx, r3.xywx
  rsq r7.z, r7.z
  mul r10.xyz, r3.xywx, r7.zzzz
  add r11.xyz, -v3.xyzx, cb4[0].xyzx
  div r11.xyz, r11.xyzx, r10.xyzx
  add r12.xyz, -v3.xyzx, cb4[1].xyzx
  div r12.xyz, r12.xyzx, r10.xyzx
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  min r7.z, r11.y, r11.x
  min r7.z, r11.z, r7.z
  add r11.xyz, v3.xyzx, -cb4[2].xyzx
  mad r10.xyz, r10.xyzx, r7.zzzz, r11.xyzx
else 
  mov r10.xyz, r3.xywx
endif 
mul r7.z, r7.x, l(0.500000)
mad r7.x, -r7.x, l(0.350000), l(1.700000)
mul r7.x, r7.x, r7.z
mul r7.x, r7.x, l(6.000000)
sample_l r10.xyzw, r10.xyzx, t3.xyzw, s0, r7.x
add r7.z, r10.w, l(-1.000000)
mad r7.z, cb4[3].w, r7.z, l(1.000000)
log r7.z, r7.z
mul r7.z, r7.z, cb4[3].y
exp r7.z, r7.z
mul r7.z, r7.z, cb4[3].x
mul r11.xyz, r10.xyzx, r7.zzzz
lt r7.w, cb4[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb4[6].w
  if_nz r7.w
    dp3 r7.w, r3.xywx, r3.xywx
    rsq r7.w, r7.w
    mul r12.xyz, r3.xywx, r7.wwww
    add r13.xyz, -v3.xyzx, cb4[4].xyzx
    div r13.xyz, r13.xyzx, r12.xyzx
    add r14.xyz, -v3.xyzx, cb4[5].xyzx
    div r14.xyz, r14.xyzx, r12.xyzx
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
    movc r13.xyz, r15.xyzx, r13.xyzx, r14.xyzx
    min r7.w, r13.y, r13.x
    min r7.w, r13.z, r7.w
    add r13.xyz, v3.xyzx, -cb4[6].xyzx
    mad r3.xyw, r12.xyxz, r7.wwww, r13.xyxz
  endif 
  sample_l r12.xyzw, r3.xywx, t4.xyzw, s0, r7.x
  add r3.x, r12.w, l(-1.000000)
  mad r3.x, cb4[7].w, r3.x, l(1.000000)
  log r3.x, r3.x
  mul r3.x, r3.x, cb4[7].y
  exp r3.x, r3.x
  mul r3.x, r3.x, cb4[7].x
  mul r3.xyw, r12.xyxz, r3.xxxx
  mad r7.xzw, r7.zzzz, r10.xxyz, -r3.xxyw
  mad r11.xyz, cb4[1].wwww, r7.xzwx, r3.xywx
endif 
mul r3.xyw, r1.wwww, r11.xyxz
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, cb2[0].xyzx
mov_sat r7.x, r0.w
lt r7.z, l(0.000000), cb0[0].w
and r7.z, r7.z, l(0x3f800000)
add r7.w, cb0[7].x, l(1.000000)
add r0.w, r0.w, cb0[7].x
mul r7.w, r7.w, r7.w
div_sat r0.w, r0.w, r7.w
mad r6.x, r6.x, l(0.950000), l(0.050000)
mul r6.x, r6.x, r6.x
mul r6.x, r6.x, r6.x
div r6.x, l(2.000000), r6.x
add r6.x, r6.x, l(-2.000000)
mad r10.xyz, r0.xyzx, r3.zzzz, r2.xyzx
dp3 r3.z, r10.xyzx, r10.xyzx
rsq r3.z, r3.z
mul r10.xyz, r3.zzzz, r10.xyzx
dp3 r3.z, r10.xyzx, r1.xyzx
mad r7.w, r6.x, l(0.125000), l(0.250000)
mad r3.z, -r3.z, r3.z, l(1.000000)
sqrt r3.z, r3.z
log r3.z, r3.z
mul r3.z, r3.z, r6.x
exp r3.z, r3.z
mul r3.z, r3.z, r7.w
mul r8.xyz, r3.zzzz, r8.xyzx
mad r3.z, r4.w, l(0.950000), l(0.050000)
mul r3.z, r3.z, r3.z
mul r3.z, r3.z, r3.z
div r3.z, l(2.000000), r3.z
add r3.z, r3.z, l(-2.000000)
mad r0.xyz, r0.xyzx, r2.wwww, r2.xyzx
dp3 r2.x, r0.xyzx, r0.xyzx
rsq r2.x, r2.x
mul r0.xyz, r0.xyzx, r2.xxxx
dp3 r0.x, r0.xyzx, r1.xyzx
mad r0.y, r3.z, l(0.125000), l(0.250000)
mad r0.x, -r0.x, r0.x, l(1.000000)
sqrt r0.x, r0.x
log r0.x, r0.x
mul r0.x, r0.x, r3.z
exp r0.x, r0.x
mul r0.x, r0.x, r0.y
mul r0.xyz, r0.xxxx, r9.xyzx
mul r1.x, r1.w, r7.z
mul r1.x, r7.x, r1.x
max r0.xyz, r0.xyzx, r8.xyzx
mul r0.xyz, r0.xyzx, r1.xxxx
mul r1.xyz, r7.yyyy, cb0[0].xyzx
mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r6.yzwy, r3.xywx, r0.xyzx
div r0.w, v4.x, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb3[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad r5.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
min o0.xyzw, r5.xyzw, l(100.000000, 100.000000, 100.000000, 100.000000)
ret 
// Approximately 0 instruction slots used