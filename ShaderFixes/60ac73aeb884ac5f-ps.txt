// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 60ac73aeb884ac5f-ps.txt
// 3DMigoto: 60ac73aeb884ac5f |    Unity headers extracted from Standard (Specular setup)
//    Shader "Standard (Specular setup)" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
// 1:   SubShader 1/2 {
// 2:   SubShader 2/2 {
// 2:     LOD 150
// 1:     LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
// 2:     Pass 1/4 {
// 1:     Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard (Specular setup):
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 189 12 8
//   undeciphered1a: 15
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_EXP2" "_EMISSION" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
//   undeciphered2: 1 11 8 10 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1200
//   Vector 32 [_LightColor0]
//   Vector 1088 [_Color]
//   Float 1168 [_GlossMapScale]
//   Float 1172 [_OcclusionStrength]
//   Vector 1184 [_EmissionColor]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 30
//   SetTexture 1 [_SpecGlossMap] 2D 60
//   SetTexture 2 [_DetailMask] 2D 50
//   SetTexture 3 [_DetailAlbedoMap] 2D 40
//   SetTexture 4 [_ShadowMapTexture] 2D 90
//   SetTexture 5 [_OcclusionMap] 2D 70
//   SetTexture 6 [_EmissionMap] 2D 80
//   SetTexture 7 [unity_ShadowMask] 2D 00
//   SetTexture 8 [unity_SpecCube0] CUBE 10
//   SetTexture 9 [unity_SpecCube1] CUBE -10
//   SetTexture 10 [unity_ProbeVolumeSH] 3D 20
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityReflectionProbes" 6
//   BindCB "UnityProbeVolume" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:23:39 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float      w
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[75], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_constantbuffer cb7[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps_siv linear noperspective v0.w, position
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.w
dcl_input_ps linear v4.w
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyzw
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 60ac73aeb884ac5f-ps.txt

mul r15.w, -r15.x, r15.y
mad r16.xyz, -r15.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t1.xyzw, s6
sample r1.xyzw, v1.xyxx, t0.xyzw, s3
mul r1.xyz, r1.xyzx, cb0[68].xyzx
sample r2.xyzw, v1.xyxx, t2.xyzw, s5
sample r3.xyzw, v1.zwzz, t3.xyzw, s4
mul r2.xyz, r2.wwww, r3.xyzx
add r1.w, -r2.w, l(1.000000)
mad r2.xyz, r2.xyzx, l(4.594794, 4.594794, 4.594794, 0.000000), r1.wwww
mul r1.xyz, r1.xyzx, r2.xyzx
max r1.w, r0.y, r0.x
max r1.w, r0.z, r1.w
add r1.w, -r1.w, l(1.000000)
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r2.x, v5.xyzx, v5.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, v5.xyzx
dp3 r3.x, v2.xyzx, v2.xyzx
rsq r3.x, r3.x
mul r3.yzw, r3.xxxx, v2.xxyz
mov r4.x, v3.w
mov r4.y, v4.w
mov r4.z, v5.w
add r5.xyz, -r4.xyzx, r16.xyzx
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r4.w, r5.xyzx, r6.xyzx
add r5.xyz, r4.xyzx, -cb3[25].xyzx
dp3 r5.x, r5.xyzx, r5.xyzx
sqrt r5.x, r5.x
add r5.x, -r4.w, r5.x
mad r4.w, cb3[25].w, r5.x, r4.w
mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
eq r5.x, cb7[0].x, l(1.000000)
if_nz r5.x
  eq r5.y, cb7[0].y, l(1.000000)
  mul r6.xyz, v4.wwww, cb7[2].xyzx
  mad r6.xyz, cb7[1].xyzx, v3.wwww, r6.xyzx
  mad r6.xyz, cb7[3].xyzx, v5.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb7[4].xyzx
  movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  add r5.yzw, r5.yyzw, -cb7[6].xxyz
  mul r6.yzw, r5.yyzw, cb7[5].xxyz
  mad r5.y, r6.y, l(0.250000), l(0.750000)
  mad r5.z, cb7[0].z, l(0.500000), l(0.750000)
  max r6.x, r5.z, r5.y
  sample r6.xyzw, r6.xzwx, t10.xyzw, s2
else 
  sample r6.xyzw, v7.xyxx, t7.xyzw, s0
endif 
dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
div r5.zw, v7.zzzw, v0.wwww
sample r6.xyzw, r5.zwzz, t4.xyzw, s9
add_sat r4.w, r4.w, r6.x
min r4.w, r5.y, r4.w
sample r6.xyzw, v1.xyxx, t5.xyzw, s7
add r5.y, -cb0[73].y, l(1.000000)
mad r5.y, r6.y, cb0[73].y, r5.y
mad r5.z, -r0.w, cb0[73].x, l(1.000000)
dp3 r5.w, r3.yzwy, r2.xyzx
add r5.w, r5.w, r5.w
mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
mul r7.xyz, r4.wwww, cb0[2].xyzx
if_nz r5.x
  eq r4.w, cb7[0].y, l(1.000000)
  mul r8.xyz, v4.wwww, cb7[2].xyzx
  mad r8.xyz, cb7[1].xyzx, v3.wwww, r8.xyzx
  mad r8.xyz, cb7[3].xyzx, v5.wwww, r8.xyzx
  add r8.xyz, r8.xyzx, cb7[4].xyzx
  movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  add r8.xyz, r8.xyzx, -cb7[6].xyzx
  mul r8.yzw, r8.xxyz, cb7[5].xxyz
  mul r4.w, r8.y, l(0.250000)
  mul r5.x, cb7[0].z, l(0.500000)
  mad r5.w, -cb7[0].z, l(0.500000), l(0.250000)
  max r4.w, r4.w, r5.x
  min r8.x, r5.w, r4.w
  sample r9.xyzw, r8.xzwx, t10.xyzw, s2
  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r10.xyzw, r10.xyzx, t10.xyzw, s2
  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r8.xyzw, r8.xyzx, t10.xyzw, s2
  mov r2.w, l(1.000000)
  dp4 r9.x, r9.xyzw, r2.xyzw
  dp4 r9.y, r10.xyzw, r2.xyzw
  dp4 r9.z, r8.xyzw, r2.xyzw
else 
  mov r2.w, l(1.000000)
  dp4 r9.x, cb2[39].xyzw, r2.xyzw
  dp4 r9.y, cb2[40].xyzw, r2.xyzw
  dp4 r9.z, cb2[41].xyzw, r2.xyzw
endif 
add r8.xyz, r9.xyzx, v6.xyzx
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb6[2].w
if_nz r2.w
  dp3 r2.w, r6.xyzx, r6.xyzx
  rsq r2.w, r2.w
  mul r9.xyz, r2.wwww, r6.xyzx
  add r10.xyz, -r4.xyzx, cb6[0].xyzx
  div r10.xyz, r10.xyzx, r9.xyzx
  add r11.xyz, -r4.xyzx, cb6[1].xyzx
  div r11.xyz, r11.xyzx, r9.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r2.w, r10.y, r10.x
  min r2.w, r10.z, r2.w
  add r10.xyz, r4.xyzx, -cb6[2].xyzx
  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
else 
  mov r9.xyz, r6.xyzx
endif 
mad r2.w, -r5.z, l(0.700000), l(1.700000)
mul r2.w, r2.w, r5.z
mul r2.w, r2.w, l(6.000000)
sample_l r9.xyzw, r9.xyzx, t8.xyzw, s1, r2.w
add r4.w, r9.w, l(-1.000000)
mad r4.w, cb6[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb6[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb6[3].x
mul r10.xyz, r9.xyzx, r4.wwww
lt r5.x, cb6[1].w, l(0.999990)
if_nz r5.x
  lt r5.x, l(0.000000), cb6[6].w
  if_nz r5.x
    dp3 r5.x, r6.xyzx, r6.xyzx
    rsq r5.x, r5.x
    mul r11.xyz, r5.xxxx, r6.xyzx
    add r12.xyz, -r4.xyzx, cb6[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -r4.xyzx, cb6[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r5.x, r12.y, r12.x
    min r5.x, r12.z, r5.x
    add r4.xyz, r4.xyzx, -cb6[6].xyzx
    mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
  endif 
  sample_l r6.xyzw, r6.xyzx, t9.xyzw, s1, r2.w
  add r2.w, r6.w, l(-1.000000)
  mad r2.w, cb6[7].w, r2.w, l(1.000000)
  log r2.w, r2.w
  mul r2.w, r2.w, cb6[7].y
  exp r2.w, r2.w
  mul r2.w, r2.w, cb6[7].x
  mul r4.xyz, r6.xyzx, r2.wwww
  mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
  mad r10.xyz, cb6[1].wwww, r6.xyzx, r4.xyzx
endif 
mul r4.xyz, r5.yyyy, r10.xyzx
mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
dp3 r2.w, r6.xyzx, r6.xyzx
max r2.w, r2.w, l(0.001000)
rsq r2.w, r2.w
mul r6.xyz, r2.wwww, r6.xyzx
dp3 r2.w, r2.xyzx, -r3.yzwy
dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
dp3_sat r2.x, r2.xyzx, r6.xyzx
dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
mul r2.z, r2.y, r2.y
dp2 r2.z, r2.zzzz, r5.zzzz
add r2.z, r2.z, l(-0.500000)
add r3.y, -r3.x, l(1.000000)
mul r3.z, r3.y, r3.y
mul r3.z, r3.z, r3.z
mul r3.y, r3.y, r3.z
mad r3.y, r2.z, r3.y, l(1.000000)
add r3.z, -|r2.w|, l(1.000000)
mul r3.w, r3.z, r3.z
mul r3.w, r3.w, r3.w
mul r3.z, r3.z, r3.w
mad r2.z, r2.z, r3.z, l(1.000000)
mul r2.z, r2.z, r3.y
mul r3.y, r5.z, r5.z
max r3.y, r3.y, l(0.002000)
add r3.w, -r3.y, l(1.000000)
mad r4.w, |r2.w|, r3.w, r3.y
mad r3.w, r3.x, r3.w, r3.y
mul r2.w, |r2.w|, r3.w
mad r2.w, r3.x, r4.w, r2.w
add r2.w, r2.w, l(0.000010)
div r2.w, l(0.500000), r2.w
mul r3.w, r3.y, r3.y
mad r4.w, r2.x, r3.w, -r2.x
mad r2.x, r4.w, r2.x, l(1.000000)
mul r3.w, r3.w, l(0.318309873)
mad r2.x, r2.x, r2.x, l(1.000000012E-007)
div r2.x, r3.w, r2.x
mul r2.x, r2.x, r2.w
mul r2.x, r2.x, l(3.14159274)
mul r2.xz, r3.xxxx, r2.xxzx
max r2.x, r2.x, l(0.000000)
mad r2.w, r3.y, r3.y, l(1.000000)
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
dp3 r3.x, r0.xyzx, r0.xyzx
ne r3.x, r3.x, l(0.000000)
and r3.x, r3.x, l(0x3f800000)
mul r2.x, r2.x, r3.x
mad r0.w, r0.w, cb0[73].x, -r1.w
add_sat r0.w, r0.w, l(1.000000)
mul r3.xyw, r2.zzzz, r7.xyxz
mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
mul r5.xyz, r7.xyzx, r2.xxxx
add r1.w, -r2.y, l(1.000000)
mul r2.x, r1.w, r1.w
mul r2.x, r2.x, r2.x
mul r1.w, r1.w, r2.x
add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
mul r2.xyz, r2.xyzx, r5.xyzx
mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
mul r2.xyz, r4.xyzx, r2.wwww
add r3.xyw, -r0.xyxz, r0.wwww
mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
sample r1.xyzw, v1.xyxx, t6.xyzw, s8
mad r0.xyz, r1.xyzx, cb0[74].xyzx, r0.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, cb5[1].x
mul r0.w, r0.w, -r0.w
exp r0.w, r0.w
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 0 instruction slots used