// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5c7ba623f0d07860-ps.txt
// 3DMigoto: 5c7ba623f0d07860 |    Unity headers extracted from Alloy_Human_Hair_HighQuality TwoSided
//    Shader "Alloy/Human/Hair/HighQuality TwoSided" {
//      CustomEditor "AlloyFieldBasedEditor"
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest+1" "RenderType"="TransparentCutout" }
// 1:     Pass 4/8 {
// 2:     Pass 6/8 {
// 1:       Name "TRANSLUCENT_BACK_FORWARD_DELTA"
// 2:       Name "TRANSLUCENT_FRONT_FORWARD_DELTA"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="AlphaTest+1" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Alloy_Human_Hair_HighQuality TwoSided:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 136 5 2
//   undeciphered1a: 10
//   Keywords { "SPOT" }
//   undeciphered2: 1 5 4 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1424
//   Vector 0 [_LightColor0]
//   Float 112 [_HairDiffuseWrapAmount]
//   Float 116 [_HairSpecularity]
//   Float 120 [_AnisoAngle]
//   Vector 128 [_HighlightTint0] 3
//   Float 140 [_HighlightShift0]
//   Float 144 [_HighlightWidth0]
//   Vector 148 [_HighlightTint1] 3
//   Float 160 [_HighlightShift1]
//   Float 164 [_HighlightWidth1]
//   Vector 224 [_Color]
//   Vector 240 [_MainTex_ST]
//   Vector 256 [_MainTexVelocity] 2
//   Float 268 [_MainTexUV]
//   Float 304 [_BaseColorVertexTint]
//   Float 324 [_Occlusion]
//   Float 328 [_BumpScale]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 10
//   SetTexture 1 [_SpecTex] 2D 20
//   SetTexture 2 [_BumpMap] 2D 30
//   SetTexture 3 [_LightTexture0] 2D 40
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 00
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:22:38 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 1   xyzw        0     NONE   float   xyzw
// TEXCOORD                 2   xyzw        1     NONE   float   xyzw
// SV_POSITION              0   xyzw        2      POS   float       
// TEXCOORD                 3   xyzw        3     NONE   float   xyz 
// TEXCOORD                 4   xyzw        4     NONE   float   xyz 
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyz         7     NONE   float   xyz 
// TEXCOORD                 8   xyz         8     NONE   float   xyz 
// SV_IsFrontFace           0   x           9    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[21], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v0.xyzw
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_input_ps_sgv v9.x, is_front_face
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5c7ba623f0d07860-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

movc r0.x, v9.x, l(1.000000), l(-1.000000)
mul r0.xyz, r0.xxxx, v8.xyzx
add r1.xyz, -v4.xyzx, r11.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
lt r1.w, cb0[16].w, l(0.500000)
movc r3.xy, r1.wwww, v5.xyxx, v5.zwzz
mad r3.zw, cb0[16].xxxy, cb1[0].yyyy, cb0[15].zzzw
div r3.zw, r3.zzzw, cb0[15].xxxy
add r3.xy, r3.zwzz, r3.xyxx
mul r3.xy, r3.xyxx, cb0[15].xyxx
add r4.xyz, v3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, cb0[19].xxxx, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, cb0[14].xyzx
sample r5.xyzw, r3.xyxx, t0.xyzw, s1
mul_sat r4.xyz, r4.xyzx, r5.xyzx
mul r5.w, r5.w, cb0[14].w
sample r6.xyzw, r3.xyxx, t1.xyzw, s2
mad r1.w, r6.y, l(0.305306017), l(0.682171106)
mad r1.w, r6.y, r1.w, l(0.0125228781)
add r2.w, r6.x, l(-0.500000)
mul r7.xyz, r6.zzzz, cb0[8].xyzx
add r3.z, r2.w, cb0[8].w
add r2.w, r2.w, cb0[10].x
mad r1.w, r6.y, r1.w, l(-1.000000)
mad r1.w, cb0[20].y, r1.w, l(1.000000)
mul r6.xy, cb0[7].zyzz, l(0.0174532924, 0.080000, 0.000000, 0.000000)
sincos r6.x, r8.x, r6.x
sample r9.xyzw, r3.xyxx, t2.xyzw, s3
mul r9.x, r9.w, r9.x
mad r3.xy, r9.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[20].zzzz
dp2 r3.w, r3.xyxx, r3.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.w, r3.w
mul r8.yzw, r3.yyyy, v7.xxyz
mad r8.yzw, r3.xxxx, v6.xxyz, r8.yyzw
mad r0.xyz, r3.wwww, r0.xyzx, r8.yzwy
dp3 r3.x, r0.xyzx, r0.xyzx
rsq r3.x, r3.x
mul r0.xyz, r0.xyzx, r3.xxxx
dp3_sat r2.x, r0.xyzx, r2.xyzx
add r2.x, r1.w, r2.x
mad r1.w, r2.x, r2.x, r1.w
add_sat r1.w, r1.w, l(-1.000000)
mul r2.xyz, r6.xxxx, v7.xyzx
mad r2.xyz, r8.xxxx, v6.xyzx, r2.xyzx
dp3 r3.x, r2.xyzx, r2.xyzx
rsq r3.x, r3.x
mul r2.xyz, r2.xyzx, r3.xxxx
mul r3.xyw, r7.xyxz, r6.yyyy
add r4.w, -r6.w, l(1.000000)
mad r6.x, cb0[9].x, r4.w, r6.w
mul r7.xyz, r6.yyyy, cb0[9].yzwy
mad r4.w, cb0[10].y, r4.w, r6.w
eq r6.y, cb3[0].x, l(1.000000)
if_nz r6.y
  eq r6.y, cb3[0].y, l(1.000000)
  mul r8.xyz, v4.yyyy, cb3[2].xyzx
  mad r8.xyz, cb3[1].xyzx, v4.xxxx, r8.xyzx
  mad r8.xyz, cb3[3].xyzx, v4.zzzz, r8.xyzx
  add r8.xyz, r8.xyzx, cb3[4].xyzx
  movc r6.yzw, r6.yyyy, r8.xxyz, v4.xxyz
  add r6.yzw, r6.yyzw, -cb3[6].xxyz
  mul r8.yzw, r6.yyzw, cb3[5].xxyz
  mad r6.y, r8.y, l(0.250000), l(0.750000)
  mad r6.z, cb3[0].z, l(0.500000), l(0.750000)
  max r8.x, r6.z, r6.y
  sample r8.xyzw, r8.xzwx, t4.xyzw, s0
else 
  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif 
dp4_sat r6.y, r8.xyzw, cb2[46].xyzw
div r6.zw, v0.xxxy, v0.wwww
add r6.zw, r6.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
sample r8.xyzw, r6.zwzz, t3.xyzw, s4
lt r6.z, l(0.000000), v0.z
and r6.z, r6.z, l(0x3f800000)
mul r6.z, r6.z, r8.w
mul r8.xyz, r6.zzzz, r8.xyzx
mul r8.xyz, r8.xyzx, cb0[0].xyzx
mad r1.xyz, r1.xyzx, r0.wwww, v1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, v1.xyzx, v1.xyzx
rsq r6.z, r0.w
mul r9.xyzw, r6.zzzz, v1.xyzw
dp3 r6.z, r0.xyzx, r9.xyzx
mov_sat r6.w, r6.z
add r0.w, r0.w, l(1.000000)
div r8.xyz, r8.xyzx, r0.wwww
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r9.w
mul r0.w, r0.w, r0.w
mad r0.w, -r0.w, r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
mul r0.w, r0.w, r0.w
mul r8.xyz, r0.wwww, r8.xyzx
lt r0.w, l(0.000000), cb0[0].w
and r0.w, r0.w, l(0x3f800000)
add r7.w, cb0[7].x, l(1.000000)
add r6.z, r6.z, cb0[7].x
mul r7.w, r7.w, r7.w
div_sat r6.z, r6.z, r7.w
mad r6.x, r6.x, l(0.950000), l(0.050000)
mul r6.x, r6.x, r6.x
mul r6.x, r6.x, r6.x
div r6.x, l(2.000000), r6.x
add r6.x, r6.x, l(-2.000000)
mad r9.xyz, r0.xyzx, r3.zzzz, r2.xyzx
dp3 r3.z, r9.xyzx, r9.xyzx
rsq r3.z, r3.z
mul r9.xyz, r3.zzzz, r9.xyzx
dp3 r3.z, r9.xyzx, r1.xyzx
mad r7.w, r6.x, l(0.125000), l(0.250000)
mad r3.z, -r3.z, r3.z, l(1.000000)
sqrt r3.z, r3.z
log r3.z, r3.z
mul r3.z, r3.z, r6.x
exp r3.z, r3.z
mul r3.z, r3.z, r7.w
mul r3.xyz, r3.zzzz, r3.xywx
mad r3.w, r4.w, l(0.950000), l(0.050000)
mul r3.w, r3.w, r3.w
mul r3.w, r3.w, r3.w
div r3.w, l(2.000000), r3.w
add r3.w, r3.w, l(-2.000000)
mad r0.xyz, r0.xyzx, r2.wwww, r2.xyzx
dp3 r2.x, r0.xyzx, r0.xyzx
rsq r2.x, r2.x
mul r0.xyz, r0.xyzx, r2.xxxx
dp3 r0.x, r0.xyzx, r1.xyzx
mad r0.y, r3.w, l(0.125000), l(0.250000)
mad r0.x, -r0.x, r0.x, l(1.000000)
sqrt r0.x, r0.x
log r0.x, r0.x
mul r0.x, r0.x, r3.w
exp r0.x, r0.x
mul r0.x, r0.x, r0.y
mul r0.xyz, r0.xxxx, r7.xyzx
mul r0.w, r0.w, r1.w
mul r0.w, r6.w, r0.w
max r0.xyz, r0.xyzx, r3.xyzx
mul r0.xyz, r0.xyzx, r0.wwww
mul r1.xyz, r6.yyyy, r8.xyzx
mad r0.xyz, r4.xyzx, r6.zzzz, r0.xyzx
mul r5.xyz, r0.xyzx, r1.xyzx
min o0.xyzw, r5.xyzw, l(100.000000, 100.000000, 100.000000, 100.000000)
ret 
// Approximately 0 instruction slots used