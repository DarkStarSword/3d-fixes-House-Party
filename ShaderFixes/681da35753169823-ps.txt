// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 681da35753169823-ps.txt
// 3DMigoto: 681da35753169823 | Matched 2 variants of 1 shaders: Alloy/Core
//
//       Unity headers extracted from Alloy_Core
//       Shader "Alloy/Core" {
//         CustomEditor "AlloyFieldBasedEditor"
//         Fallback "VertexLit"
//         SubShader 1/1 {
//           LOD 300
//           Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//           Pass 4/5 {
//             Name "DEFERRED"
//             Tags { "LIGHTMODE"="DEFERRED" "PerformanceChecks"="False" "RenderType"="Opaque" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Alloy_Core:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201708220 38 2 0
//      undeciphered1a: 3
// 2:   Keywords { "_NORMALMAP" }
//      undeciphered2: 1 2 2 2 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 1296
//      Vector 160 [_Color]
//      Vector 176 [_MainTex_ST]
//      Vector 192 [_MainTexVelocity] 2
//      Float 204 [_MainTexUV]
//      Float 240 [_BaseColorVertexTint]
//      Float 244 [_Metal]
//      Float 248 [_Specularity]
//      Float 252 [_SpecularTint]
//      Float 256 [_Roughness]
//      Float 260 [_Occlusion]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      SetTexture 0 [_MainTex] 2D 00
//      SetTexture 1 [_SpecTex] 2D 10
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:25:18 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float       
// SV_POSITION              0   xyzw        1      POS   float       
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 5
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 681da35753169823-ps.txt

mul r3.w, -r3.x, r3.y
mad r4.xyz, -r3.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r4.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v5.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
lt r0.y, cb0[12].w, l(0.500000)
movc r0.yz, r0.yyyy, v4.xxyx, v4.zzwz
mad r1.xy, cb0[12].xyxx, cb1[0].yyyy, cb0[11].zwzz
div r1.xy, r1.xyxx, cb0[11].xyxx
add r0.yz, r0.yyzy, r1.xxyx
mul r0.yz, r0.yyzy, cb0[11].xxyx
sample r1.xyzw, r0.yzyy, t1.xyzw, s1
sample r2.xyzw, r0.yzyy, t0.xyzw, s0
mad r0.y, r1.y, l(0.305306017), l(0.682171106)
mad r0.y, r1.y, r0.y, l(0.0125228781)
mad r0.y, r1.y, r0.y, l(-1.000000)
mad r0.y, cb0[16].y, r0.y, l(1.000000)
add r0.x, r0.y, r0.x
mad r0.x, r0.x, r0.x, r0.y
add_sat o0.w, r0.x, l(-1.000000)
mad r0.x, -cb0[15].y, r1.x, l(1.000000)
add r0.yzw, v2.xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r0.yzw, cb0[15].xxxx, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r0.yzw, r0.yyzw, cb0[10].xxyz
mul_sat r0.yzw, r0.yyzw, r2.xxyz
mul o0.xyz, r0.xxxx, r0.yzwy
dp3 r0.x, r0.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
max r0.x, r0.x, l(0.000001)
div r2.xyz, r0.yzwy, r0.xxxx
add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, cb0[15].wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xy, r1.xzxx, cb0[15].yzyy
mad o1.w, -cb0[16].x, r1.w, l(1.000000)
mul r0.x, r1.y, l(0.080000)
mad r0.yzw, -r0.xxxx, r2.xxyz, r0.yyzw
mul r1.yzw, r2.xxyz, r0.xxxx
mad o1.xyz, r1.xxxx, r0.yzwy, r1.yzwy
mov o2.w, l(1.000000)
mov o3.xyzw, l(1.000000,1.000000,1.000000,0)
ret 
// Approximately 0 instruction slots used