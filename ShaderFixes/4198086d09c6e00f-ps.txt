// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4198086d09c6e00f-ps.txt
// 3DMigoto: 4198086d09c6e00f |    Unity headers extracted from Alloy_Human_Hair_HighQuality TwoSided
//    Shader "Alloy/Human/Hair/HighQuality TwoSided" {
//      CustomEditor "AlloyFieldBasedEditor"
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 400
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest+1" "RenderType"="TransparentCutout" }
// 1:     Pass 3/8 {
// 2:     Pass 5/8 {
// 1:       Name "TRANSLUCENT_BACK_FORWARD"
// 2:       Name "TRANSLUCENT_FRONT_FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="AlphaTest+1" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Alloy_Human_Hair_HighQuality TwoSided:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201708220 217 10 6
//   undeciphered1a: 17
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_COMBINED" "LIGHTMAP_SHADOW_MIXING" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
//   undeciphered2: 1 10 7 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 1360
//   Vector 0 [_LightColor0]
//   Float 112 [_HairDiffuseWrapAmount]
//   Float 116 [_HairSpecularity]
//   Float 120 [_AnisoAngle]
//   Vector 128 [_HighlightTint0] 3
//   Float 140 [_HighlightShift0]
//   Float 144 [_HighlightWidth0]
//   Vector 148 [_HighlightTint1] 3
//   Float 160 [_HighlightShift1]
//   Float 164 [_HighlightWidth1]
//   Vector 176 [unity_Lightmap_HDR]
//   Vector 224 [_Color]
//   Vector 240 [_MainTex_ST]
//   Vector 256 [_MainTexVelocity] 2
//   Float 268 [_MainTexUV]
//   Float 304 [_BaseColorVertexTint]
//   Float 324 [_Occlusion]
//   Float 328 [_BumpScale]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 672 [unity_SHBr]
//   Vector 688 [unity_SHBg]
//   Vector 704 [unity_SHBb]
//   Vector 720 [unity_SHC]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 30
//   SetTexture 1 [_SpecTex] 2D 40
//   SetTexture 2 [_BumpMap] 2D 50
//   SetTexture 3 [_ShadowMapTexture] 2D 60
//   SetTexture 4 [unity_Lightmap] 2D 00
//   SetTexture 5 [unity_LightmapInd] 2D -10
//   SetTexture 6 [unity_ShadowMask] 2D -10
//   SetTexture 7 [unity_SpecCube0] CUBE 10
//   SetTexture 8 [unity_SpecCube1] CUBE -10
//   SetTexture 9 [unity_ProbeVolumeSH] 3D 20
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityReflectionProbes" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.2.71 on Fri Feb 23 15:16:42 2018
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy  
// TEXCOORD                 1   xyzw        1     NONE   float   xy w
// SV_POSITION              0   xyzw        2      POS   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyz         8     NONE   float   xyz 
// SV_IsFrontFace           0   x           9    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[21], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_input_ps linear v0.xy
dcl_input_ps linear v1.xyw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_input_ps_sgv v9.x, is_front_face
dcl_output o0.xyzw
dcl_temps 19
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r17.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4198086d09c6e00f-ps.txt

mul r17.w, -r17.x, r17.y
mad r18.xyz, -r17.wwww, cb10[0].xyzw, cb1[4].xyzw

movc r0.x, v9.x, l(1.000000), l(-1.000000)
mul r0.xyz, r0.xxxx, v8.xyzx
add r1.xyz, -v4.xyzx, r18.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
lt r1.w, cb0[16].w, l(0.500000)
movc r3.xy, r1.wwww, v5.xyxx, v5.zwzz
mad r3.zw, cb0[16].xxxy, cb1[0].yyyy, cb0[15].zzzw
div r3.zw, r3.zzzw, cb0[15].xxxy
add r3.xy, r3.zwzz, r3.xyxx
mul r3.xy, r3.xyxx, cb0[15].xyxx
add r4.xyz, v3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, cb0[19].xxxx, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, cb0[14].xyzx
sample r5.xyzw, r3.xyxx, t0.xyzw, s3
mul_sat r4.xyz, r4.xyzx, r5.xyzx
mul r5.w, r5.w, cb0[14].w
sample r6.xyzw, r3.xyxx, t1.xyzw, s4
mad r1.w, r6.y, l(0.305306017), l(0.682171106)
mad r1.w, r6.y, r1.w, l(0.0125228781)
add r2.w, r6.x, l(-0.500000)
mul r7.xyz, r6.zzzz, cb0[8].xyzx
add r3.z, r2.w, cb0[8].w
add r2.w, r2.w, cb0[10].x
mad r1.w, r6.y, r1.w, l(-1.000000)
mad r1.w, cb0[20].y, r1.w, l(1.000000)
mul r6.xy, cb0[7].zyzz, l(0.0174532924, 0.080000, 0.000000, 0.000000)
sincos r6.x, r8.x, r6.x
sample r9.xyzw, r3.xyxx, t2.xyzw, s5
mul r9.x, r9.w, r9.x
mad r3.xy, r9.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[20].zzzz
dp2 r3.w, r3.xyxx, r3.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.w, r3.w
mul r8.yzw, r3.yyyy, v7.xxyz
mad r8.yzw, r3.xxxx, v6.xxyz, r8.yyzw
mad r0.xyz, r3.wwww, r0.xyzx, r8.yzwy
dp3 r3.x, r0.xyzx, r0.xyzx
rsq r3.x, r3.x
mul r9.xyz, r0.xyzx, r3.xxxx
dp3 r0.x, -r2.xyzx, r9.xyzx
add r0.x, r0.x, r0.x
mad r0.xyz, r9.xyzx, -r0.xxxx, -r2.xyzx
dp3_sat r2.x, r9.xyzx, r2.xyzx
add r2.x, r1.w, r2.x
mad r2.x, r2.x, r2.x, r1.w
add_sat r2.x, r2.x, l(-1.000000)
mul r3.xyw, r6.xxxx, v7.xyxz
mad r3.xyw, r8.xxxx, v6.xyxz, r3.xyxw
dp3 r2.y, r3.xywx, r3.xywx
rsq r2.y, r2.y
mul r3.xyw, r2.yyyy, r3.xyxw
mul r8.xyz, r7.xyzx, r6.yyyy
add r2.y, -r6.w, l(1.000000)
mad r2.z, cb0[9].x, r2.y, r6.w
mul r10.xyz, r6.yyyy, cb0[9].yzwy
mad r2.y, cb0[10].y, r2.y, r6.w
mad r6.xyz, r6.yyyy, r7.xyzx, r10.xyzx
mul r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
add r4.w, r2.y, r2.z
div r7.xy, v1.xyxx, v1.wwww
sample r7.xyzw, r7.xyxx, t3.xyzw, s6
sample r11.xyzw, v0.xyxx, t6.xyzw, s0
dp4_sat r6.w, r11.xyzw, cb2[46].xyzw
mov r11.x, cb4[9].z
mov r11.y, cb4[10].z
mov r11.z, cb4[11].z
dp3 r7.y, r1.xyzx, r11.xyzx
add r11.xyz, v4.xyzx, -cb3[25].xyzx
dp3 r7.z, r11.xyzx, r11.xyzx
sqrt r7.z, r7.z
add r7.z, -r7.y, r7.z
mad r7.y, cb3[25].w, r7.z, r7.y
mad_sat r7.y, r7.y, cb3[24].z, cb3[24].w
add_sat r7.x, r7.y, r7.x
min r6.w, r6.w, r7.x
eq r7.x, cb6[0].x, l(1.000000)
if_nz r7.x
  eq r7.x, cb6[0].y, l(1.000000)
  mul r7.yzw, v4.yyyy, cb6[2].xxyz
  mad r7.yzw, cb6[1].xxyz, v4.xxxx, r7.yyzw
  mad r7.yzw, cb6[3].xxyz, v4.zzzz, r7.yyzw
  add r7.yzw, r7.yyzw, cb6[4].xxyz
  movc r7.xyz, r7.xxxx, r7.yzwy, v4.xyzx
  add r7.xyz, r7.xyzx, -cb6[6].xyzx
  mul r7.yzw, r7.xxyz, cb6[5].xxyz
  mul r7.y, r7.y, l(0.250000)
  mul r8.w, cb6[0].z, l(0.500000)
  mad r10.w, -cb6[0].z, l(0.500000), l(0.250000)
  max r7.y, r7.y, r8.w
  min r7.x, r10.w, r7.y
  sample r11.xyzw, r7.xzwx, t9.xyzw, s2
  add r12.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r12.xyzw, r12.xyzx, t9.xyzw, s2
  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r7.xyzx, t9.xyzw, s2
  mov r9.w, l(1.000000)
  dp4 r11.x, r11.xyzw, r9.xyzw
  dp4 r11.y, r12.xyzw, r9.xyzw
  dp4 r11.z, r7.xyzw, r9.xyzw
else 
  mov r9.w, l(1.000000)
  dp4 r11.x, cb2[39].xyzw, r9.xyzw
  dp4 r11.y, cb2[40].xyzw, r9.xyzw
  dp4 r11.z, cb2[41].xyzw, r9.xyzw
endif 
mul r7.xyzw, r9.yzzx, r9.xyzz
dp4 r12.x, cb2[42].xyzw, r7.xyzw
dp4 r12.y, cb2[43].xyzw, r7.xyzw
dp4 r12.z, cb2[44].xyzw, r7.xyzw
mul r7.x, r9.y, r9.y
mad r7.x, r9.x, r9.x, -r7.x
mad r7.xyz, cb2[45].xyzx, r7.xxxx, r12.xyzx
add r7.xyz, r7.xyzx, r11.xyzx
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
sample r11.xyzw, v0.xyxx, t4.xyzw, s0
log r7.w, r11.w
mul r7.w, r7.w, cb0[11].y
exp r7.w, r7.w
mul r7.w, r7.w, cb0[11].x
mul r11.xyz, r11.xyzx, r7.wwww
sample r12.xyzw, v0.xyxx, t5.xyzw, s0
add r12.xyz, r12.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r7.w, r9.xyzx, r12.xyzx
add r7.w, r7.w, l(0.500000)
mul r11.xyz, r7.wwww, r11.xyzx
max r7.w, r12.w, l(0.000100)
div r11.xyz, r11.xyzx, r7.wwww
add r7.xyz, r7.xyzx, r11.xyzx
lt r7.w, l(0.000000), cb5[2].w
if_nz r7.w
  dp3 r7.w, r0.xyzx, r0.xyzx
  rsq r7.w, r7.w
  mul r11.xyz, r0.xyzx, r7.wwww
  add r12.xyz, -v4.xyzx, cb5[0].xyzx
  div r12.xyz, r12.xyzx, r11.xyzx
  add r13.xyz, -v4.xyzx, cb5[1].xyzx
  div r13.xyz, r13.xyzx, r11.xyzx
  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
  min r7.w, r12.y, r12.x
  min r7.w, r12.z, r7.w
  add r12.xyz, v4.xyzx, -cb5[2].xyzx
  mad r11.xyz, r11.xyzx, r7.wwww, r12.xyzx
else 
  mov r11.xyz, r0.xyzx
endif 
mul r7.w, r4.w, l(0.500000)
mad r4.w, -r4.w, l(0.350000), l(1.700000)
mul r4.w, r4.w, r7.w
mul r4.w, r4.w, l(6.000000)
sample_l r11.xyzw, r11.xyzx, t7.xyzw, s1, r4.w
add r7.w, r11.w, l(-1.000000)
mad r7.w, cb5[3].w, r7.w, l(1.000000)
log r7.w, r7.w
mul r7.w, r7.w, cb5[3].y
exp r7.w, r7.w
mul r7.w, r7.w, cb5[3].x
mul r12.xyz, r11.xyzx, r7.wwww
lt r8.w, cb5[1].w, l(0.999990)
if_nz r8.w
  lt r8.w, l(0.000000), cb5[6].w
  if_nz r8.w
    dp3 r8.w, r0.xyzx, r0.xyzx
    rsq r8.w, r8.w
    mul r13.xyz, r0.xyzx, r8.wwww
    add r14.xyz, -v4.xyzx, cb5[4].xyzx
    div r14.xyz, r14.xyzx, r13.xyzx
    add r15.xyz, -v4.xyzx, cb5[5].xyzx
    div r15.xyz, r15.xyzx, r13.xyzx
    lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r13.xyzx
    movc r14.xyz, r16.xyzx, r14.xyzx, r15.xyzx
    min r8.w, r14.y, r14.x
    min r8.w, r14.z, r8.w
    add r14.xyz, v4.xyzx, -cb5[6].xyzx
    mad r0.xyz, r13.xyzx, r8.wwww, r14.xyzx
  endif 
  sample_l r13.xyzw, r0.xyzx, t8.xyzw, s1, r4.w
  add r0.x, r13.w, l(-1.000000)
  mad r0.x, cb5[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb5[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb5[7].x
  mul r0.xyz, r13.xyzx, r0.xxxx
  mad r11.xyz, r7.wwww, r11.xyzx, -r0.xyzx
  mad r12.xyz, cb5[1].wwww, r11.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.wwww, r7.xyzx
mad r7.xyz, -r7.xyzx, r1.wwww, r12.xyzx
mad r7.xyz, r2.xxxx, r7.xyzx, r0.xyzx
mul r6.xyz, r6.xyzx, r7.xyzx
mad r0.xyz, r4.xyzx, r0.xyzx, r6.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r9.xyzx, cb2[0].xyzx
mov_sat r1.w, r0.w
lt r4.w, l(0.000000), cb0[0].w
and r4.w, r4.w, l(0x3f800000)
add r6.x, cb0[7].x, l(1.000000)
add r0.w, r0.w, cb0[7].x
mul r6.x, r6.x, r6.x
div_sat r0.w, r0.w, r6.x
mad r2.z, r2.z, l(0.950000), l(0.050000)
mul r2.z, r2.z, r2.z
mul r2.z, r2.z, r2.z
div r2.z, l(2.000000), r2.z
add r2.z, r2.z, l(-2.000000)
mad r6.xyz, r9.xyzx, r3.zzzz, r3.xywx
dp3 r3.z, r6.xyzx, r6.xyzx
rsq r3.z, r3.z
mul r6.xyz, r3.zzzz, r6.xyzx
dp3 r3.z, r6.xyzx, r1.xyzx
mad r6.x, r2.z, l(0.125000), l(0.250000)
mad r3.z, -r3.z, r3.z, l(1.000000)
sqrt r3.z, r3.z
log r3.z, r3.z
mul r2.z, r2.z, r3.z
exp r2.z, r2.z
mul r2.z, r2.z, r6.x
mul r6.xyz, r2.zzzz, r8.xyzx
mad r2.y, r2.y, l(0.950000), l(0.050000)
mul r2.y, r2.y, r2.y
mul r2.y, r2.y, r2.y
div r2.y, l(2.000000), r2.y
add r2.y, r2.y, l(-2.000000)
mad r3.xyz, r9.xyzx, r2.wwww, r3.xywx
dp3 r2.z, r3.xyzx, r3.xyzx
rsq r2.z, r2.z
mul r3.xyz, r2.zzzz, r3.xyzx
dp3 r1.x, r3.xyzx, r1.xyzx
mad r1.y, r2.y, l(0.125000), l(0.250000)
mad r1.x, -r1.x, r1.x, l(1.000000)
sqrt r1.x, r1.x
log r1.x, r1.x
mul r1.x, r1.x, r2.y
exp r1.x, r1.x
mul r1.x, r1.x, r1.y
mul r1.xyz, r1.xxxx, r10.xyzx
mul r2.x, r2.x, r4.w
mul r1.w, r1.w, r2.x
max r1.xyz, r1.xyzx, r6.xyzx
mul r1.xyz, r1.xyzx, r1.wwww
mul r2.xyz, r6.wwww, cb0[0].xyzx
mad r1.xyz, r4.xyzx, r0.wwww, r1.xyzx
mad r5.xyz, r2.xyzx, r1.xyzx, r0.xyzx
min o0.xyzw, r5.xyzw, l(100.000000, 100.000000, 100.000000, 100.000000)
ret 
// Approximately 0 instruction slots used